angular.module("monacaServices",["ui.bootstrap","gettext","ngSanitize","PubSub","ngAnimate","ngToast","checklist-model","ngMessages","colorpicker.module"]).config(["$uibModalProvider","ngToastProvider",function(a,b){b.configure({animation:"slide",combineDuplications:!0}),MonacaApi.Config.setApiToken(window.config.apiToken),MonacaApi.Config.setLanguage(window.config.lang),MonacaApi.Config.setServiceEndpoint({web:window.config.monacaWebHostSsl,ide:window.config.monacaIdeHost})}]).run(["$rootScope","gettextCatalog",function(a,b){b.setCurrentLanguage(window.MonacaApi.Config.getLanguage()),moment.lang(window.MonacaApi.Config.getLanguage()),a.timestamp=function(){return Math.floor((new Date).getTime()/1e3)}}]),angular.module("monacaServices").constant("Constant",{EVENT:{NOTIFY_USER:"notify-user",RELOAD_IDE:"reload-ide",RELOAD_IDE_FILETREE:"reload-ide-filetree",CLOSE_INACTIVATE_IDE_TABS:"close-inactivate-ide-tabs"},PLUGIN:{INAPP_UPDATER:"io.monaca.plugins.inappupdater",INAPP_UPDATER_CORDOVA7:"monaca-plugin-inappupdater",CROSSWALK:"cordova-plugin-crosswalk-webview",ENCRYPTION:"mobi.monaca.plugins.Encrypt",ENCRYPTION_CORDOVA7:"monaca-plugin-encrypt"},PLAN:{ID_FREE:"Basic",ID_PERSONAL:"Personal",ID_DEVELOPER:"Developer",ID_PROFESSIONAL:"Gold",ID_BUSINESS:"Platinum",ID_EDUCATION:"Education",ID_API:"API License",ID_ENTERPRISE:"Enterprise",ID_RPG_TKOOL:"RPGTkool"},CORDOVA_PLUGIN_UPDATE_ENABLED_CARD:"cordova-plugin-update-enabled-card",CORDOVA_PLUGIN_REBUILD_COLLECTION:"cordova-plugin-rebuild-collection",PAGE_CI:1,PAGE_DEPLOY_SERVICE:2,PAGE_CORDOVA_PLUGINS:3,PAGE_WEB_COMPONENTS:4,PAGE_SERVICE_INTEGRATION:5,PAGE_ANDROID_BUILD:6,PAGE_IOS_BUILD:7,PAGE_WINDOWS_BUILD:8,PAGE_CHROME_BUILD:9,PAGE_ANDROID_APP_SETTINGS:10,PAGE_IOS_APP_SETTINGS:11,PAGE_WINDOWS_APP_SETTINGS:12,PAGE_CHROME_APP_SETTINGS:13,PAGE_ANDROID_BUILD_SETTINGS:14,PAGE_IOS_BUILD_SETTINGS:15,PAGE_BUILD_RESULT:16,PAGE_ANDROID_BUILD_DEBUGGER:17,PAGE_IOS_BUILD_DEBUGGER:18,PAGE_BUILD_HISTORY:19,PAGE_WEB_BUILD:20,PAGE_WEB_APP_SETTINGS:21}),angular.module("monacaServices").controller("AndroidAppSettingsController",["$scope","gettextCatalog","$uibModal","ProjectFactory","ProjectSettingFactory","SpinnerService","PubSub","Constant",function(a,b,c,d,e,f,g,h){var i=window.config.projectId,j={};a.cordovaVersion=d.getCurrentCordovaVersion(),a.isLoading={},a.settings={},a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.createSettingImageUrl=function(a,b){return config.ideHost+"/api/project/"+a+"/file/read/"+b+"?api_token="+window.MonacaApi.Config.getApiToken()},a.iconTypeList=function(){var b={iconLdpi_android:{w:36,h:36,label:""},iconMdpi_android:{w:48,h:48,label:""},iconHdpi_android:{w:72,h:72,label:""},iconXHdpi_android:{w:96,h:96,label:""},iconXXHdpi_android:{w:144,h:144,label:""},iconXXXHdpi_android:{w:192,h:192,label:""}};for(var c in b)b[c].url=a.createSettingImageUrl(i,c);return b}(),a.splashTypeList=function(){var b={splashLdpi_android:{w:"",h:"",label:"ldpi"},splashMdpi_android:{w:"",h:"",label:"mdpi"},splashHdpi_android:{w:"",h:"",label:"hdpi"},splashXHdpi_android:{w:"",h:"",label:"xhdpi"},splashXXHdpi_android:{w:"",h:"",label:"xxhdpi"},splashXXXHdpi_android:{w:"",h:"",label:"xxxhdpi"}};for(var c in b)b[c].url=a.createSettingImageUrl(i,c);return b}(),a.init=function(){e.loading.then(function(b){var c=b.project||{},d=b.config&&b.config.android?b.config.android:{},e=d.preference||{};a.settings.applicationName_android=d.applicationName,a.settings.applicationClass_android=d.applicationClass,a.settings.config_postfix="true"==e["monaca:AndroidIsPackageNameSeparate"],a.settings.versionName_android=d.versionName,a.settings.versionCode_android=d.versionCode,a.specifyVersionCode=!!a.settings.versionCode_android,a.settings.fullscreen_android="true"==e.Fullscreen,a.settings.splashtime_android=e.SplashScreenDelay||"",a.settings.config_access_origin_android=d.accessOrigin,a.settings.config_keeprunning="true"==e.KeepRunning,a.settings.config_disallow_overscroll_android="true"==e.DisallowOverscroll,a.settings.config_orientation_android=e.Orientation,a.isHighPerformanceWebView=!1,a.cordovaVersion<5&&(a.isHighPerformanceWebView="crosswalk"===e["monaca:WebViewEngine"]),a.rpg_background_images_android=c.rpg_background_images,c.selected_rpg_background_image&&(a.settings.selected_rpg_background_image_android=c.selected_rpg_background_image.android||""),j=Object.assign({},a.settings),a.isInitialized=!0,a.isReadyToSave=!0}).then(function(){5<=a.cordovaVersion&&MonacaApi.Ide.Cordova.list(i).then(function(b){var c=b.body.result?b.body.result:{};a.$apply(function(){var b=c[h.PLUGIN.CROSSWALK]||{};a.isHighPerformanceWebView=b&&b.isInstalled})})})},a.valueChanged=function(b){return j[b]!==a.settings[b]},a.uploadImage=function(d){var e=d.files[0];c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var c=d.name,f=function(){return"icon_all_android"==c?Object.keys(a.iconTypeList):"splash_all_android"==c?Object.keys(a.splashTypeList):[c]}();f.forEach(function(b){a.isLoading[b]=!0}),MonacaApi.Ide.Project.uploadSettingImage(i,c,e).then(function(){a.$apply(function(){f.forEach(function(b){document.getElementById("image-"+b).src=a.createSettingImageUrl(i,b)+"&t="+(new Date).getTime(),a.isLoading[b]=!1})}),g.publish(h.EVENT.NOTIFY_USER,{className:"success",content:b.getString("Successfully uploaded.")})})["catch"](function(){a.$apply(function(){f.forEach(function(b){a.isLoading[b]=!1})}),g.publish(h.EVENT.NOTIFY_USER,{className:"danger",content:b.getString("Failed to upload file.")})})})},a.deleteImage=function(a){c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure you want to remove this?")}}}).result.then(function(){MonacaApi.Ide.Project.deleteSettingImage(i,a)})},a.submit=function(){var c={android:Object.assign({},a.settings)};a.specifyVersionCode||(c.android.versionCode_android=""),a.isReadyToSave=!1;var d=f.show("main div.container");MonacaApi.Ide.Project.saveProjectSetting(i,c).then(function(){a.isReadyToSave=!0,d.hide(),g.publish(h.EVENT.NOTIFY_USER,{className:"success",content:b.getString("Successfully saved")}),e.reload(),j=Object.assign({},a.settings),a.$apply()})}}]),angular.module("monacaServices").controller("AndroidBuildController",["$scope","$controller","Constant","InAppUpdaterService","Dialog","gettextCatalog","SpinnerService",function(a,b,c,d,e,f,g){angular.extend(this,b("BaseBuildController",{$scope:a})),a.platform="android",a.flag_monaca_hosting_app={android:!1},a.flag_alias_password_changed=!1;var h=null;"rpgtkool"===MONACA_USER_INFO.plan&&d.getRemotePackgeList().then(function(b){a.inappupdater_packages=b}),a.initProfiles=function(b){a.aliasList=b.project.android.alias_android_list||[],h=b.project.android.alias_android||null,h&&a.aliasList.map(function(a){return a.alias}).includes(h)?(a.alias_name=h,a.showDummyPassword()):a.alias_name=a.aliasList.length?a.aliasList[0].alias:null},a.createBuildParameters=function(){var b={};return a.alias_name&&(b.alias_name=a.alias_name,(a.alias_name!==h||a.flag_alias_password_changed)&&(b.alias_password=a.alias_password||"")),a.flag_monaca_hosting_app.android&&(b.inapp_updater_env=a.purpose,b.purpose="inapp_updater",b.update_number="1"),b},a.aliasPasswordChanged=function(){a.flag_alias_password_changed=!0},a.showDummyPassword=function(){a.alias_name===h?a.alias_password="********":a.alias_password=""},a.deleteUpdateNumber=function(b){e.confirm(f.getString("削除してもよろしいですか？")).then(function(){var c=g.show(".build-list-table");MonacaApi.Ide.InAppUpdater.deleteUpdateNumber(window.config.projectId,b).then(function(b){d.getRemotePackgeList().then(function(b){a.inappupdater_packages=b,c.hide()})})})}}]),angular.module("monacaServices").controller("AndroidBuildSettingsController",["$scope","gettextCatalog","$controller","$uibModal","SpinnerService","Dialog",function(a,b,c,d,e,f){var g=window.config.projectId;a.aliasList=[],a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.init=function(){a.updatePage()},a.updatePage=function(){var b=e.show("#alias-table");MonacaApi.Ide.Project.getProjectSetting(g).then(function(c){var d=c.body&&c.body.result?c.body.result:{},e=d.project.android||{};a.hasKeyStore=e.has_keystore||!1,a.aliasList=e.alias_android_list,a.$apply(),b.hide()})},a.clickGenerateKeyStore=function(){f.confirm(b.getString("Are you sure to remove the KeyStore and all the aliases?")).then(function(){d.open({templateUrl:"dialogs/KeyStoreGeneratorDialog.html",controller:"KeyStoreGeneratorDialogController"}).result.then(function(){a.updatePage()})})},a.clickAddAlias=function(){d.open({templateUrl:"dialogs/KeyStoreAddAliasDialog.html",controller:"KeyStoreAddAliasDialogController"}).result.then(function(){a.updatePage()})},a.clickDeleteAlias=function(c){f.confirm(b.getString("Are you sure to delete this alias from KeyStore?")).then(function(){MonacaApi.Ide.Project.deleteAlias(g,c).then(function(){a.updatePage()})})},a.clickImport=function(){f.confirm(b.getString("Current KeyStore and all the aliases will be lost. Are you sure to continue?")).then(function(){d.open({templateUrl:"dialogs/KeyStoreImportDialog.html",controller:"KeyStoreImportDialogController"}).result.then(function(){a.updatePage()})})},a.clickExport=function(){d.open({templateUrl:"dialogs/KeyStoreExportDialog.html",controller:"KeyStoreExportDialogController"})}}]),angular.module("monacaServices").controller("BaseBuildController",["$q","$scope","Constant","PubSub","gettextCatalog","ProjectFactory",function(a,b,c,d,e,f){var g=window.config.projectId;b.lang=window.config.lang,b.platform=null,b.cordovaVersion=f.getCurrentCordovaVersion(),b.canBuild=!1,b.type=window.config.initialBuildType||"development",b.purpose=window.config.initialBuildPurpose||"debug",b.tab={development:"debug",production:"release"},b.tab[b.type]=b.purpose,(window.config.initialBuildType||window.config.initialBuildPurpose)&&(window.config.initialBuildType=null,window.config.initialBuildPurpose=null),b.$on("SHOW_DEBUGGER_TAB",function(a){b.type="development",b.purpose="debugger",b.tab[b.type]=b.purpose,b.$apply()}),b.buildProblems=[];var h=window.location.href.includes("from=local");b.init=function(){MonacaApi.Ide.User.info().then(function(a){b.userInfo=a.body.result||{}}).then(function(){"cordova"===window.config.PROJECT.framework&&MonacaApi.Ide.Cordova.list(g).then(function(a){var d=a.body.result?a.body.result:{};b.$apply(function(){d[c.PLUGIN.INAPP_UPDATER]?b.inAppUpdaterPlugin=d[c.PLUGIN.INAPP_UPDATER]:d[c.PLUGIN.INAPP_UPDATER_CORDOVA7]?b.inAppUpdaterPlugin=d[c.PLUGIN.INAPP_UPDATER_CORDOVA7]:b.inAppUpdaterPlugin={}})})}),a.when(MonacaApi.Ide.Project.getProjectSetting(g)).then(function(a){return a.body.result?a.body.result:{}}).then(function(a){return b.initProfiles(a)}).then(function(){return b.checkBuildSettings()})["catch"](function(a){})},b.initProfiles=function(a){return{}},b.createBuildParameters=function(){return{}},b.checkBuildSettings=function(){var c=b.createBuildParameters();return a.when(MonacaApi.Ide.Build.canBuildApp(g,b.platform,b.purpose,c)).then(function(a){var c=a.body.result||{};b.buildProblems=Object.keys(c).map(function(a){return{key:a,value:c[a]}}),b.canBuild=c.can_build||!1})},b.changeTab=function(a,c){b.type=a,c?b.tab[a]=c:c=b.tab[a],b.purpose=c,b.buildProblems=[],b.checkBuildSettings()},b.build=function(){var a={platform:b.platform,purpose:b.purpose};a=Object.assign(a,b.createBuildParameters());var c=MonacaApi.Ide.Build.build(g,a).then(function(a){return"pwa"===b.platform&&MonacaApi.Ide.Demo.fn20170711124329(g,a.body.result.queue_id),a}).then(function(a){return"/"+window.config.lang+"/services/"+g+"/"+b.platform+"/build/"+a.body.result.queue_id});if(h)c.then(function(a){a+="?from=local",window.location.href=a});else{var d=window.open("about:blank");c.then(function(a){a+="?hide_sidebar=1",d.location.href=a},function(a){d.close()}).then(function(){d=null})}}}]),angular.module("monacaServices").controller("BuildHistoryController",["$scope","$element","$q","$timeout","$http","$templateCache","$injector","$sce","$uibModal","BuildService","Dialog","$window","Constant","PubSub","gettextCatalog",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){function p(a){return[window.config.monacaAppHost,window.config.lang,"services",window.config.projectId,a.platform,"build",a.id].join("/")+"?hide_sidebar=1"}function q(){j.fetchLogList({maxnum:r*s,count:1}).then(function(a){this.historyCollection=[].concat(a.result.android.items,a.result.ios.items,a.result.winrt.items,a.result.chrome.items);for(var b in this.historyCollection){var c=window.moment(this.historyCollection[b].created_at);this.historyCollection[b].logUrl=p(this.historyCollection[b]),this.historyCollection[b].created_at="en"===window.config.lang?c.format("MMM D HH:mm:ss"):c.format("YYYY年M月D日 HH:mm:ss"),this.historyCollection[b].ellapsed=c.fromNow()}u=this.historyCollection.length,""!==this.platform&&(u=a.result[this.platform].items.length)}.bind(this))}var r=3,s=1,t=6e3,u=0;this.historyCollection=[],this.platform="",this.isBuildFinished=function(a){return["finish","fail","cancel","kill","ios-publish-success","ios-publish-fail"].indexOf(a)>-1},q.call(this),this.fetchIntervalId=setInterval(q.bind(this),t),this.fetchMoreHistory=function(){clearInterval(this.fetchIntervalId),s++,q.call(this),this.fetchIntervalId=setInterval(q.bind(this),t)},this.showDetails=function(a){return l.open([window.config.monacaAppHost,window.config.lang,"services",window.config.projectId,a.platform,"build",a.id].join("/")+"?hide_sidebar=1","_blank"),!0},this.onClickDelete=function(a){i.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return o.getString("Confirm Deletion")},message:function(){return o.getString("Are you sure you want to delete this build history?")}}}).result.then(function(){j.deleteHistory(a).then(function(){n.publish(m.EVENT.NOTIFY_USER,{className:"success",content:o.getString("The selected build history has been deleted successfully.")})})})},this.hasMore=function(){return u>r*s},this.beforeClose=function(){clearInterval(this.fetchIntervalId.bind(this)),this.$destroy()}}]),angular.module("monacaServices").controller("BuildResultController",["$scope","$timeout","$uibModal","WebSocketHandlerService","gettextCatalog","Dialog","ProjectFactory","DeployServiceFactory","BuildService","PubSub","Constant",function(a,b,c,d,e,f,g,h,i,j,k){function l(a){var b="";switch(a.platform){case"ios":b="iOS";break;case"android":b="Android";break;case"winrt":b="Windows"}switch(b+=" ",a.type){case"debug":b+=e.getString("Debug Build");break;case"debugger":b+=e.getString("Debugger Build");break;case"release":b+=e.getString("Release Build");break;case"adhoc":b+=e.getString("AdHoc Build");break;case"inhouse":b+=e.getString("In-House Build");break;case"inapp_updater":b+=e.getString("InAppUpdater Build")}return b}function m(b){d.connect(window.MonacaApi.Config.getApiToken()),d.subscribeByQueueId(b,a.updateBuildLog),a.buildLog=d.getBuildLog(b)}function n(){d.close()}var o=window.config.projectId,p=window.config.queueId,q=null;a.DeployServiceFactory=h,a.showIosAppUploader=!1,a.showDeployService=!1,a.showSecurityService=!1,a.is_public=!1,a.queue=null,a.buildLog="",a.cordovaVersion=g.getCurrentCordovaVersion(),a.showBuildLogTextArea=!1,a.isReactNative="react-native"===window.config.PROJECT.framework;var r={prepare:function(a){r=function(b){return a?(b=b||120,"https://chart.googleapis.com/chart?chs="+b+"&cht=qr&chl="+encodeURIComponent(a)):null}}};a.init=function(){var b=p.split("_");a.rawQueueId=b[0],a.updateQueueInfo(),m(a.rawQueueId),q=setInterval(a.updateQueueInfo,5e3)},a.deployServiceCustomFilter=function(b){var c=b.service_type+"BackendService",d=h.serviceCollection[c];return d.supported_build_platforms.indexOf(a.queue.platform)>-1},a.convertServiceLargeImgToSmall=function(a){return a.replace("_large_","_small_")},a.sendToDeployService=function(a){return"process"!==a.manualProcessStatus&&void c.open({templateUrl:"dialogs/SendManualDeployServiceRequest.html",controller:"DeployServiceRequestController",resolve:{service:a,queueId:function(){return p}}})},a.sendToApkCheckerService=function(){var a="/"+window.config.lang+"/security_checker/"+o+"/"+p;c.open({templateUrl:"dialogs/ConfirmApkCheckDialog.html",controller:"ConfirmApkCheckDialogController",resolve:{link:function(){return a}}})},a.openDeployLogs=function(a,b){return a.stopPropagation(),"failed"===b.manualProcessStatus&&void c.open({templateUrl:"dialogs/ViewManualDeployServiceLog.html",controller:"DeployServiceLogController",resolve:{service:b}})},a.updateQueueInfo=function(){MonacaApi.Ide.Project.getBuildQueue(o,p).then(function(b){var c=b.body.result||{};a.is_public=c.is_public,"ios"==c.platform&&"release"==c.type&&(a.showIosAppUploader=!0),"android"==c.platform&&window.config.SERVICE&&window.config.SERVICE.security_checker&&(a.showSecurityService=!0);var d=moment(c.finished_at);c.label=l(c),c.ellapsed=d.fromNow(),c.finishedAtLabel="en"===window.config.lang?d.format("MMM D HH:mm:ss"):d.format("YYYY年M月D日 HH:mm:ss"),c.status.match(/^ios-publish-/)&&(c.status="finish"),a.queue=c,h.fetch().then(function(){a.showDeployService=h.ownedCollection.length>0}),a.$apply(),a.isBuildFinishStatus(a.queue.status)&&(clearInterval(q),n(),q=null,MonacaApi.Ide.Build.result(o,p).then(function(b){a.buildResult=b.body.result||{},r.prepare(a.buildResult.network_install_url),a.qrCodeUrl=r(120),a.buildLog=a.buildResult?a.buildResult.build_log:"",a.showSendAppIcon=a.canShowSendAppIcon(a.queue.platform,a.queue.type),a.$apply()}))})},a.isBuildFinishStatus=function(a){return["finish","fail","cancel","kill","ios-publish-finish","ios-publish-fail"].indexOf(a)>=0},a.canShowSendAppIcon=function(a,b){var c={android:["debug","release"],ios:["adhoc","inhouse"],winrt:["debug","release"]};return c[a]&&c[a].includes(b)||!1},a.openQRCodeDialog=function(){c.open({templateUrl:"dialogs/AdHocQRCodeDialog.html",controller:"AdHocQRCodeDialogController",resolve:{url:function(){return r(450)},queue_id:function(){return p}}})},a.openUploaderWindow=function(){var a="/"+window.config.lang+"/uploader/"+o+"/"+p;window.open(a)},a.openSecurityCheckerWindow=function(){var a="/"+window.config.lang+"/security_checker/"+o+"/"+p;window.open(a)},a.openSendAppDialog=function(){f.confirm(e.getString("Submit email to your registered email address.")).then(function(){MonacaApi.Ide.Build.sendApp(o,p).then(function(){f.alert(e.getString("An email has been sent to your account."),e.getString("Success"))})})},a.updateBuildLog=function(c){c.data&&c.data.queueId&&b(function(){a.buildLog=d.getBuildLog(c.data.queueId)})},a.setIsPubliclyDownloadable=function(){i.setIsPubliclyDownloadable(p,a.is_public).then(function(){j.publish(k.EVENT.NOTIFY_USER,{className:"success",content:"The publicly downloadable option was changed."})})}}]),angular.module("monacaServices").controller("ContinuousIntegrationController",["$scope","PubSub","$q","gettextCatalog","Dialog","$uibModal","ContinuousIntegrator","DeployServiceFactory","Constant",function(a,b,c,d,e,f,g,h,i){function j(a,b){return e.confirm(d.getString('You are about to be redirected away from the Monaca Cloud IDE. Would you like to continue to the "{{page_title}}" page?',{page_title:b}),d.getString("Leaving Cloud IDE")).then(function(b){b&&(window.location=a)})}function k(a){return e.alert(d.getString('An error occurred while attempting to redirect you to the "{{page_title}}" page.',{page_title:a}),d.getString("Redirection Failure"))}a.loading=!0,a.error=!1,a.project_vcs={service_type:"GitHub",username:null,email:null},a.ci_tickets={usable:null,total:null,total_complimentary:null},a.hasVcsConfiguration=a.project_vcs.username&&a.project_vcs.email,a.hasGitHubAccount=a.project_vcs.username&&a.project_vcs.email,a.config="",a.enabled=!1,a.ci_status_image="/img/services/icon_error.png",a.url={vcs_configure:null,plan_details:null},a.DeployServiceFactory=h,c.all([g.fetch(),h.fetchOwnedCollection()]).then(function(b){var c=b[0];c.url&&(a.url=c.url),a.config=JSON.stringify(c.config,void 0,2),a.enabled=c.enabled,a.updateStatusDisplay(),a.project_vcs=c.project_vcs,a.ci_tickets=c.ci_tickets,a.hasVcsConfiguration=a.project_vcs.username&&a.project_vcs.email,a.loading=!1,a.error=!1}.bind(this),function(b){var c=b.body.result;c.url&&(a.url=c.url),a.loading=!1,a.error=c.errorType}),a.save=function(){g.save(a.config).then(function(c){a.config=JSON.stringify(c.config,void 0,2),b.publish(i.EVENT.NOTIFY_USER,{className:"success",content:d.getString("Configs were saved successfully.")})},function(a){var b=f.open({templateUrl:"ContinuousIntegrationJsonErrorDialog.html",controller:"ContinuousIntegrationJsonErrorDialogController",windowClass:"ci-alert-dialog",resolve:{title:function(){return a.title},message:function(){return a.message}}});return b.result})},a.toggleStatus=function(){var b=!a.enabled;g.enable(b).then(function(b){a.enabled=b.enabled,a.updateStatusDisplay()}.bind(this),function(a){return e.alert(d.getString("Failed to update the status of the CI configurations. Please try again."),d.getString("Failed to Update CI Status"))})},a.updateStatusDisplay=function(){a.ci_status_image=a.enabled?window.config.cdnHost+"img/size18/icon_check.png":window.config.cdnHost+"img/size18/icon_error.png",a.ci_status_text=a.enabled?d.getString("Enable"):d.getString("Disable"),a.ci_status_text_ng=a.enabled?d.getString("Disable"):d.getString("Enable")},a.configureVcs=function(){window.open(a.url.vcs_configure)},a.planDetails=function(){window.open(a.url.plan_upgrade)},a.upgradePlan=function(){var b=d.getString("Upgrade Plan");return a.url.plan_upgrade?j(a.url.plan_upgrade,b):k(b)},a.loadDeployServices=function(){var a=angular.element(document.getElementById("settings")).scope();a.setPage(i.PAGE_DEPLOY_SERVICE)},a.openSetupVcsDoc=function(){window.open("https://docs.monaca.io/"+window.MonacaApi.Config.getLanguage()+"/manual/development/monaca_ide/version_control/#version-control-configuration")}}]),angular.module("monacaServices").controller("ContinuousIntegrationJsonErrorDialogController",["$scope","$window","title","$sce","message",function(a,b,c,d,e){a.title=c,a.message=d.trustAsHtml(e),a.gotoCiJsonDocs=function(){b.open("https://docs.monaca.io/"+window.MonacaApi.Config.getLanguage()+"/manual/monaca_ci/json_sample/")}}]),angular.module("monacaServices").controller("CordovaConfigAssetsEncryptPasswordController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function(a,b,c,d,e){a.loading=!0,a.passwordExists=!1,a.password="",a.password_confirm="",e.hasAssetEncryptionPassword().then(function(e){return"ok"!==e.status?(d.publish(c.EVENT.NOTIFY_USER,{className:"danger",content:b.getString("An unexpected error has occurred while fetching encrypt plugin settings. Please try again.")}),a.$close(),!1):(a.passwordExists=e.result.has_assets_encrypt_password,void(a.loading=!1))}.bind(this)),a.ok=function(){e.saveAssetsEncryptPassword(a.password,a.password_confirm).then(function(e){var f="ok"===e.status?b.getString("Successfully set resource encryption password."):e.message||b.getString("Failed to set resource encryption password.");d.publish(c.EVENT.NOTIFY_USER,{className:"ok"===e.status?"success":"danger",content:f}),"ok"!==e.status&&e.message||a.$close()})}}]),angular.module("monacaServices").controller("CordovaConfigInAppUpdater4Controller",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function(a,b,c,d,e){a.loading=!0,a.check_update_url="https://",a.download_url="https://",e.getInAppUpdater4Setting().then(function(e){return"ok"!==e.status?(d.publish(c.EVENT.NOTIFY_USER,{className:"danger",content:b.getString("An unexpected error has occurred while fetching In-App Updater plugin settings. Please try again.")}),a.$close(),!1):(a.check_update_url=e.result.checkUpdateUrl||"",a.download_url=e.result.downloadUrl||"",void(a.loading=!1))}.bind(this)),a.ok=function(){e.saveInAppUpdater4Setting(a.check_update_url,a.download_url).then(function(e){var f="ok"===e.status?b.getString("Successfully saved In-App Updater Cordova plugin settings."):e.message||b.getString("Failed to save In-App Updater Cordova plugin settings.");d.publish(c.EVENT.NOTIFY_USER,{className:"ok"===e.status?"success":"danger",content:f}),"ok"!==e.status&&e.message||a.$close()})}}]),angular.module("monacaServices").controller("CordovaConfigInAppUpdaterController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService",function(a,b,c,d,e){var f="default";a.loading=!0,a.update_modes=[{value:f,text:b.getString("default")},{value:"severe",text:b.getString("severe")}],a.deploy_url="",a.update_mode=f,e.getInAppUpdaterSetting().then(function(e){return"ok"!==e.status?(d.publish(c.EVENT.NOTIFY_USER,{className:"danger",content:b.getString("An unexpected error has occurred while fetching In-App Updater plugin settings. Please try again.")}),a.$close(),!1):(a.update_mode=e.result.updateMode||f,a.deploy_url=e.result.updateUrl||"",void(a.loading=!1))}.bind(this)),a.ok=function(){e.saveInAppUpdaterSetting(a.update_mode,a.deploy_url).then(function(e){var f="ok"===e.status?b.getString("Successfully saved In-App Updater Cordova plugin settings."):e.message||b.getString("Failed to save In-App Updater Cordova plugin settings.");d.publish(c.EVENT.NOTIFY_USER,{className:"ok"===e.status?"success":"danger",content:f}),"ok"!==e.status&&e.message||a.$close()})}}]),angular.module("monacaServices").controller("CordovaConfigPluginCommonController",["$scope","PubSub","gettextCatalog","Constant","ProjectFactory","CordovaPluginService","pluginData",function(a,b,c,d,e,f,g){a.loading=!0,a.plugin=g,a.pluginVersionChangeDisabled=!1,a.pluginVersionChangeVisible=!0,a.pluginInstallParams="",a.plugin_selected_version=a.plugin.version,a.plugin_version=[],a.plugin_id=a.plugin.id.split("@")[0],a.crosswalkVisible=!1,a.crosswalkVersionDisabled=!0,a.crosswalk_version=null,a.crosswalk_arch=null,a.crosswalk_archs={arm:"arm",x86:"x86"};var h=5.2,i=parseFloat(e.getCurrentCordovaVersion()),j=i>=h;j?(a.plugin.is_npm_plugin&&!e.canChangeCordovaPluginVersion()&&(a.pluginVersionChangeDisabled=!0,a.notifyPluginVersionChange=!0),a.plugin.id.indexOf(d.PLUGIN.CROSSWALK)>-1?(a.crosswalkVisible=!0,a.crosswalkVersionDisabled=!1):(a.crosswalkVisible=!1,a.crosswalkVersionDisabled=!0)):a.notifyPluginVersionChange=!1,(!a.plugin.is_npm_plugin||i<h)&&(a.pluginVersionChangeDisabled=!0,a.pluginVersionChangeVisible=!1),f.getPluginSettings(a.plugin.id).then(function(b){var c=b.result.variables||[];if(b.result.additional_params&&b.result.additional_params.arch?a.crosswalk_arch=b.result.additional_params.arch:a.crosswalk_arch=null,c.forEach(function(b){0===b.indexOf("XWALK_VERSION=",0)&&(a.crosswalk_selected_version=b.split("=")[1])}),a.pluginInstallParams=c.length>0?c.join("\n"):"",a.plugin.is_npm_plugin&&j){var d=a.plugin_id;f.getPluginVersionCollection(d).then(function(b){a.plugin_version=b.result[d],a.crosswalk_version=b.result.crosswalk_version,a.loading=!1})}else a.pluginVersionChangeDisabled=!0,a.pluginVersionChangeVisible=!1,a.loading=!1}),a.$watch("crosswalk_selected_version",function(b,c){var d=a.pluginInstallParams;if(d){for(var e=d.split("\n"),f=0;f<e.length;f++)0==e[f].indexOf("XWALK_VERSION=",0)&&(e[f]="XWALK_VERSION="+b);a.pluginInstallParams=e.join("\n")}}),a.ok=function(){var e={variables_text:a.pluginInstallParams,using_plugin_version:a.plugin.version,update_plugin_version:a.plugin_selected_version,pluginId:a.plugin_id};a.plugin.id.indexOf(d.PLUGIN.CROSSWALK)>-1&&(e.additional_params={arch:a.crosswalk_arch}),f.updatePluginSettings(e).then(function(a){var e=c.getString("Successfully saved Cordova plugin settings.");b.publish(d.EVENT.NOTIFY_USER,{className:"success",content:e})}).then(function(){b.publish(d.EVENT.CORDOVA_PLUGIN_UPDATE_ENABLED_CARD,{id:a.plugin_id,version:a.plugin_selected_version})}).then(function(){a.$close()})}}]),angular.module("monacaServices").controller("CordovaImportController",["$scope","gettextCatalog","Constant","PubSub","CordovaPluginService","SpinnerService",function(a,b,c,d,e,f){function g(b,e){d.publish(c.EVENT.NOTIFY_USER,{className:b?"success":"danger",content:e}),d.publish(c.EVENT.RELOAD_IDE_FILETREE),this.spinner&&(this.spinner.hide(),this.spinner=null),!b&&e||(d.publish(c.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION),a.$close())}function h(a){g.apply(this,[!0,b.getString("Successfully installed custom Cordova plugin")])}function i(a){g.apply(this,[!1,a.body.message||b.getString("Failed to install custom Cordova plugin.")])}a.hasZipImportSupport=window.config.SERVICE.upload_custom_cordova_plugin_zip,a.import_method=a.hasZipImportSupport?"zip":"url",a.import_file=null,a.import_url=null,this.spinner=null,a.ok=function(){return this.spinner||(this.spinner=f.show(".modal-content")),a.hasZipImportSupport||"zip"!==a.import_method?void("zip"===a.import_method?e.importCordovaPluginFile(a.import_file).then(h.bind(this),i.bind(this)):e.importCordovaPluginPath(a.import_url).then(h.bind(this),i.bind(this))):i.call(this,{body:{}})}}]),angular.module("monacaServices").controller("CordovaPluginsController",["$scope","$q","$http","$uibModal","Dialog","gettextCatalog","Constant","PubSub","ProjectFactory","CordovaPluginService","$window","SpinnerService",function(a,b,c,d,e,f,g,h,i,j,k,l){function m(){o.apply(this).then(function(){this.isInitialized=!0}.bind(this))}function n(){this.version.currentShort=this.version.nextShort,this.version.currentLong=this.version.nextLong;var a=r[(r.indexOf(this.version.currentShort)||0)+1]<i.getCurrentCordovaVersion()?null:r[(r.indexOf(this.version.currentShort)||0)+1];this.version.nextShort=a,this.version.nextLong=a?i.getCordovaVersionList()[a]||null:a}function o(){var a=b.defer(),c=[];return b.when(j.list()).then(function(b){var d=b.result||[];this.plugins.forEach(function(a){c.push(a.key)}.bind(this)),q.apply(this,[d]).then(function(b){var d=b.map(function(a){return a.key});c.forEach(function(a){d.includes(a)||this.plugins.splice(this.plugins.findIndex(function(b){return b.key===a}),1)}.bind(this)),b.forEach(function(a){if(c.indexOf(a.key)===-1)this.plugins.push(a);else{var b=p.apply(this,[a.key]);if(b)for(var d in a)b[d]=a[d]}}.bind(this)),a.resolve()}.bind(this))}.bind(this)),a.promise}function p(a){for(var b=0;b<this.plugins.length;b++)if(this.plugins[b].key===a)return this.plugins[b];return null}function q(a){function c(a,b,c){j.fetchRegistryData("npm",c).then(function(c){b.updatedAt="",b.author="",b.docs="",c.result&&(b.updatedAt=c.result.modified?moment(c.result.modified).format("YYYY-MM-DD"):"",b.author=c.result.author?c.result.author:"",b.docs=c.result.homepage?c.result.homepage:"",b.platforms=c.result.platforms?c.result.platforms:[]),e.push(b),a.resolve()})}var d=[],e=[];for(var f in a){var g=b.defer();d.push(g.promise);var h=f.split("@")[0],i={key:f,id:h,name:a[f].name||h,description:a[f].description.trim(),docs:a[f].documentUrl,thumbnail:a[f].thumbnailUrl?a[f].thumbnailUrl:"/img/plugin/cordova.png",canUsed:a[f].canUsed,platforms:a[f].supportedPlatforms,requiredPlanNames:a[f].requiredPlanNames,author:"",updatedAt:"",version:a[f].version,isInstalled:a[f].isInstalled,isInstallRequired:a[f].isInstallRequired,isDefault:a[f].isDefault,isImported:a[f].isImported,is_npm_plugin:a[f].is_npm_plugin};i.isInstalled&&this.installedPluginCount++,h.match(/^cordova-plugin/)&&i.is_npm_plugin?c.call(this,g,i,h):(e.push(i),g.resolve())}return b.all(d).then(function(){for(var a=0;a<e.length-1;a++)for(var b=a+1;b<e.length;b++){var c=e[a],d=e[b];c.id===d.id&&c.isInstalled&&!d.isInstalled&&(e[a].sparePlugin=d,e[b].reserveRemoval=!0)}return e=e.filter(function(a){return!a.reserveRemoval})})}var r=Object.keys(i.getCordovaPlatformVersions()).sort(function(a,b){
return a-b});this.isInitialized=!1;var s=r[(r.indexOf(i.getCurrentCordovaVersion())||0)+1]<i.getCurrentCordovaVersion()?null:r[(r.indexOf(i.getCurrentCordovaVersion())||0)+1];this.version={currentShort:i.getCurrentCordovaVersion(),currentLong:i.getCordovaVersionList()[i.getCurrentCordovaVersion()]||null,nextShort:s,nextLong:s?i.getCordovaVersionList()[s]||null:s},this.canShowCordovaVersion=parseFloat(this.version.currentShort)>2.9,this.cordovaPlatformVersion=i.getCordovaPlatformVersions(this.version.currentShort),this.isVersionDetailVisible=!1,this.plugins=[],this.installedPluginCount=0,this.searchword="",this.spinner=null,this.isInitialized||m.apply(this),h.subscribe(g.EVENT.CORDOVA_PLUGIN_REBUILD_COLLECTION,o.bind(this)),h.subscribe(g.EVENT.CORDOVA_PLUGIN_UPDATE_ENABLED_CARD,function(a){if(a)for(var b=0;b<this.plugins.length;b++)if(this.plugins[b].id===a.id)return void(this.plugins[b].version=a.version)}.bind(this)),this.onClickBtnEnable=function(a){b.when(j.enable(a)).then(function(b){if("fail"===b.status)h.publish(g.EVENT.NOTIFY_USER,{className:"danger",content:f.getString(b.message)});else{var c=p.apply(this,[a]);c.isInstalled=!0,this.installedPluginCount++,h.publish(g.EVENT.NOTIFY_USER,{className:"success",content:f.getString("Successfully enabled plugin.")})}}.bind(this))},this.onClickBtnDisable=function(a){e.confirm(f.getString("Are you sure you would want to disable this plugin.")).then(function(){b.when(j.disable(a)).then(function(){var b=p.apply(this,[a]);b.isInstalled=!1,this.installedPluginCount--,b.sparePlugin&&(this.plugins.push(b.sparePlugin),this.plugins.splice(this.plugins.indexOf(b),1));var c=this.searchOtherVersionPluginIndex(b);c!==-1&&this.plugins[c].isInstalled&&(this.plugins[c].sparePlugin=b,this.plugins.splice(this.plugins.indexOf(b),1)),h.publish(g.EVENT.NOTIFY_USER,{className:"success",content:f.getString("Successfully disabled plugin.")}),h.publish(g.EVENT.RELOAD_IDE_FILETREE)}.bind(this))}.bind(this))},this.searchOtherVersionPluginIndex=function(a){return this.plugins.findIndex(function(b){return b.name===a.name&&b.version!==a.version})},this.filterCordovaVersion=function(a){return parseFloat(a.value)>=parseFloat(i.getCurrentCordovaVersion())},this.isAvailablePluginEmpty=function(){return this.installedPluginCount===this.plugins.length},this.onClickBtnRemove=function(a){e.confirm(f.getString("Are you sure to remove the plugin? Removed plugins cannot be restored.")).then(function(){b.when(j.disable(a)).then(function(){var b=p.apply(this,[a]);b.isInstalled=!1,this.installedPluginCount--,b.sparePlugin&&this.plugins.push(b.sparePlugin),this.plugins.splice(this.plugins.indexOf(b),1),h.publish(g.EVENT.NOTIFY_USER,{className:"success",content:f.getString("Successfully deleted plugin.")}),h.publish(g.EVENT.RELOAD_IDE_FILETREE)}.bind(this))}.bind(this))},this.onClickBtnConfig=function(a,b){var c=$(a.currentTarget).closest("div[ng-include]"),e="CordovaConfigPluginCommon";b.key.indexOf(g.PLUGIN.ENCRYPTION)!==-1?e="CordovaConfigAssetsEncryptPassword":b.key.indexOf(g.PLUGIN.INAPP_UPDATER)===-1&&b.key.indexOf(g.PLUGIN.INAPP_UPDATER_CORDOVA7)===-1||(e=b.version.match(/^4\./)||b.key.indexOf(g.PLUGIN.INAPP_UPDATER_CORDOVA7)!==-1?"CordovaConfigInAppUpdater4":"CordovaConfigInAppUpdater"),d.open({templateUrl:e+".html",controller:e+"Controller",windowClass:"cordova-configure-dialog",resolve:{title:function(){return""},message:function(){return""},pluginCard:function(){return c},pluginData:function(){return{name:b.name,id:b.key,is_npm_plugin:b.is_npm_plugin,version:b.version}}}})},this.onClickBtnImport=function(){d.open({templateUrl:"CordovaImport.html",controller:"CordovaImportController",windowClass:"cordova-configure-dialog",resolve:{title:function(){return""},message:function(){return""}}})},this.onSelectCordovaVersion=function(){if(!this.version.nextLong)return!1;for(var a=parseFloat(this.version.nextLong),b=!1,c=["5.2.0","6.2.0","6.5.0","7.1.0"],d=0;d<c.length;d++)if(parseFloat(c[d])===a){b=!0;break}b?this.confirmStructuralChange(a).then(function(){this.changeCordovaVersion(a).then(function(a){this.spinner.hide(),"ok"===a.status&&e.alert(f.getString('Your project has been upgraded to a newer version. <br/><div style="font-size: 13px;margin-top:7px;">Furthermore, we created a back up in "{{new_project_name}}"</div>',{new_project_name:i.getProjectName()+" (Backup)"}),f.getString("Upgrade Completed")).then(function(){window.monaca_ide_window?h.publish(g.EVENT.RELOAD_IDE):(h.publish(g.EVENT.RELOAD_IDE_FILETREE),h.publish(g.EVENT.CLOSE_INACTIVATE_IDE_TABS)),k.location.reload()},function(){k.location.reload()})}.bind(this))["catch"](function(a){this.spinner.hide()}.bind(this))}.bind(this)):(this.changeCordovaVersion(a),this.spinner.hide())},this.confirmStructuralChange=function(a){var b="ja"===window.config.lang,c={5.2:{link:"",ios_version:"8.0",android_version:"4.0",debugger_version:"5.0.0"},6.2:{link:"",ios_version:"8.0",android_version:"4.0",debugger_version:"6.1.0"},6.5:{link:b?"https://press.monaca.io/takuya/467":"https://onsen.io/blog/develop-powerful-apps-with-cordova6-5/",ios_version:"9.0",android_version:"4.1",debugger_version:"6.5.0"},7.1:{link:"",ios_version:"9.0",android_version:"5.0",debugger_version:"7.0.0",additional_message:f.getString("Crosswalk is no longer supported on Monaca using Cordova 7. If you have the Crosswalk plugin installed, it will be removed during the upgrade.")}};return d.open({templateUrl:"CordovaConfirmUpgradeDialog.html",controller:"CordovaConfirmUpgradeDialogController",windowClass:"cordova-confirm-upgrade",resolve:{param:function(){return c[a]}}}).result},this.changeCordovaVersion=function(a){return this.spinner=l.show("html"),j.switchCordovaVersion(a).then(function(a){var c="ok"===a.status,d=a.message?a.message:f.getString("Failed to change Cordova version."),e=c?f.getString("Successfully changed Cordova version."):d;return h.publish(g.EVENT.NOTIFY_USER,{className:c?"success":"danger",content:e}),i._refetch(),c&&n.apply(this),c?b.resolve(a):b.reject(a)}.bind(this))}}]).filter("pluginsearch",function(){return function(a,b){if(!b)return a;b=b.toLowerCase();var c=[];for(var d in a){var e=a[d];(e.name.toLowerCase().indexOf(b)>=0||e.id.toLowerCase().indexOf(b)>=0||e.description.toLowerCase().indexOf(b)>=0)&&c.push(e)}return c}}),angular.module("monacaServices").controller("DeployServiceAddDialogController",["$scope","gettextCatalog","DeployServiceFactory",function(a,b,c){a.selected_service=!1,a.formElements=[],a.formData={},a.alias="",a.error=null,a.DeployServiceFactory=c,a.addNewDeployService=function(){if(!a.selected_service)return a.error=b.getString("Please select a deploy service."),!1;if(""===a.alias)return a.error=b.getString("Please insert an alias for the selected deploy service."),!1;var d=[];if(a.formElements.forEach(function(b){b.required&&!a.formData[b.id]&&d.push(b.label)}.bind(this)),d.length)return a.error=b.getString("Please fill in the required fields: {{missing}}",{missing:d.join(", ")}),!1;var e=angular.copy(a.formData);e.alias=a.alias,e.service=a.selected_service.id,c.addOwn(e).then(this.$close.bind(this),function(b){a.error=b})},a.updateDeployServiceForm=function(){a.formElements=[],a.selected_service||(a.formData={}),a.selected_service&&a.selected_service.form&&(a.formElements=a.selected_service.form||[])}}]),angular.module("monacaServices").controller("DeployServiceController",["$scope","$uibModal","gettextCatalog","Dialog","DeployServiceFactory",function(a,b,c,d,e){a.DeployServiceFactory=e,a.loading=!0,a.error=!1,a.addNewDeployService=function(){var a=b.open({templateUrl:"DeployServiceAddDialog.html",controller:"DeployServiceAddDialogController",windowClass:"deploy-service-add-dialog",resolve:{}});return a.result},a.deleteDeployService=function(a,b){return d.confirm(c.getString('Are you sure you would like to delete the deploy service configurations for "{{alias}}" for service type "{{service}}"?',{alias:b,service:a}),c.getString("Delete Deploy Service Configurations")).then(function(c){c&&e.removeOwn(a,b)})},e.fetch().then(function(){a.loading=!1,a.error=!1},function(b){a.loading=!1,a.error=!0})}]),angular.module("monacaServices").controller("AlertController",["$scope","$sce","title","message",function(a,b,c,d){a.dialogTemplate="alert",a.title=c,a.message=b.trustAsHtml(d)}]).controller("ConfirmController",["$scope","$uibModalInstance","$sce","title","message",function(a,b,c,d,e){a.dialogTemplate="confirm",a.title=d,a.message=c.trustAsHtml(e),a.ok=function(){b.close(!0)},a.cancel=function(){b.dismiss(!1)}}]).controller("CordovaConfirmUpgradeDialogController",["$scope","$uibModalInstance","$sce","param",function(a,b,c,d){a.param=d,a.ok=function(){b.close(!0)},a.cancel=function(){b.dismiss(!1)}}]),angular.module("monacaServices").controller("IosAppSettingsController",["$scope","gettextCatalog","$uibModal","ProjectFactory","ProjectSettingFactory","SpinnerService","PubSub","Constant",function(a,b,c,d,e,f,g,h){var i=window.config.projectId,j={};a.cordovaVersion=d.getCurrentCordovaVersion(),a.canChangeSplashScreenMode=a.cordovaVersion>=7,a.isLoading={},a.settings={},a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.createSettingImageUrl=function(a,b){return config.ideHost+"/api/project/"+a+"/file/read/"+b+"?api_token="+window.MonacaApi.Config.getApiToken()},a.localizationItems=[{label:"English",value:"en"},{label:"French",value:"fr"},{label:"German",value:"de"},{label:"Italian",value:"it"},{label:"Spanish",value:"es"},{label:"Japanese",value:"ja"},{label:"Korean",value:"ko"},{label:"Chinese",value:"zh"},{label:"Chinese (simplified)",value:"zh_CN"},{label:"Chinese (traditional)",value:"zh_TW"}],a.iconTypeList=function(){var b={icon_iphone:{w:57,h:57,name:"iPhone"},icon_iphone_retina:{w:114,h:114,name:"iPhone Retina"},icon_ipad:{w:72,h:72,name:"iPad"},icon_ipad_retina:{w:144,h:144,name:"iPad Retina"},icon_60_ios:{w:60,h:60,name:""},icon_iphone_retina_ios7:{w:120,h:120,name:"iPhone Retina<br>(iOS7)"},icon_iphone6plus:{w:180,h:180,name:"iPhone 6<br>Plus"},icon_ipad_ios7:{w:76,h:76,name:"iPad (iOS7)"},icon_ipad_retina_ios7:{w:152,h:152,name:"iPad Retina<br>(iOS7)"},icon_40_ios:{w:40,h:40,name:""},icon_40_2x_ios:{w:80,h:80,name:""},icon_50_ios:{w:50,h:50,name:""},icon_50_2x_ios:{w:100,h:100,name:""},icon_small_ios:{w:29,h:29,name:""},icon_small_2x_ios:{w:58,h:58,name:""}};a.cordovaVersion>=6&&(b.icon_small_3x_ios={w:87,h:87,name:""},b.icon_ipad_pro={w:167,h:167,name:"iPad Pro"});for(var c in b)b[c].url=a.createSettingImageUrl(i,c);return b}(),a.storeIconTypeList=function(){var b={};a.cordovaVersion>=7&&(b.icon_1024_ios={w:1024,h:1024,name:"App Store"});for(var c in b)b[c].url=a.createSettingImageUrl(i,c);return b}(),a.splashImages={legacy:{splash_iphone:{w:320,h:480,name:"iPhone"},splash_iphone_retina:{w:640,h:960,name:"iPhone Retina"},splash_iphone_568h:{w:640,h:1136,name:"iPhone 5"},splash_iphone6:{w:750,h:1334,name:"iPhone 6"},splash_iphone6plus:{w:1242,h:2208,name:"iPhone 6 Plus"},splash_iphone6plus_landscape:{w:2208,h:1242,name:"iPhone 6 Plus<br>Landscape"},splash_ipad_ios7:{w:768,h:1024,name:"iPad (iOS7)"},splash_ipad_ios7_landscape:{w:1024,h:768,name:"iPad Landscape<br>(iOS7)"},splash_ipad_retina_ios7:{w:1536,h:2048,name:"iPad Retina (iOS7)"},splash_ipad_retina_ios7_landscape:{w:2048,h:1536,name:"iPad Retina<br>Landscape (iOS7)"}},storyboard:{splash_ios_anyany:{w:2732,h:2732,name:"2x~universal~anyany"}}},a.displaySplashImages={},_.each(a.splashImages,function(b){_.each(b,function(b,c){b.url=a.createSettingImageUrl(i,c)})}),a.init=function(){e.loading.then(function(b){var c=b.project||{},d=b.config&&b.config.ios?b.config.ios:{},e=d.preference||{};if(a.settings.applicationName_ios=d.applicationName,a.settings.applicationID_ios=d.applicationId,a.settings.versionName_ios=d.versionName,a.settings.bundleVersion_ios=d.bundleVersion,a.settings.localizations_ios=c.ios.localizations,a.specifyBundleVersion=!!a.settings.bundleVersion_ios,a.specifyBundleVersion||(a.settings.bundleVersion_ios=a.settings.versionName_ios),6<=a.cordovaVersion){var f=e["ios-XCBuildConfiguration-TARGETED_DEVICE_FAMILY"]||"";a.settings.targetFamilyiPhone_ios=f.includes("1")?1:0,a.settings.targetFamilyiPad_ios=f.includes("2")?1:0}else a.settings.targetFamilyiPhone_ios="1"===e["monaca:targetFamilyiPhone"]?1:0,a.settings.targetFamilyiPad_ios="1"===e["monaca:targetFamilyiPad"]?1:0;a.settings.config_auto_hide_splash_screen=e.AutoHideSplashScreen,a.settings.config_fade_splash_screen="true"==e.FadeSplashScreen,a.settings.config_show_splash_screen_spinner="true"==e.ShowSplashScreenSpinner,a.settings.ios_splash_type=d.iosSplashType||"legacy",a.displaySplashImages=a.splashImages[a.settings.ios_splash_type],a.settings.config_access_origin_ios=d.accessOrigin,a.settings.config_disallow_overscroll_ios="true"==e.DisallowOverscroll,a.settings.config_enable_viewport_scale="true"==e.EnableViewportScale,a.settings.config_orientation_ios=d.Orientation||"all",j=Object.assign({},a.settings),a.rpg_background_images_ios=c.rpg_background_images,c.selected_rpg_background_image&&(a.settings.selected_rpg_background_image_ios=c.selected_rpg_background_image.ios||""),a.isInitialized=!0,a.isReadyToSave=!0})},a.valueChanged=function(b){return j[b]!==a.settings[b]},a.uploadImage=function(d){var e=d.files[0];c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var c=d.name,f=function(){return"icon_all_ios"==c?Object.keys(a.iconTypeList):"splash_all_ios"==c?Object.keys(a.splashImages.legacy):[c]}();f.forEach(function(b){a.isLoading[b]=!0}),MonacaApi.Ide.Project.uploadSettingImage(i,c,e).then(function(){a.$apply(function(){f.forEach(function(b){document.getElementById("image-"+b).src=a.createSettingImageUrl(i,b)+"&t="+(new Date).getTime(),a.isLoading[b]=!1})}),g.publish(h.EVENT.NOTIFY_USER,{className:"success",content:b.getString("Successfully uploaded.")})})["catch"](function(){a.$apply(function(){f.forEach(function(b){a.isLoading[b]=!1})}),g.publish(h.EVENT.NOTIFY_USER,{className:"danger",content:b.getString("Failed to upload file.")})})})},a.submit=function(){var c={ios:Object.assign({},a.settings)};a.specifyBundleVersion||(c.ios.bundleVersion_ios=""),a.isReadyToSave=!1;var d=f.show("main");MonacaApi.Ide.Project.saveProjectSetting(i,c).then(function(){a.isReadyToSave=!0,d.hide(),g.publish(h.EVENT.NOTIFY_USER,{className:"success",content:b.getString("Successfully saved")}),e.reload(),j=Object.assign({},a.settings),a.$apply()})},a.attemptSplashTypeChange=function(){var d=a.settings.ios_splash_type,e="legacy"===d?"storyboard":"legacy";c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Changing your splash screen type will modify your config.xml. Do you want to continue?")}}}).result.then(function(){a.setSplashType(d)},function(){a.settings.ios_splash_type=e})},a.setSplashType=function(b){a.splashTypeIsChanging=!0,MonacaApi.Ide.Project.setIosSplashType(i,b).then(function(){a.splashTypeIsChanging=!1,a.settings.ios_splash_type=b,a.displaySplashImages=a.splashImages[b],a.$apply(),e.reload()})["catch"](function(){a.splashTypeIsChanging=!1,a.displaySplashImages=a.splashImages[b],a.$apply()})}}]),angular.module("monacaServices").controller("IosBuildController",["$scope","$controller","Constant",function(a,b,c){angular.extend(this,b("BaseBuildController",{$scope:a})),a.platform="ios",a.profile={},a.flag_monaca_hosting_app={ios:!1},a.hasSimulatorBuild=a.cordovaVersion>=7,a.initProfiles=function(b){return"simulator"===a.purpose?{}:(b.project.ios&&b.project.ios.prov_settings?a.defaultProvList=b.project.ios.prov_settings:a.defaultProvList={},MonacaApi.Ide.IosCert.getProvisioningFileList().then(function(b){var c={development:[],release:[],adhoc:[],inhouse:[]},d=b.body.result?b.body.result:[];d.forEach(function(a){c.hasOwnProperty(a.type)&&(a.value=a.crt.crt_id+":"+a.prov_id,a.label=a.prov_name+"  ( "+a.crt.cn+" ) ",c[a.type].push(a))}),a.profile={debug:c.development.length?c.development[0].value:null,"debugger":c.development.length?c.development[0].value:null,release:c.release.length?c.release[0].value:null,adhoc:c.adhoc.length?c.adhoc[0].value:null,inhouse:c.inhouse.length?c.inhouse[0].value:null};for(var e in a.defaultProvList){var f=a.defaultProvList[e];if(f&&f.crt_id&&f.prov_id){var g=f.crt_id+":"+f.prov_id,h=!1;Object.keys(c).forEach(function(a){c[a].value===g&&(h=!0)}),h&&(a.profile[e]=g)}}a.profiles=c,a.$apply()}))},a.createBuildParameters=function(){var b={};if("simulator"===a.purpose)return b;var c=a.profile[a.purpose]||null;return c&&(b={crt_id:c.split(":")[0],prov_id:c.split(":")[1]}),a.flag_monaca_hosting_app.ios&&(b.inapp_updater_env=a.purpose,b.purpose="inapp_updater",b.update_number="1"),b}}]),angular.module("monacaServices").controller("IosBuildSettingsController",["$scope","gettextCatalog","$uibModal","SpinnerService","PubSub","Constant",function(a,b,c,d,e,f){var g=window.config.projectId;a.crts=[],a.keys=[],a.hasPrivateKeys=!1;var h={development:"Dev",distribution:"Prod"},i={development:"Dev",release:"Dist",adhoc:"AdHoc",inhouse:"InHouse"},j={development:"blue",distribution:"red"},k={development:"blue",release:"red",adhoc:"green",inhouse:"purple"};a.init=function(){a.updatePage()},a.updatePage=function(){var b=d.show("table.build-list-table");MonacaApi.Ide.Project.getFileList(g).then(function(b){a.$apply(function(){var c=b.body.result.filelist||{};a.hasOldDevCert=c.hasOwnProperty("dev_certification_ios"),a.hasOldProdCert=c.hasOwnProperty("certification_ios")})}),MonacaApi.Ide.IosCert.getPrivateKeyList().then(function(c){a.$apply(function(){var d=[],e=[],f=c.body.result||[];f.forEach(function(a){a.crts&&a.crts.length?(a.crts.forEach(function(a){a.has_expired_prov=!1,a.color=j[a.type]||"blue",a.label=h[a.type]||"-",a.expiration?a.expirationms=1e3*a.expiration:a.expirationms=null,a.provs.forEach(function(b){b.expired&&(a.has_expired_prov=!0),b.color=k[b.type]||"blue",b.label=i[b.type]||"-"})}),d=d.concat(a.crts)):e.push(a)}),a.crts=d,a.keys=e,a.hasPrivateKeys=0<f.length,b.hide()})})},a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.uploadCertificate=function(c){MonacaApi.Ide.IosCert.saveCertificate(c.files[0]).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been uploaded")}),a.updatePage()},function(a){e.publish(f.EVENT.NOTIFY_USER,{className:"danger",content:a.body.message})})},a.uploadProvisioningProfile=function(c){MonacaApi.Ide.IosCert.saveProvisioningProfile(c.files[0]).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been uploaded")}),a.updatePage()},function(b){e.publish(f.EVENT.NOTIFY_USER,{className:"danger",content:b.body.message}),a.updatePage()})},a.openPrivateKeyGenerateDialog=function(){MonacaApi.Ide.Constants.countryList().then(function(b){var d=b.body.result||[];d.forEach(function(a){a.label=(a[window.config.lang]||a.en)+" ("+a.code+")"}),c.open({templateUrl:"dialogs/PrivateKeyAndCsrGeneratorDialog.html",controller:"PrivateKeyAndCsrGeneratorDialogController",windowClass:"ios-private-key-generator-dialog",backdrop:"static",resolve:{countryList:function(){return d}}}).result.then(function(){a.updatePage()})})},a.openImportPKCSDialog=function(){c.open({templateUrl:"dialogs/PrivateKeyImportDialog.html",controller:"PrivateKeyImportDialogController",backdrop:"static"}).result.then(function(){a.updatePage()})},a.openExportCertificateDialog=function(a){c.open({templateUrl:"dialogs/CertificateExportDialog.html",controller:"CertificateExportDialogController",resolve:{crtId:function(){return a},oldType:function(){return null}}})},a.openExportPreviousCertificateDialog=function(a){c.open({templateUrl:"dialogs/CertificateExportDialog.html",controller:"CertificateExportDialogController",resolve:{crtId:function(){return null},oldType:function(){return a}}})},a.openExportProvisioningProfileDialog=function(a){window.location.href=config.ideHost+"/api/user/ios/downloadprov?id="+encodeURIComponent(a)+"&api_token="+window.MonacaApi.Config.getApiToken()},a.openExportCsrDialog=function(a){c.open({templateUrl:"dialogs/CsrExportDialog.html",controller:"CsrExportDialogController",resolve:{keyId:function(){return a}}})},a.openDeletePrivateKeyDialog=function(d){c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure to delete this private key?")+'<div style="margin:10px;">'+d.email+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deletePrivateKeyAndCSR(d.key_id).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been deleted")}),a.updatePage()})})},a.openDeleteCertificateDialog=function(d){c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure to delete this certificate?")+'<div style="margin:10px;">'+d.cn+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deleteCertificate(d.crt_id).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been deleted")}),a.updatePage()})})},a.openDeleteProvisioningProfileDialog=function(d){c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return b.getString("Confirm")},message:function(){return b.getString("Are you sure to delete this provisioning profile?")+'<div style="margin:10px;">'+d.prov_name+"</div>"}}}).result.then(function(){MonacaApi.Ide.IosCert.deleteProvisioningProfile(d.prov_id).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been deleted")}),a.updatePage()})})}}]),angular.module("monacaServices").controller("ServiceIntegrationController",["$scope","gettextCatalog","$uibModal","$window","PubSub","Constant","ServiceIntegrationService",function(a,b,c,d,e,f,g){this.loading=!0,this.category="",this.services=[],g.list().then(function(a){this.services=a.result,this.loading=!1}.bind(this),function(a){e.publish(f.EVENT.NOTIFY_USER,{className:"danger",content:b.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:a})}),this.loading=!1}.bind(this)),this.openWebsite=function(a){d.open(a)},this.showDetails=function(a){c.open({templateUrl:"ServiceIntegrationDetailDialog.html",controller:"ServiceIntegrationDetailDialogController",windowClass:"service-integration-detail",resolve:{service:a}})}}]),angular.module("monacaServices").controller("ServiceIntegrationDetailDialogController",["$scope","$sce","$uibModal","service",function(a,b,c,d){a.service=d,a.description=b.trustAsHtml(a.service.full_description),a.features=b.trustAsHtml(a.service.service_features),a.showSetupConfirmWindow=function(){a.service.installable&&(a.$close(),c.open({templateUrl:"ServiceIntegrationSetupDialog.html",controller:"ServiceIntegrationSetupDialogController",windowClass:"service-integration-setup-confirm",resolve:{service:a.service}}))}}]),angular.module("monacaServices").controller("ServiceIntegrationSetupDialogController",["$scope","$q","$uibModal","gettextCatalog","PubSub","Constant","CordovaPluginService","WebComponentFactory","service",function(a,b,c,d,e,f,g,h,i){a.service=i,a.page="confirm",a.confirmOk=function(){a.page="progress";var j=[];i.integration_data.match_cordova_plugins.forEach(function(a){j.push(g.enable(a.url))}),i.integration_data.bower_components.forEach(function(a){j.push(h.install(a.name,a.version))});var k;b.all(j).then(function(b){b.forEach(function(b){function d(a,b,e,f){e[f].name=f,c.open({templateUrl:"WebComponentManageDialog.html",controller:"WebComponentManageDialogController",windowClass:"web-component-manage",resolve:{component:function(){return e[f]},isConfigure:function(){return!0}}}).closed.then(function(){if(0===b.length)a.page="complete";else{var c=b.shift();d(a,b,e,c)}})}if(b&&b.result&&!angular.isArray(b.result)){k||(k=Object.keys(b.result));var e=k.shift();d(a,k,b.result,e)}else a.page="complete"})},function(b){e.publish(f.EVENT.NOTIFY_USER,{className:"danger",content:d.getString('Failed to install "{{service}}" service. One or more dependencies has failed to install.',{service:a.service.name})}),a.$close()})}}]),angular.module("monacaServices").controller("SettingController",["$scope","$timeout","PubSub","ngToast","Constant","ProjectFactory","ProjectSettingFactory",function(a,b,c,d,e,f,g){function h(){return!(!window.location.href||!window.location.href.match(/from=local/))}a.projectName=window.config.projectName,a.page="loading",a.prevPage=null,a.fromLocalkit=h(),a.isRPGUser=!window.MONACA_USER_INFO||"rpgtkool"===MONACA_USER_INFO.plan,a.isReactNative="react-native"===window.config.PROJECT.framework,a.hasPwaBuildSupport=!a.isRPGUser&&window.config.SERVICE.pwa_build,a.hasWebComponentSupport=!a.isRPGUser&&window.config.SERVICE.web_component,this.Constant=e,this.hideSidebar=window.location.href.includes("hide_sidebar=1"),this.hideHeaderbar=window.location.href.includes("hide_headerbar=1"),a.setPage=function(c,d){b(function(){var b=c;[e.PAGE_IOS_BUILD_DEBUGGER,e.PAGE_ANDROID_BUILD_DEBUGGER].includes(c)&&(window.config.initialBuildType="development",window.config.initialBuildPurpose="debugger",b=c-(e.PAGE_IOS_BUILD_DEBUGGER-e.PAGE_IOS_BUILD),a.$broadcast("SHOW_DEBUGGER_TAB")),"loading"==a.page?window.config.initialTab=b:(a.prevPage=d?a.page:null,a.page=b)})},a.backPage=function(){a.prevPage&&a.setPage(a.prevPage)},a.hasPrevPage=function(){return!!a.prevPage},g.loading.then(function(){}),f.loading.then(function(b){a.page=window.config.initialTab||e.PAGE_ANDROID_BUILD}).then(function(){},function(){setTimeout(function(){window.location.reload()},3e3)}),c.subscribe(e.EVENT.NOTIFY_USER,function(a,b){d.create(a)}.bind(this)),c.subscribe(e.EVENT.RELOAD_IDE,function(){window.monaca_ide_window&&"undefined"!=typeof window.monaca_ide_window.postMessage&&window.monaca_ide_window.postMessage({action:"reload"},"*")}.bind(this)),c.subscribe(e.EVENT.RELOAD_IDE_FILETREE,function(){window.monaca_ide_window&&"undefined"!=typeof window.monaca_ide_window.postMessage?window.monaca_ide_window.postMessage({action:"reload_tree"},"*"):window.parent&&window.parent.postMessage({action:"reload_tree"},"*")}.bind(this)),c.subscribe(e.EVENT.CLOSE_INACTIVATE_IDE_TABS,function(){window.parent&&window.parent.postMessage({action:"close_inactivate_tabs"},"*")}.bind(this))}]),angular.module("monacaServices").controller("WebAppSettingsController",["$scope","$uibModal","gettextCatalog","ProjectSettingFactory","SpinnerService","PubSub","Constant",function(a,b,c,d,e,f,g){var h=window.config.projectId;a.isLoading={},a.settings={},a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.dirCollection=[{value:"auto",label:"Auto"},{value:"ltr",label:"Left-to-Right"},{value:"rtl",label:"Right-to-Left"}],a.displayCollection=[{value:"fullscreen",label:"Fullscreen"},{value:"standalone",label:"Standalone"},{value:"minimal-ui",label:"Minimal UI"},{value:"browser",label:"Browser"}],a.orientationCollection=[{value:"any",label:"Any"},{value:"natural",label:"Natural"},{value:"landscape",label:"Landscape"},{value:"landscape-primary",label:"Landscape Primary"},{value:"landscape-secondary",label:"Landscape Secondary"},{value:"portrait",label:"Portrait"},{value:"portrait-primary",label:"Portrait Primary"},{value:"portrait-secondary",label:"Portrait Secondary"}],a.createSettingImageUrl=function(a,b){return window.config.ideHost+"/api/project/"+a+"/file/read/www/images/touch/"+b+".png?api_token="+window.MonacaApi.Config.getApiToken()},a.appLogoList=function(){var b={"icon-48":{w:48,h:48,label:""},"icon-72":{w:72,h:72,label:""},"icon-96":{w:96,h:96,label:""},"icon-128":{w:128,h:128,label:""},"icon-144":{w:144,h:144,label:""},"icon-168":{w:168,h:168,label:""},"icon-192":{w:192,h:192,label:""},"icon-256":{w:256,h:256,label:""}};for(var c in b)b[c].url=a.createSettingImageUrl(h,c);return b}(),a.init=function(){d.loading.then(function(b){var c=b.manifest&&b.manifest.pwa?b.manifest.pwa:{};a.settings.name=c.name||"",a.settings.short_name=c.short_name||"",a.settings.description=c.description||"",a.settings.lang=c.lang||"en-US",a.settings.dir=c.dir||"ltr",a.settings.scope=c.scope||"./",a.settings.start_url=c.start_url||"./",a.settings.display=c.display||"fullscreen",a.settings.orientation=c.orientation||"any",a.settings.background_color=c.background_color||"",a.settings.theme_color=c.theme_color||"",a.settings.prefer_related_applications=c.prefer_related_applications||!1,a.isInitialized=!0,a.isReadyToSave=!0})}}]),angular.module("monacaServices").controller("WebBuildController",["$scope","$controller",function(a,b){angular.extend(this,b("BaseBuildController",{$scope:a})),a.platform="pwa",a.type="release",a.purpose="release"}]),angular.module("monacaServices").controller("WebComponentController",["$scope","gettextCatalog","$uibModal","$window","PubSub","Constant","WebComponentFactory",function(a,b,c,d,e,f,g){function h(a){e.publish(f.EVENT.NOTIFY_USER,{className:"danger",content:b.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:a})})}function i(a,b){return c.open({templateUrl:"WebComponentManageDialog.html",controller:"WebComponentManageDialogController",windowClass:"web-component-manage",backdrop:"static",keyboard:!1,resolve:{component:function(){return a},isConfigure:function(){return b}}})}this.loading=!0,this.searchword="",this.WebComponentFactory=g,g.loading.then(function(a){this.loading=!1}.bind(this),function(a){h(a),this.loading=!1}.bind(this)),this.remove=function(a){c.open({templateUrl:"common/dialog.html",controller:"ConfirmController",windowClass:"web-component-remove",resolve:{title:function(){return b.getString("Remove JS/CSS Component")},message:function(){return b.getString("Are you sure you would want to remove this component?")}}}).result.then(function(c){c&&g.uninstall(a.name).then(function(c){e.publish(f.EVENT.NOTIFY_USER,{className:"success",content:b.getString('Successfully uninstalled JS/CSS Component: "{{component_name}}"',{component_name:a.name})}),e.publish(f.EVENT.RELOAD_IDE_FILETREE)}.bind(this),h.bind(this))}.bind(this))},this.add=function(a){i(a,!1)},this.configure=function(a){i(a,!0)},a.searchForComponents=function(){g.fetchList(this.searchword)}.bind(this)}]).filter("componentsearch",function(){return function(a,b){if(!b)return a;b=b.toLowerCase();var c=[];for(var d in a){var e=a[d];(e.name.toLowerCase().indexOf(b)>=0||e.displayName.toLowerCase().indexOf(b)>=0)&&c.push(e)}return c}}),angular.module("monacaServices").controller("WebComponentManageDialogController",["$scope","Constant","gettextCatalog","PubSub","WebComponentFactory","component","isConfigure",function(a,b,c,d,e,f,g){function h(e){function f(a){if(a.body){var b=JSON.parse(a.body);if(b.reasons&&b.reasons.reason&&"conflict"==b.reasons.version)return!0}return!1}var g=c.getString('An unexpected error has occurred with the message of "{{error_message}}". Please try again.',{error_message:e});if(f(e)){var h=JSON.parse(e.body);g=h.reasons.reason}d.publish(b.EVENT.NOTIFY_USER,{className:"danger",content:g}),a.$close()}function i(b){for(var c in b)b[c].files&&(b[c].componentKey=c,b[c].files.monaca&&b[c].files.monaca.main||b[c].files.loaderFiles?(a.configureFormData[c]||(a.configureFormData[c]={}),b[c].files.monaca&&b[c].files.monaca.main&&b[c].files.monaca.main.forEach(function(b){a.configureFormData[c][b]=!0}),b[c].files.loaderFiles&&(b[c].files.loaderFiles.cssFiles.forEach(function(b){
a.configureFormData[c][b]=!0}),b[c].files.loaderFiles.jsFiles.forEach(function(b){a.configureFormData[c][b]=!0})),a.componentData.push(b[c])):a.componentData.push(b[c]))}a.page="loading",a.loadingText=c.getString("Loading Component Data..."),a.component=f,a.isConfigure=g,a.description="",a.versions=[],a.selectedVersion="",a.componentData=[],a.configureFormData={},e.fetchComponentDetails(f.name,a.isConfigure).then(function(b){a.isConfigure?(i(b.result),a.page="configure"):(a.description=b.result[f.name].latest.description,a.versions=b.result[f.name].versions,a.selectedVersion=a.versions[0],a.page="confirm")},h.bind(this)),a.confirmInstall=function(){a.loadingText=c.getString('Installing Component: "{{component}}"',{component:a.component.name}),a.page="loading",e.install(a.component.name,a.selectedVersion).then(function(c){i(c.result),d.publish(b.EVENT.RELOAD_IDE_FILETREE),a.page="configure"},h.bind(this))},a.saveChanges=function(){var f={};for(var g in a.configureFormData)f[g]=Object.keys(a.configureFormData[g]).filter(function(b){return a.configureFormData[g][b]});e.setLoader(f).then(function(e){d.publish(b.EVENT.NOTIFY_USER,{className:"success",content:c.getString("Successfully configured JS/CSS Component")}),d.publish(b.EVENT.RELOAD_IDE_FILETREE),a.$close()},h.bind(this))}}]),angular.module("monacaServices").controller("WindowsAppSettingsController",["$scope","$uibModal","gettextCatalog","ProjectSettingFactory","SpinnerService","PubSub","Constant",function(a,b,c,d,e,f,g){var h=window.config.projectId,i={};a.isLoading={},a.settings={},a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.createSettingImageUrl=function(a,b){return config.ideHost+"/api/project/"+a+"/file/read/"+b+"?api_token="+window.MonacaApi.Config.getApiToken()},a.appLogoList=function(){var b={app_logo_winrt:{w:150,h:150,label:""},package_logo_winrt:{w:50,h:50,label:""},app_small_logo_winrt:{w:30,h:30,label:""}};for(var c in b)b[c].url=a.createSettingImageUrl(h,c);return b}(),a.tileWideLogoList=function(){var b={app_tile_wide_logo_winrt:{w:310,h:150,label:""}};for(var c in b)b[c].url=a.createSettingImageUrl(h,c);return b}(),a.splashTypeList=function(){var b={app_splash_screen_winrt:{w:620,h:300,label:""}};for(var c in b)b[c].url=a.createSettingImageUrl(h,c);return b}(),a.archList=[{value:"",label:"AnyCPU"},{value:"x86",label:"x86"},{value:"x64",label:"x64"},{value:"arm",label:"Arm"}],a.init=function(){d.loading.then(function(b){var c=(b.project||{},b.config&&b.config.winrt?b.config.winrt:{}),d=b.manifest&&b.manifest.winrt?b.manifest.winrt:{},e=c.preference||{};a.settings.identity_name_winrt=e.WindowsStoreIdentityName?e.WindowsStoreIdentityName:d.identity_name_winrt,a.settings.app_display_name_winrt=d.app_display_name_winrt,a.settings.identity_version_winrt=d.identity_version_winrt,a.settings.packageVersion_winrt=d.packageVersion_winrt,a.settings.app_description_winrt=d.app_description_winrt,a.settings.package_publisher_display_name_winrt=d.package_publisher_display_name_winrt,a.settings.app_arch_winrt=d.app_arch_winrt||"",a.specifyPackageVersion=!!a.settings.packageVersion_winrt,a.settings.app_splash_background_winrt=d.app_splash_background_winrt,i=Object.assign({},a.settings),a.isInitialized=!0,a.isReadyToSave=!0,MonacaApi.Ide.Project.getFileList(h).then(function(b){var c=b.body.result.filelist;c&&c.debug_pfx_winrt&&(a.hasPfx=!0),a.$apply()})})},a.valueChanged=function(b){return i[b]!==a.settings[b]},a.uploadCertificate=function(a){MonacaApi.Ide.Project.uploadSetting(h,a.name,a.files[0])},a.uploadImage=function(d){var e=d.files[0];b.open({templateUrl:"common/dialog.html",controller:"ConfirmController",backdrop:!0,resolve:{title:function(){return c.getString("Confirm")},message:function(){return c.getString("Are you sure to overwrite this file?")}}}).result.then(function(){var b=d.name,i=[b];i.forEach(function(b){a.isLoading[b]=!0}),MonacaApi.Ide.Project.uploadSettingImage(h,b,e).then(function(){a.$apply(function(){i.forEach(function(b){document.getElementById("image-"+b).src=a.createSettingImageUrl(h,b)+"&t="+(new Date).getTime(),a.isLoading[b]=!1})}),f.publish(g.EVENT.NOTIFY_USER,{className:"success",content:c.getString("Successfully uploaded.")})})["catch"](function(){a.$apply(function(){i.forEach(function(b){a.isLoading[b]=!1})}),f.publish(g.EVENT.NOTIFY_USER,{className:"danger",content:c.getString("Failed to upload file.")})})})},a.deleteImage=function(a){MonacaApi.Ide.Project.deleteSettingImage(h,a)},a.openExportCertificateDialog=function(){b.open({templateUrl:"dialogs/PackageCertificateExportDialog.html",controller:"PackageCertificateExportDialogController"})},a.submit=function(){var b={winrt:Object.assign({},a.settings)};a.specifyPackageVersion||(b.winrt.packageVersion_winrt=""),a.isReadyToSave=!1;var j=e.show("main div.container");MonacaApi.Ide.Project.saveProjectSetting(h,b).then(function(){a.isReadyToSave=!0,j.hide(),f.publish(g.EVENT.NOTIFY_USER,{className:"success",content:c.getString("Successfully saved")}),d.reload(),i=Object.assign({},a.settings),a.$apply()})}}]),angular.module("monacaServices").controller("WindowsBuildController",["$scope","$controller",function(a,b){angular.extend(this,b("BaseBuildController",{$scope:a})),a.platform="windows"}]),angular.module("monacaServices").controller("AdHocQRCodeDialogController",["$scope","$uibModalInstance","url",function(a,b,c){a.qrCodeUrl=c,a.ok=function(){b.close(!0)}}]),angular.module("monacaServices").controller("CertificateExportDialogController",["$scope","$uibModalInstance","crtId","oldType",function(a,b,c,d){a.password="",a.exportCertificate=function(){if(c)var e=config.ideHost+"/api/user/ios/exportpkcs?type=crt&id="+encodeURIComponent(c)+"&password="+encodeURIComponent(a.password)+"&api_token="+window.MonacaApi.Config.getApiToken();else if(d)var e=config.ideHost+"/api/user/ios/exportpkcs?type=crt&oldType="+encodeURIComponent(d)+"&password="+encodeURIComponent(a.password)+"&api_token="+window.MonacaApi.Config.getApiToken();window.location.href=e,b.close(!0)}}]),angular.module("monacaServices").controller("ConfirmApkCheckDialogController",["$scope","gettextCatalog","$window","link",function(a,b,c,d){a.ok=function(){c.open(d),a.$close()}}]),angular.module("monacaServices").controller("CsrExportDialogController",["$scope","$uibModalInstance","keyId",function(a,b,c){a.exportCsr=function(){window.location.href=config.ideHost+"/api/user/ios/downloadcsr?id="+encodeURIComponent(c)+"&api_token="+window.MonacaApi.Config.getApiToken(),b.close(!0)}}]),angular.module("monacaServices").controller("DeployServiceLogController",["$scope","service",function(a,b){a.service=b}]),angular.module("monacaServices").controller("DeployServiceRequestController",["$scope","gettextCatalog","DeployServiceFactory","service","queueId",function(a,b,c,d,e){a.service=d,a.serviceOptionalParameters="{}",a.sendToDeployService=function(){d.manualProcessStatus="process",d.manualProcessResults="",c.distributeApp(window.config.projectId,d.service_type,d.alias,a.serviceOptionalParameters,e,null).then(function(a){d.manualProcessStatus="finish",d.manualProcessResults=JSON.stringify(a)},function(a){d.manualProcessStatus="failed",a.body&&a.body.message?d.manualProcessResults=a.body.message:a.body?d.manualProcessResults=JSON.stringify(a.body):d.manualProcessResults=b.getString("An unknown error has occurred while attempting to distribute your app to the selected third-party service.")}),a.$close()}}]),angular.module("monacaServices").controller("KeyStoreAddAliasDialogController",["$scope","$uibModalInstance",function(a,b){var c=window.config.projectId;a.cancel=function(){b.dismiss(!1)},a.ok=function(){MonacaApi.Ide.Project.addAlias(c,a.name,a.password).then(function(){b.close(!0)})}}]),angular.module("monacaServices").controller("KeyStoreExportDialogController",["$scope","$uibModalInstance","SpinnerService",function(a,b,c){var d=window.config.projectId;a.cancel=function(){b.dismiss(!1)},a.ok=function(){var a=c.show(".modal-content");MonacaApi.Ide.Project.getDownloadToken(d,"keystore_android").then(function(c){var e=c.body.result.dlToken;location.href=config.ideHost+"/api/project/"+d+"/export/keystore_android?mode=download&&dlToken="+e+"&api_token="+window.MonacaApi.Config.getApiToken(),a.hide(),b.close(!0)})}}]),angular.module("monacaServices").controller("KeyStoreGeneratorDialogController",["$scope","$uibModalInstance","SpinnerService",function(a,b,c){var d=window.config.projectId;a.cancel=function(){b.dismiss(!1)},a.ok=function(){var e=c.show(".modal-content");MonacaApi.Ide.Project.generateKeyStore(d,a.alias_name,a.alias_password,a.keystore_password).then(function(a){e.hide(),b.close(!0)})}}]),angular.module("monacaServices").controller("KeyStoreImportDialogController",["$scope","gettextCatalog","$uibModalInstance","Constant","PubSub","SpinnerService",function(a,b,c,d,e,f){var g=window.config.projectId;a.selectedFile=null,a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.selectFile=function(b){a.selectedFile=b.files[0],a.filePath=a.selectedFile.name,a.$apply()},a.cancel=function(){c.dismiss(!1)},a.ok=function(){var h=f.show(".modal-content");MonacaApi.Ide.Project.saveKeyStore(g,a.selectedFile,a.password,!0).then(function(a){h.hide(),e.publish(d.EVENT.NOTIFY_USER,{className:"success",content:b.getString("KeyStore import succeeded")}),c.close(!0)},function(a){h.hide(),e.publish(d.EVENT.NOTIFY_USER,{className:"danger",content:a.body.message})})}}]),angular.module("monacaServices").controller("PackageCertificateExportDialogController",["$scope","$uibModalInstance","SpinnerService",function(a,b,c){var d=window.config.projectId;a.cancel=function(){b.dismiss(!1)},a.ok=function(){var a=c.show(".modal-content");MonacaApi.Ide.Project.getDownloadToken(d,"debug_pfx_winrt").then(function(c){var e=c.body.result.dlToken;location.href=config.ideHost+"/api/project/"+d+"/export/debug_pfx_winrt?mode=download&&dlToken="+e+"&api_token="+window.MonacaApi.Config.getApiToken(),a.hide(),b.close(!0)})}}]),angular.module("monacaServices").controller("PrivateKeyAndCsrGeneratorDialogController",["$scope","gettextCatalog","$uibModalInstance","PubSub","Constant","SpinnerService","countryList",function(a,b,c,d,e,f,g){var h=null;a.page="input",a.lang=window.config.lang,a.countryList=g,a.country="ja"==window.config.lang?"JP":"US",a.generatePrivateKeyAndCSR=function(){var g=f.show(".modal-content");MonacaApi.Ide.IosCert.generatePrivateKeyAndCSR(a.adcUsername_ios,a.adcMailAddress_ios,a.country).then(function(c){h=c.body.result,d.publish(e.EVENT.NOTIFY_USER,{className:"success",content:b.getString("CSR has been generated")}),g.hide(),a.page="success"},function(a){d.publish(e.EVENT.NOTIFY_USER,{className:"danger",content:a.body.message}),g.hide(),c.dismiss(!1)})},a.exportCsr=function(){window.location.href=config.ideHost+"/api/user/ios/downloadcsr?id="+encodeURIComponent(h)+"&api_token="+window.MonacaApi.Config.getApiToken(),c.close(!0)}}]),angular.module("monacaServices").controller("PrivateKeyImportDialogController",["$scope","gettextCatalog","$uibModalInstance","PubSub","Constant","SpinnerService",function(a,b,c,d,e,f){a.selectedFile=null,a.selectedFilePath="",a.password="",a.openFileDialog=function(a){document.querySelector("input[type=file][name="+a+"]").click()},a.selectFile=function(b){a.selectedFile=b.files[0],a.selectedFilePath=a.selectedFile.name,a.$apply()},a.importPrivateKey=function(){var g=f.show(".modal-content");MonacaApi.Ide.IosCert.savePKCS(a.selectedFile,a.password).then(function(a){d.publish(e.EVENT.NOTIFY_USER,{className:"success",content:b.getString("The file has been uploaded")}),g.hide(),c.close(!0)},function(a){d.publish(e.EVENT.NOTIFY_USER,{className:"danger",content:a.body.message}),g.hide(),c.dismiss(!1)})}}]),angular.module("monacaServices").directive("fileUpload",function(){return{restrict:"A",scope:{fileUpload:"="},link:function(a,b,c){b.bind("change",function(c){c.stopPropagation(),c.preventDefault(),a.fileUpload(b[0].files[0]).then(function(){b.val(null)})})}}}).directive("fileread",[function(){return{scope:{fileread:"="},link:function(a,b,c){b.bind("change",function(b){a.$apply(function(){a.fileread=b.target.files[0]})})}}}]),angular.module("monacaServices").directive("showTail",function(){return function(a,b,c){a.$watch(function(){return b[0].value},function(a){b[0].scrollTop=b[0].scrollHeight})}}),angular.module("monacaServices").directive("spinner",function(){var a={lines:11,length:36,width:14,radius:38,scale:.3,corners:.8,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner-loading",top:"44%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};return{template:function(a,b){var c="";return b.sLoadingText&&(c='<div class="spinner-loading-text">'+b.sLoadingText+"</div>"),"modal"===b.sType?b.sLoadingClass?'<div class="'+b.sLoadingClass+'">'+c+"</div>":'<div style="height: 40px; padding: 5px;">'+c+"</div>":"<div>"+c+"</div>"},link:function(b,c,d){var e={};d.sType&&"modal"===d.sType&&(e={scale:.12,className:"spinner-loading-small",position:"relative",top:"24%"}),new Spinner(angular.extend(a,e)).spin(c[0].querySelector("div"))}}}),angular.module("monacaServices").factory("DataStorage",[function(){return{selectedBuildType:"development",selectedBuildPurpose:{development:"debug",production:"release"}}}]),angular.module("monacaServices").factory("DeployServiceFactory",["$q","DeployServiceIntegrator",function(a,b){return{serviceCollection:[],ownedCollection:[],fetchOwnedCollection:function(){return b.fetchOwned().then(function(b){return this.ownedCollection=b.result,a.resolve(b.result)}.bind(this),function(b){return a.reject(b.message)}.bind(this))},fetchServiceCollection:function(){return b.fetchServices().then(function(b){return this.serviceCollection=b.result,a.resolve(b.result)}.bind(this),function(b){return a.reject(b.message)}.bind(this))},fetch:function(){return a.all([this.fetchServiceCollection(),this.fetchOwnedCollection()])["catch"](function(b){var c=[];return b[0]&&c.push(b[0]),b[1]&&c.push(b[1]),a.reject(c.join(" "))}.bind(this))},removeOwn:function(c,d){return b.remove(c,d).then(function(){return this.fetchOwnedCollection()}.bind(this),function(b){return a.reject(b.message)}.bind(this))},addOwn:function(c){return b.add(c).then(function(){return this.fetchOwnedCollection()}.bind(this),function(b){return a.reject(b.message)}.bind(this))},distributeApp:function(c,d,e,f,g,h){return b.distributeApp(c,d,e,f,g,h).then(function(b){return a.resolve(b.result)},function(b){return a.reject(b)})}}}]),angular.module("monacaServices").factory("ProjectFactory",["$q","ProjectService",function(a,b){var c,d=a.when(b.getProjectInfo()).then(function(a){c=a.body.result});return{loading:d,_refetch:function(){a.when(b.getProjectInfo()).then(function(a){c=a.body.result})},getUserName:function(){return c.userName},getProjectName:function(){return c.projectName},getInspectorUrl:function(){return c.inspectorUrl},getCordovaVersionList:function(a){if(!a)return c.cordovaVersionList;var b=[];for(var d in c.cordovaVersionList)b.push({value:d,name:c.cordovaVersionList[d]});return b},getCurrentCordovaVersion:function(){return c.cordovaVersion},getCordovaPlatformVersions:function(a){return a?c.cordovaPlatformVersions[a]||null:c.cordovaPlatformVersions},canChangeCordovaPluginVersion:function(){return c.can_support_cordova_plugin_version_change},getAndroidCustomDebuggerVersion:function(){return c.androidCustomDebuggerVer},getIosCustomDebuggerVersion:function(){return c.iosCustomDebuggerVer}}}]),angular.module("monacaServices").factory("ProjectSettingFactory",["$q","ProjectService",function(a,b){function c(){return a.when(b.getProjectSetting()).then(function(a){return d=a.body.result||{}})}var d;return{loading:c(),reload:function(){this.loading=c()},getResult:function(){return d},getProjectInfo:function(){return d.project||{}},getConfig:function(a){return d.config[a]?d.config[a]:{}},getConfig:function(a){return a?d.config[a]?d.config[a]:{}:d.config||{}},getPreference:function(){return d.preference||{}}}}]),angular.module("monacaServices").factory("WebComponentFactory",["$q","Constant","gettextCatalog","PubSub","WebComponentService",function(a,b,c,d,e){function f(a){var b=[];return Object.keys(a).forEach(function(c){a[c].key=c,b.push(a[c])}),b}var g=[],h=a.when(e.list()).then(function(a){f(a.result).forEach(function(a){g.push(a)})},function(b){return a.reject(b)});return{loading:h,collection:g,fetchList:function(a){a=a||"",e.list(a).then(function(a){this.collection=f(a.result)}.bind(this))},uninstall:function(b){return e.uninstall(b).then(function(b){return this.fetchList(),a.resolve(b)}.bind(this))},install:function(b,c){return e.install(b,c).then(function(b){return this.fetchList(),a.resolve(b)}.bind(this))},fetchComponentDetails:function(a,b){return e.fetchComponentDetails(a,b)},setLoader:function(a){return e.setLoader(a)}}}]),angular.module("monacaServices").filter("cdn",function(){return function(a,b){return a+b}.bind(null,window.config.cdnHost.replace(/\/$/,""))}),angular.module("monacaServices").filter("isEmptyObj",function(){return function(a){return angular.equals({},a)}}),angular.module("monacaServices").service("BuildService",["$q",function(a){function b(a){return angular.isObject(a.body)||(a.body=JSON.parse(a.body)),a.body}var c=MonacaApi.Ide.Build,d=window.config.projectId;return{fetchLogList:function(e){return a.when(c.history(d,e)).then(function(a){return b(a)})},getOfficialReleaseDebuggerVersion:function(e){return a.when(c.getOfficialReleaseDebuggerVersion(d,e)).then(function(a){return b(a)})},buildDebugger:function(e){return e.project_id=d,a.when(c.buildDebugger(e)).then(function(a){return b(a)})},buildAndroidDebugger:function(){return a.when(c.buildDebugger({project_id:d,platform:"android",purpose:"debug",android_webview:"default"})).then(function(a){return b(a)})},canBuildIosApp:function(){return a.when(c.canBuildIosApp(d)).then(b.bind(this))},deleteHistory:function(e){return a.when(c.deleteHistory(d,{queue_id:e})).then(function(a){return b(a)})},setIsPubliclyDownloadable:function(e,f){return a.when(c.setIsPubliclyDownloadable(d,e,f)).then(function(a){return b(a)})}}}]),angular.module("monacaServices").service("ContinuousIntegrator",["$q",function(a){function b(b){return b=b.body,"error"===b.status?a.reject(b):a.resolve(b.result)}var c=MonacaApi.Ide.Ci,d=window.config.projectId;return{fetch:function(){return a.when(c.getCiConfigs(d)).then(b.bind(this))},save:function(e){return a.when(c.saveCiConfigs(d,e)).then(b.bind(this))},enable:function(e){return a.when(c.enableCi(d,e)).then(b.bind(this))}}}]),angular.module("monacaServices").service("CordovaPluginService",["$q",function(a){function b(a){return angular.isObject(a.body)||(a.body=JSON.parse(a.body)),a.body}var c=MonacaApi.Ide.Cordova,d=MonacaApi.Ide.Build,e=window.config.projectId;return{list:function(){return a.when(c.list(e,!0)).then(b.bind(this))},listEnabled:function(){return a.when(c.listEnabled(e)).then(b.bind(this))},versionList:function(){return a.when(c.versionList(e)).then(b.bind(this))},getCordovaRegistryIoPlugins:function(){return a.when(c.getCordovaRegistryIoPlugins(e)).then(b.bind(this))},enable:function(d){return a.when(c.enable(e,d)).then(b.bind(this))["catch"](b.bind(this))},disable:function(d){return a.when(c.disable(e,d)).then(b.bind(this))},importFile:function(d){return a.when(c.importFile(e,d)).then(b.bind(this))},switchCordovaVersion:function(d){return a.when(c.switchCordovaVersion(e,d)).then(b.bind(this))["catch"](b.bind(this))},getPluginSettings:function(d){return a.when(c.getPluginSettings(e,d)).then(b.bind(this))},getPluginVersionCollection:function(d){return a.when(c.getPluginVersionCollection(e,d)).then(b.bind(this))},updatePluginSettings:function(d){return a.when(c.updatePluginSettings(e,d)).then(b.bind(this))},hasAssetEncryptionPassword:function(){return a.when(d.canBuildIosApp(e)).then(b.bind(this))},saveAssetsEncryptPassword:function(d,f){return a.when(c.saveAssetsEncryptPassword(e,d,f)).then(b.bind(this))},getInAppUpdaterSetting:function(){return a.when(c.getInAppUpdaterSetting(e)).then(b.bind(this))},getInAppUpdater4Setting:function(){return a.when(c.getInAppUpdater4Setting(e)).then(b.bind(this))},saveInAppUpdaterSetting:function(d,f){return a.when(c.saveInAppUpdaterSetting(e,d,f)).then(b.bind(this))},saveInAppUpdater4Setting:function(d,f){return a.when(c.saveInAppUpdater4Setting(e,d,f)).then(b.bind(this))},importCordovaPluginPath:function(d){return a.when(c.importCordovaPluginPath(e,d)).then(b.bind(this))},importCordovaPluginFile:function(d){return a.when(c.importCordovaPluginFile(e,d)).then(b.bind(this))},fetchRegistryData:function(d,e){return a.when(c.fetchRegistryData(d,e)).then(b.bind(this))}}}]),angular.module("monacaServices").service("DeployServiceIntegrator",["$q",function(a,b){function c(b){return b=b.body,"error"===b.status?a.reject(b):a.resolve(b)}var d=MonacaApi.Ide.Deploy;return{fetchServices:function(){return a.when(d.getAvailableBackendServiceCollection()).then(c.bind(this))},fetchOwned:function(){return a.when(d.getUsersBackendServiceCollection()).then(c.bind(this))},add:function(b){return a.when(d.addUserOwnedBackendService(b)).then(c.bind(this))},remove:function(b,e){return a.when(d.removeUserOwnedBackendService(b,e)).then(function(a){return c(a)})},distributeApp:function(b,e,f,g,h,i){return a.when(d.distributeApp(b,e,f,g,h,i)).then(function(a){return c(a)})}}}]),angular.module("monacaServices").service("Dialog",["gettextCatalog","$uibModal",function(a,b){var c="common/dialog.html";return{alert:function(d,e){return b.open({templateUrl:c,controller:"AlertController",windowClass:"alert-dialog",resolve:{message:function(){return d},title:function(){return e||a.getString("Alert Notification")}}}).result},confirm:function(d,e){return b.open({templateUrl:c,controller:"ConfirmController",windowClass:"confirm-dialog",resolve:{message:function(){return d},title:function(){return e||a.getString("Confirm Notification")}}}).result}}}]),angular.module("monacaServices").service("InAppUpdaterService",["$q",function(a){function b(a){return angular.isObject(a.body.result)||(a.body.result=JSON.parse(a.body.result)),a.body.result}var c=MonacaApi.Ide.InAppUpdater,d=window.config.projectId;return{getRemotePackgeList:function(e){return a.when(c.packageList(d)).then(function(a){return b(a)})}}}]),angular.module("monacaServices").service("ProjectService",["$q",function(a){var b=MonacaApi.Ide.Project;return{getProjectInfo:b.getProjectInfo.bind(this,window.config.projectId),getProjectSetting:b.getProjectSetting.bind(this,window.config.projectId)}}]),angular.module("monacaServices").service("ServiceIntegrationService",["$q",function(a){function b(a){return angular.isObject(a.body)||(a.body=JSON.parse(a.body)),a.body}var c=MonacaApi.Ide.ServiceIntegration,d=window.config.projectId;return{list:function(){return a.when(c.list(d)).then(b.bind(this))}}}]),angular.module("monacaServices").service("SpinnerService",function(){function a(a){return"string"==typeof a?document.querySelector(a):a}return{show:function(b){var c=a(b),d="_spinner_"+Math.floor(1e5*Math.random());if(!c)return{hide:function(){}};var e=$(c).css("position");return"absolute"!==e&&"relative"!==e&&$(c).css("position","relative"),$(c).append($("<div>").attr("id",d).css({position:"absolute",top:"0%",left:"0%",right:"0%",bottom:"0%",opacity:.8,zIndex:900,backgroundColor:"#646464"}).append(new Spinner({scale:.3}).spin().el)),c=null,{hide:function(){$("#"+d).remove()}}}}}),angular.module("monacaServices").service("WebComponentService",["$q",function(a){function b(a){return angular.isObject(a.body)||(a.body=JSON.parse(a.body)),a.body}var c=MonacaApi.Ide.WebComponent,d=window.config.projectId;return{list:function(e){return a.when(c.list(d,e)).then(b.bind(this))},fetchComponentDetails:function(e,f){return a.when(c.fetchComponentDetails(d,e,f)).then(b.bind(this))},install:function(e,f){return a.when(c.install(d,e,f)).then(b.bind(this))},uninstall:function(e){return a.when(c.uninstall(d,e)).then(b.bind(this))},setLoader:function(e){return a.when(c.setLoader(d,e)).then(b.bind(this))}}}]),angular.module("monacaServices").service("WebSocketHandlerService",function(){return{webSocket:null,errorHandler:null,buildLogStorage:{},subscribers:{},getEndpointUrl:function(a){var b=config.ideHost;b=b.replace(/https:\/\/ide\./,"");var c="wss";return b.match("monaca.mobi")||/local$/.test(b)&&(c="ws",b+=":1443"),c+"://ws."+b+"/ide/subscribe/"+a},connect:function(a){var b=this;try{b.webSocket=new WebSocket(this.getEndpointUrl(a))}catch(c){return}b.webSocket.onmessage=function(a){b.onMessage(a)},b.webSocket.onerror=function(a){b.onError(a)},b.webSocket.onclose=function(){setTimeout(function(){b.connect(a)},1e4)}},close:function(){self.webSocket&&(self.webSocket.onclose=function(){},self.webSocket.close())},subscribeByQueueId:function(a,b){this.subscribers[a]={callback:b}},updateBuildLog:function(a,b){this.buildLogStorage[a]?this.buildLogStorage[a]+=b:this.buildLogStorage[a]=b},getBuildLog:function(a){return this.buildLogStorage[a]?this.buildLogStorage[a]:""},onMessage:function(a){var b=this,c=JSON.parse(a.data);if("buildLog"==c.method)return b.updateBuildLog(c.data.queueId,c.data.body),void(b.subscribers[c.data.queueId]&&b.subscribers[c.data.queueId].callback({data:c.data}))},onError:function(a){var b=this;b.errorHandler&&b.errorHandler(a)},setErrorHandler:function(a){var b=this;b.errorHandler=a}}}),angular.module("monacaServices").run(["gettextCatalog",function(a){a.setStrings("ja",{'(Select "arm" or "x86" to switch crosswalk architecture.)':'※ Crosswalkのアーキテクチャを切り替えるには monaca:CrosswalkArchitecture に "x86” か "arm” を指定してください。',"*To use a high-performance version,":"※ハイパフォーマンス版を使用するには、",'<a href="https://docs.monaca.io/en/reference/config/android_configuration/#uses-permission" target="_blank">Permissions</a> will be configured automatically by the Cordova plugins.':'<a href="https://docs.monaca.io/ja/reference/config/android_configuration/#uses-permission" target="_blank">パーミッション</a>は使用しているプラグインに基いて自動的に決定されます。','<a href="https://docs.monaca.io/en/sampleapp/tips/splashScreen/#settings-for-ios" target="_blank">Hide by</a>':'<a href="https://docs.monaca.io/ja/sampleapp/tips/splashScreen/#settings-for-ios" target="_blank">スプラッシュ画像の消去方法</a>','<em><button class="m-btn m-btn-default" ng-click="clickGenerateKeyStore()"><span translate="">Clear and Generate New</span></button></em>':'<em><button class="m-btn m-btn-default" ng-click="clickGenerateKeyStore()"><span translate="">クリアして新規作成</span></button></em>',"<em>{{service.name}}</em> was successfully installed.":"<em>{{service.name}}</em>は正常にインストールされました。","<em>{{service.name}}</em> will be installed to the project. Are you sure to continue?":"<em>{{service.name}}</em>をプロジェクトにインストールします。よろしいですか？",'<span class="ng-scope">削除</span>':'<span class="ng-scope”>Delete</span>',"A debug build can be created. <br> A registered Apple Developer Program developer certificate, and a Development Provisioning profile are required.":"デバッグ向けのビルドができます。<br />Apple Developer Programに登録されたデベロッパー証明書とDevelopmentプロビジョニングプロファイルが必要です。","A debugger for your device can be built.  <br> A debugger including Cordova plugins enabled in the Plugin Management screen can be built.  The operation of plugins not included in the store-version debugger, enterprise plugins etc. can be checked. <br> USB debugging, and high-level debugging of Javascript using Monaca CLI or Localkit is possible.":"デバイス向けのデバッガーをビルドできます。<br />プラグイン管理画面で有効にしたCordovaプラグインを組み込んだデバッガーをビルドできます。ストア版デバッガーには含まれないプラグインやEnterpriseプラグインの動作確認を行うことができます。<br />またUSBデバッグにも対応し、Monaca CLIやLocalkitを用いたJavaScriptの高度なデバッグが可能になります。",'A debugger including Cordova plugins enabled in the Plugin Management screen can be built.The operation of plugins not included in the store-version debugger, enterprise plugins etc. can be checked. Details <a href="https://docs.monaca.io/en/debugger/manual/installation/debugger_android/" target="_blank">here</a>.':'プラグイン管理画面で有効化したCordovaプラグインを含むデバッガーをビルドします。ストア版デバッガーに含まれないプラグイン、エンタープライズプラグイン等の動作をチェックできます。<br>詳細は <a href="https://docs.monaca.io/ja/debugger/manual/installation/debugger_android/" target="_blank">こちら</a>',"A keystore created elsewhere will be imported, and an alias added. <br> Also, it can be exported to the local PC as a backup.":"別の場所で作成されたキーストアをインポートし、エイリアスを追加します。<br />また、エクスポートでローカルPC上にバックアップをとることができます。","A simulator build can be created.<br>This build will not use an Apple Developer certificate or provisioning profile.":"シュミュレータービルドができます。<br />Apple デベロッパー証明書やプロビジョニングプロファイルは必要ありません。","A storyboard splash screen uses one image for all screen sizes and crops it as necessary. You must use a storyboard to create full-screen apps on iPhone X.":"1つの画像で必要に応じてイメージをトリミングし、すべての画面サイズに適用させます。iPhone Xでフルスクリーンアプリを作成する場合は、オートリサイズモードを選択してください。","A successful build does not guarantee that your application will pass the regulation tests for uploading on an app store.":"※ビルド成功は、iOS/Androidのストア申請(パッケージ申請)および審査通過を保証するものではございません。","A zip file will be created containing HTML5 assets used by the app to allow automatic updating without rebuilding or repacking.  <br> For this build, the InAppUpdater plugin must be included in the Cordova Plugin Settings screen. Please deploy the file to your web server.":"ビルドやストアへの提出を行わずに自動アップデートを行うためのHTML5アセットが含まれたZipファイルが作成されます。<br>このビルドを行うためには、Cordovaプラグイン画面にて、InAppUpdaterプラグインが有効になっている必要があります。作成されたファイルはWebサーバーにデプロイしてください。","A zip file will be created containing HTML5 assets used by the app to allow automatic updating without rebuilding or repacking.  <br> For this build, the Monaca In-App Updater plugin must be included in the Cordova Plugin Settings screen. Please deploy the file to your web server.":"アプリで使用しているHTML5アセットを、再ビルド・再パッケージ化を行わずにアプリを自動更新するためのZIPファイルを出力します。<br />このビルドには、Cordovaプラグインの管理画面からMonaca In-App Updaterプラグインを組み込む必要があります。<br />出力されたファイルは配置用Webサーバーへ配置してください。",ALIAS:"エイリアス","API Key:":"APIキー:","AdHoc Build":"アドホックビルド",Add:"追加","Add Alias":"エイリアスの追加","Add Deploy Service":"新しく追加する","Add New Alias":"新しいエイリアスを追加します。","Add New Deploy Service":"デプロイサービスを新しく追加する","Adding external deploy services allows you to save API tokens.  <br>These deployment services are accessible by various Monaca tools and services.":"デプロイサービスを追加して設定することにより、外部サービスのAPIトークンを保存することができます。<br>これらデプロイサービスは、様々なMonacaの機能にアクセスすることができます。",Advertisement:"広告","After correcting errors, please build again.":"エラーを修正した後で、再度ビルドを行ってください。","After upgrading Cordova version, you cannot downgrade to the previous version.":"Cordovaバージョンをアップグレードすると、前のバージョンに戻すことはできません。","Alert Notification":"注意事項",Alias:"エイリアス","Alias Name :":"エイリアス名 :","Alias Name&nbsp;:":"エイリアス名&nbsp;:","Alias Password :":"エイリアスのパスワード :","Alias Password&nbsp;:":"エイリアスのパスワード&nbsp;:","Alias is the unique identifier for each configurations.":"エイリアスは設定を管理するための識別子となり、重複することはできません。","Alias password is not specified":"エイリアスのパスワードが入力されていません","Alias:":"エイリアス:",All:"すべて","All Platforms":{category:"すべて"},"Allowed URL:":"許可する外部URL:",'Allowed URL:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">One hostname per line. It can also start with protocol (http://). If you specify [subdomains] after the hostname, all subdomains are applied.<br>Note that this field is common to Android and iOS.</i></span>':'許可する外部URL: <span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">1行ごとに1つのホスト名を指定します。プロトコル (http://) からはじめることもできます。ホスト名の後に [subdomains] と指定すると、すべてのサブドメインが対象になります。<br>この設定値はAndroidとiOSで共通です。</i></span>',"Also, please use the Apple Developer Program and register the target device distribution certificate.":"また、Apple Developer Programを使用して、インストール先の端末が含まれたディストリビューション証明書を登録してください。",'An Android app with a dummy signature will be built. <br> A debug-build application has no signature, so it cannot be registered in Google Play. See <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">here</a> for details.':'ダミー署名を用いてAndroidアプリをビルドします。<br />デバッグビルドされたアプリケーションはパッケージに署名がないため、Google Playに登録することはできません。詳細は<a href="https://docs.monaca.io/ja/monaca_ide/manual/build/build_android/" target="_blank">こちら</a>',
"An email has been sent to your account.":"メールが登録されたアドレスに送信されました。",'An error occurred while attempting to redirect you to the "{{page_title}}" page.':'"{{page_title}}"ページへのリダイレクト中にエラーが発生しました。',"An unexpected error has occurred while fetching In-App Updater plugin settings. Please try again.":"In-App Updaterプラグインの設定取得に失敗しました。再度行ってください。","An unexpected error has occurred while fetching encrypt plugin settings. Please try again.":"暗号化プラグインの設定取得に失敗しました。再度行ってください。","An unexpected error has occurred while reading config.xml. Please fix config.xml file.":"config.xmlの読み込みに失敗しました。config.xmlを修正してください。",'An unexpected error has occurred with the message of "{{error_message}}". Please try again.':"エラーが発生しました: {{error_message}}","An unknown error has occurred while attempting to distribute your app to the selected third-party service.":"選択されたサービスへのデプロイが失敗いたしました。",Analytics:"統計",Android:"Android","Android AdHoc Build":"Androidアドホックビルド","Android Allowed URL will also be changed.":"Androidの「許可する外部URL」も変更されます。","Android App Configuration":"Androidアプリ設定","Android Application Name will also be changed.":"Androidのアプリケーション名も変更されます。","Android Debug Build":"Androidデバッグビルド","Android Debugger Build":"Androidデバッガービルド","Android InAppUpdater Build":"InAppUpdaterビルド","Android Overscroll configuration will also be changed.":"Androidのオーバースクロール設定も変更されます。","Android Package Name will also be changed.":"Androidのパッケージ名も変更されます。","Android Platform:":"Androidプラットフォーム:","Android Release Build":"Androidリリースビルド","Android/Windows Version will also be changed.":"Android/Windowsのバージョンも変更されます。","App Description is not used in cordova6.":"概要はcordova6では使用しません。",'App Description:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate="">App Description is not used in cordova6.</i></span>':'概要:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate="">概要はCordova6のプロジェクトでは使用されません。</i></span>',"App Display Name:":"アプリ表示名:","App ID:":"App ID:","App Logo":"アプリロゴ","App Settings":"アプリの設定","App Store distribution build. <br> A registered Apple Developer Program distribution certificate, and a Distribution (App Store) Provisioning profile are required.":"App Store配布向けのビルドです。<br />Apple Developer Programに登録されたディストリビューション証明書とDistribution(App Store)プロビジョニングプロファイルが必要です。","App build is failed. Your app cannot be built. Please make sure following settings are properly setup:":"アプリのビルドに失敗しました。次の項目を確認してください。","App icon, splash screen, file version number etc. can be set in the Windows app settings screen.":"Windowsアプリ設定画面でアプリのアイコンやスプラッシュ画像、ファイルのバージョン番号などの設定が出来ます。","App launch page is not saved.":"アプリ起動ページのファイルが存在しません。","Application Display Preference":"アプリケーションの表示設定","Application GUID:":"アプリGUID:","Application Information":"アプリケーション情報","Application Name:":"アプリケーション名:","Application's display name.<br>Note that this field is common to Android and iOS.<br>\n                                    Submitting your app to store may fail if some symbols are included.":"アプリケーションの表示名です。<br>この項目はAndroidとiOSで共通となります。<br>また、一部の記号が含まれている場合、ストア申請に失敗する場合があります。","Apply to Corporate Plan":"企業向けプランの問い合わせをする","Architecture:":"アーキテクチャ:","Are you sure to delete this alias from KeyStore?":"キーストアからエイリアスを削除してもよろしいですか?","Are you sure to delete this certificate?":"この証明書を削除してもよろしいですか?","Are you sure to delete this private key?":"この秘密鍵を削除してもよろしいですか?","Are you sure to delete this provisioning profile?":"このプロビジョニングプロファイルを削除してもよろしいですか?","Are you sure to export this file?":"このファイルをエクスポートしてもよろしいですか?","Are you sure to overwrite this file?":"このファイルを上書きしてもよろしいですか?","Are you sure to remove the KeyStore and all the aliases?":"キーストアとすべてのエイリアスが削除されます。よろしいですか?","Are you sure to remove the plugin? Removed plugins cannot be restored.":"プラグインを削除してもよろしいですか? 元に戻すことはできません。","Are you sure you want to remove this?":"本当に削除しますか?",'Are you sure you would like to delete the deploy service configurations for "{{alias}}" for service type "{{service}}"?':'"{{service}}"サービスの"{{alias}}"を消去します。よろしいですか？',"Are you sure you would want to disable this plugin.":"このプラグインを無効にしてもよろしいですか?","Are you sure you would want to remove this component?":"このコンポーネントを無効にしてもよろしいですか?","Attention: Please ensure that all unsaved changes have been saved before continuing.":"注意：続行する前に、未保存の変更がないか確認してください。","Available Plugins":"利用可能なプラグイン","Available Tickets":"今月の継続的インテグレーション実行状況",Back:"戻る",Backend:"バックエンド",Browse:"参照する",Build:"ビルド","Build &amp; Build Settings":"ビルド/ビルド設定","Build Android App":"Androidアプリのビルド","Build History":"ビルドログ","Build Log":"ビルドログ","Build Settings":"ビルドの設定","Build Windows App (preview version)":"Windowsアプリのビルド（プレビュー）","Build for Debugging":"デバッグ向けビルド","Build for Release":"リリース向けビルド","Build iOS App":"iOSアプリのビルド","Building...":"ビルド中…","Bundle Version Number:":"バンドルバージョン:","CI Tickets:":"CIチケット:",'CI server will automate its job by reading recipe script. Please refer to <a href="https://docs.monaca.io/en/manual/monaca_ci/overview/#json-settings-configuration" target="_blank">JSON Settings Configuration</a> for the details.':'CIサーバーは以下のJSON設定を読み込んで自動的にタスクを実行します。 詳細はドキュメントの<a href="https://docs.monaca.io/ja/manual/monaca_ci/overview/#json-settings-configuration" target="_blank">JSON設定</a>を参照してください。','CLI Version<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate="">After upgrading Cordova version, you cannot downgrade to the previous version.</i></span>':'CLI バージョン<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate="">Cordovaバージョンをアップグレードすると、過去のバージョンに戻すことはできません。</i></span>',"CSR has been generated":"CSR情報が生成されました","CSR has been generated. <br>Please upload generated CSR to Apple Developer Program to issue certificate.":"CSR情報が生成されました。<br>生成されたCSRをApple Developer Programにアップロードし、証明書の発行を行ってください。","CSR(iOS) Export":"CSR情報(iOS)のエクスポート",Cancel:"キャンセル","Cannot use ’&amp;’ and ’@’.":"＆と@を使用することはできません。","Category:":"カテゴリ:","Category：":"カテゴリ:",Certificate:"証明書","Certificate and Profiles":"証明書とプロファイル","Certificate has expired.":"証明書の期限が切れています","Certificate is not registered.":"証明書が登録されていません。","Certificate is not registered. {{certificate_error}}":"証明書が登録されていません。 {{certificate_error}}","Certificates registered in Monaca":"Monacaに登録された証明書",Change:"変更","Changing your splash screen type will modify your config.xml. Do you want to continue?":"スプラッシュスクリーン 設定モードを変更すると、config.xmlが変更されます。よろしいですか？","CheckUpdate URL:":"CheckUpdate URL:","Choose CLI version and plugins for the selected version are shown.":"指定されたCordovaバージョンに含まれるCLIとプラグインのバージョンが表示されます。",Clear:"クリア","Clear and Generate New":"新しく生成する",Close:"閉じる","Component Name":"コンポーネント名",Components:"コンポーネント","Config Alias:":"エイリアス名:","Configs were saved successfully.":"正しく保存されました。",Configure:"設定","Configure Deploy Service":"デプロイサービスへ","Configured Deploy Services":"連携中のデプロイサービス一覧",Confirm:"確認","Confirm New Password:":"新しいパスワード（確認）:","Confirm Notification":"確認","Congratulations!":"おめでとうございます！","Continuous Integration":"継続的インテグレーション",'Continuous Integration <sup class="beta">BETA</sup>':'継続的インテグレーション<sup class="beta">BETA</sup>',"Continuous Integration:":"継続的インテグレーション:","Cordova Plugin:":"Cordovaプラグイン:","Cordova Plugins":"Cordovaプラグイン","Cordova Version:":"Cordovaバージョン","Cordova5 projects and below will not display a realtime log.":"Cordova5以下のプロジェクトではリアルタイムログは表示されません。","Country:":"国コード","Create KeyStore and Alias":"キーストアとエイリアスの作成","Create New KeyStore and Alias":"新しいキーストアとエイリアスを作成します。",'Crosswalk Architecture is not set. Please select Architecture in "Crosswalk WebView Engine" Configure in Cordova Plugin page.':"Crosswalk用アーキテクチャが設定されていません。「Cordovaプラグイン」 => 「Crosswalk WebView Engine」 => 「設定」 からアーキテクチャを選択してください。","Crosswalk Engine":"ハイパフォーマンスWebView（Crosswalkエンジン）","Crosswalk Version:":"Crosswalkバージョン:","Crosswalk is no longer supported on Monaca using Cordova 7. If you have the Crosswalk plugin installed, it will be removed during the upgrade.":"Crosswalkプラグインは、Cordova 7からサポート対象外となります。Crosswalkプラグインがインストールされている場合は、アップグレード中に削除されます。","Current KeyStore and all the aliases will be lost. Are you sure to continue?":"既存のキーストアとすべてのエイリアスが消去されます。続けてもよろしいですか？","Debug Build":"デバッグビルド",Debugger:{version:"Debugger"},"Debugger Build":"デバッガービルド",Delete:"削除","Delete Deploy Service Configurations":"デプロイサービス設定を消去する","Dependent on other package.<span></span>":"他のパッケージに依存しています。<span></span>",Deploy:"デプロイ","Deploy Service:":"デプロイサービス：","Deploy Services":"デプロイサービス",'Deploy Services<sup class="beta">BETA</sup>':'デプロイサービス<sup class="beta">BETA</sup>',"Deploy URL:":"デプロイURL:","Deployment &amp; Optional Services":"デプロイ&amp; オプションサービス",Details:"詳細を見る","Device WebView (default)":"システムのWebView（デフォルト）",Disable:"無効","Disable bouncing in WebView.<br>Note that this field is common to Android and iOS.":"WebViewのバウンス機能を無効にします。<br>この項目はAndroidとiOSで共通です。","Disallow Overscroll:":"オーバースクロールを無効:",'Disallow Overscroll:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Disable bouncing in WebView.<br>Note that this field is common to Android and iOS.</i></span>':'オーバースクロールを禁止: <span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">WebViewのバウンスを無効にします。<br>この項目はAndroidとiOSで共通です。</i></span>','Display Time:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Specify how long the splash will be present (in milliseconds).</i></span>':'表示時間: <span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">スプラッシュ画面の表示期間をミリ秒で表示します。</i></span>',"Do you want to set this build as publicly downloadable?:":"このビルドのダウンロードを認証不要に設定しますか？",Documentation:"ドキュメントを参照する","Download CSR":"CSRのダウンロード","Download URL:":"ダウンロードURL:","Download to Local PC":"ローカルPCに<br />ダウンロード","Email Address:":"メールアドレス:",Enable:"有効","Enable Viewport Scale:":"ビューポート制御を有効:","Enable the crosswalk plugin in Cordova plugins page.":"Cordova設定画面から「Crosswalk WebView Engine」を有効にしてください。","Enabled Plugins":"有効なプラグイン","Encryption plugin password is not set.":"暗号化プラグインのパスワードが設定されていません。","Enter the Bundle Version Number which specifies the build version number of the bundle.":"そのバンドルのビルドバージョン番号となるバンドルバージョン番号を入力してください。","Enter the Version Number which you specified in iTunes Connect.<br>Note that this field is common to Android and iOS.":"iTunes Connectで指定したバージョン番号を入力してください。<br>この項目はAndroidとiOSで共通です。","Error Resolution:":"エラーの解決方法、～を行ってください","Existing project will be copied and saved as another project.":"既存のプロジェクトは別のプロジェクトとして複製し保存されます。",Export:"エクスポート","Export Developer Certification(iOS)":"開発者証明書のエクスポート（iOS）","Export KeyStore (Android)":"キーストアのエクスポート（Android）","Export Package Certificate Key":"パッケージ証明書キーのエクスポート","Export Previous Private Key and Cerificates":"以前の秘密鍵と証明書のエクスポート","Export developer cert":"開発者証明書のエクスポート","Export distribution cert":"ディストリビューション証明書のエクスポート","Export previous certificate":"以前の証明書をエクスポート","Export previous private key and certificate.":"以前のIDEで作成した秘密鍵、証明書をエクスポートします。","External service API tokens can be saved, according to the deployment method used (Monaca-provided upload to iTunes Connect or deploy service settings). These deployment services can be accessed from various Monaca functions.":"Monaca 提供のiTunes Connectへのアップロード機能 および、外部サービスとの連携によるデプロイ機能やセキュリティ診断機能を利用することが出来ます。","Fade Splash Screen:":"スプラッシュ画像をフェードアウト:","Failed to Update CI Status":"継続インテグレーション情報の取得に失敗しました","Failed to change Cordova version.":"Cordovaバージョンの変更に失敗しました。",'Failed to install "{{service}}" service. One or more dependencies has failed to install.':"{{service}} サービスのインストールに失敗しました。依存された機能のインストールに失敗しました。","Failed to install custom Cordova plugin.":"カスタムCordovaプラグインのインストールに失敗しました。","Failed to save Cordova plugin settings.":"Cordovaプラグイン設定の保存に失敗しました。","Failed to save In-App Updater Cordova plugin settings.":"In-App Updater設定の保存に失敗しました。","Failed to set resource encryption password.":"暗号化プラグインの設定に失敗しました。","Failed to update the status of the CI configurations. Please try again.":"CI設定の更新に失敗しました。再実行してください。","Failed to upload file.":"アップロードに失敗しました。","Files:":"ファイル: ",'For more details about the change, please refer to <a href="{{ param.link }}" target="_blank">our\n    documentation</a>.':'詳細については、<a href="{{ param.link }}"  target="_blank">こちらの記事</a>を参照してください。','For more information on third-party distribution service\'s optional parameters, please visit <a href="https://docs.monaca.io/en/products_guide/monaca_ide/monaca_ci/supported_services/">Monaca Support Docs</a>.':"各サービスがサポートするパラメータの詳細については、<a href=“https://docs.monaca.io/ja/products_guide/monaca_ide/monaca_ci/supported_services/“>Monacaドキュメント</a>を参照してください。",'For more information, please refer to <a href="http://www.sonydna.com/sdna/e/solution/scc.html" target="_blank">Secure Code Checker</a>.':'Secure Coding Checkerの詳細については、<a href="http://www.sonydna.com/sdna/solution/scc.html" target="_blank">こちら</a>。','For the purposes of generating a certificate via the Apple Developer Program, a CSR file will be prepared. <br> For detailed usage information, please see <a href="https://docs.monaca.io/en/maual/build/ios/build_ios" target="_blank">help</a>.':'CSRファイルはApple Developer Programで証明書を発行するために使用します。<br />詳細な使い方については、<a href="https://docs.monaca.io/ja/manual/build/ios/build_ios/" target="_blank">ヘルプ</a>を参照してください。',"Fullscreen:":"フルスクリーン:","Generate Key and CSR":"秘密鍵とCSRの生成","Generate KeyStore":"キーストアを作成する","Generate KeyStore and Alias":"キーストアとエイリアスの作成","Generate New KeyStore:":"新しいキーストアを作成：","Generate Private Key and CSR":"秘密鍵とCSRの生成","Generate private key and CSR for issuing new certificate.":"新しい証明書を発行するための秘密鍵とCSRを生成します。","Generated Private Key":"生成されたプライベートキー","Hide Automatically":"自動的に閉じる","Hide Details":"詳細を非表示","Hide by JavaScript":"JavaScriptで閉じる","High Performance (Crosswalk)":"ハイパフォーマンス（Crosswalk）","How to Configure VCS":"VCSの設定方法","Icon or splash screen is not set.":"アイコンもしくはスプラッシュ画像が設定されていません。",Icons:"アイコン","Icons for App Store":"App Store用アイコン",'If so, please be aware that currently Monaca only uses a trial version of this service.\n    By continuing to use this service, you agree to <a href="https://cxt.scc.sonydna.com/Content/TermsOfService-scc-cxt-en.pdf" target="_blank">the Sony Digital Network Application\'s terms of service</a>.':'本機能は機能制限版となります。サービスの利用を開始すると、<a href="https://cxt.scc.sonydna.com/Content/TermsOfService-scc-cxt.pdf" target="_blank">利用規約</a>に同意したこととなります。',Import:"インポート","Import Cordova Plugin":"Cordovaプラグインのインポート","Import KeyStore (Android)":"キーストアのインポート（Android）","Import Private Key":"秘密鍵のインポート","Import Secret Key and Certificate":"秘密鍵と証明書のインポート","Import the Keychain private key and certificate.":"秘密鍵と証明書のインポート","In-App Updater Settings":"In-App Updater設定","In-App Updater settings is not set.":"In-App Updaterのプラグイン設定が必要です。","In-App Updater update file":"In-App Updater用更新ファイル","In-House Build":"In-Houseビルド","InAppUpdater Build":"InAppUpdaterビルド","Input Password":"入力パスワード","Input string is too long.":"入力文字列が長すぎます。","Input string is too short.":"入力文字列が短すぎます。",Install:"インストール","Install JS/CSS Component":"JS/CSS コンポーネントのインストール",'Install Parameters (one per line):<span title="Each line corresponds to each --variable parameter of cordova plugin add." class="btn-tooltip"><i class="tooltip-1"></i></span>':'インストールパラメータ（改行区切り）: <span title="Cordovaプラグイン追加時に指定するパラメータを入力してください。” class="btn-tooltip"><i class="tooltip-1"></i></span>',"Install via QR code":"QRコードからインストール","Install via<br>QR code":"QRコードから<br />インストール","Installing <em>{{service.name}}</em>...":"サービス <em>{{service.name}}</em> をインストール中...",'Installing Component: "{{component}}"':"コンポーネント {{component}} をインストール中...","Installing {{service.name}}":"{{service.name}} をインストール中","Invalid email address.":"メールアドレスの形式が正しくありません。",IoT:"IoT","It is recommended you use reverse-domain style (e.g. com.example.appname).<br>You can use only alphanumeric characters and periods.<br>At least one period must be used.<br>Each segment separated by periods should begin with an alphabetic character.<br>Note that this field is common to Android and iOS.":"逆ドメイン形式（com.example.appname等）を推奨します。<br>英数字とピリオドのみを利用できます。<br>最低でも1つのピリオド文字が必要です。<br>ピリオドで区切られた各部位では英字から始める必要があります。<br>この項目はAndroidとiOSで共通です。","It's recommended to use 9-patch formatted PNG (*.9.png) files for Android splash screens, because regular PNGs are forcibly scaled to the screen size.<br>Note that splash images can only be displayed on build apps, not on the Debugger.":"Androidスプラッシュ画面では、自動的に画面サイズに最適化が行われる9-patch形式のPNGファイル（拡張子.9.png）が推奨されます。<br>スプラッシュ画像はビルドされたアプリには表示されますが、デバッガー上では反映されません。","JS/CSS Component:":"JS/CSSコンポーネント","JS/CSS Components":"JS/CSSコンポーネント","JS/CSS Components:":"JS/CSSコンポーネント:","JSON Settings":"JSON設定","JSON Validation Error":"JSON設定エラー～を続行できません","Keep Running:":"バックグラウンド時も<br>アプリを常に実行:","Key (PKCS#12 .p12):":"秘密鍵（PKCS#12 .12）","KeyStore contains Alias to code-sign release build apps. For security, KeyStore should be protected by password.":"KeyStoreにはエイリアスが含まれ、リリースビルド時の署名に使用します。セキュリティのため、KeyStoreはパスワードで保護されています。","KeyStore import succeeded":"KeyStoreのインポートに成功","KeyStore is not set.":"キーストアが設定されていません。","KeyStore<br>Import and Export":"キーストアの<br />インポートとエクスポート","Language:":"言語:","Last Updated: <i>{{plugin.updatedAt}}</i>":"最終更新日:<i>{{plugin.updatedAt}}</i>","Leaving Cloud IDE":"クラウドIDEを閉じています",Legacy:"サイズ指定モード","Legacy splash screen configuration requires a separate image for each size of iOS device. Monaca can generate all the correct sizes for you from one image, or you can upload them individually. However, this does not support devices such as iPhone X.":"従来のスプラッシュ画面設定では、iOSデバイスのサイズごとに画像が必要です。Monacaでは1つの画像から全サイズを生成することも、個別にアップロードすることもできます。ただし、iPhone Xなどのデバイスはサポートしていません。","Limited distribution build. <br> A registered Apple Developer Program distribution certificate, and a Distribution (AdHoc) Provisioning profile are required.":"限定配布向けのビルドです。<br />Apple Developer Programに登録されたディストリビューション証明書とDistribution (AdHoc) プロビジョニングプロファイルが必要です。","Limited distribution build. <br> A registered Apple Developer Program distribution certificate, and a Distribution (InHouse) Provisioning profile are required.":"限定配布向けのビルドです。<br />Apple Developer Programに登録されたディストリビューション証明書とDistribution (In-House) プロビジョニングプロファイルが必要です。","Link {{project_vcs.service_type}} Account":"{{project_vcs.service_type}}アカウントと連携する","List of Alias in KeyStore:":"キーストア内のエイリアス一覧:","List of supported third-party service providers that can boost app development and deployment.":"ビルド処理と連携することができる、サードパーティのサービスプロバイダーです。","Loading Component Data...":"コンポーネント情報を読み込んでいます...","Localizations:":"対応言語:",Log:"ビルド履歴","Manage App Settings":"アプリの設定を管理する","Manage KeyStore and Alias":"キーストアとエイリアスを管理する","Manage build settings":"ビルド設定の管理","Manual Deploy Service":"デプロイサービス","Manual Deploy Service Log":"デプロイサービスログ",Misc:"その他","New Password:":"新しいパスワード:","No build history is found. Please start a new build.":"ビルド履歴が存在しません。","No plugins are available.":"利用できるプラグインがありません。","No plugins are currently enabled or installed.":"有効またはインストールされたプラグインがありません。","Not supported for this project.":"このプロジェクトではサポートしていません。","Notify registered e-mail address of installation method.":"登録メールアドレスに<br />インストール方法を通知","Number of builds per day has reached the maximum.":"一日のビルド上限数に達しました。",OK:"OK","One hostname per line. It can also start with protocol (http://). If you specify [subdomains] after the hostname, all subdomains are applied.<br>Note that this field is common to Android and iOS.":"各行にホスト名を指定します。http://などのプロトコル情報から指定することもできます。ホスト名のあとに [subdomains] と指定することで、すべてのサブドメインが対象となります。<br>この項目はAndroidとiOSで共通です。","One or more app icons are missing.":"1つ以上のアプリアイコンがありません。","Only PNG format is supported for uploading. Large images will be auto-scaled to fit the corresponding size. Images on the Cloud IDE are scaled down to fit the window but does not affect the actual image proportions.":"アップロードにはPNG形式のみがサポートされています。大きな画像は、対応するサイズに合わせて自動スケーリングされます。クラウドIDEの画像はウィンドウに合わせて縮小されますが、実際の画像の比率には影響しません。","Only PNG format is supported. Large pictures will be auto-scaled to fit the size.":"PNG形式の画像を指定してください。サイズが大きい場合は自動的に縮小されます。","Only available to Plan for team development.":"企業向けプランでのみ利用可能です","Open <code>config.xml</code> and add following tag.":"<code>config.xml</code>を開き、下記のタグを追加してください。","Optional Parameter Entry":"パラメータ（オプション）","PNG format is supported.":"PNG形式の画像を指定してください。","PNG format is supported. Large pictures will be auto-scaled to fit right size.":"PNG形式の画像を指定してください。サイズが大きい場合は自動的に縮小されます。","PNG format is supported. Large pictures will be auto-scaled to fit right size. Images containing transparent backgrounds can not be set.":"PNG形式の画像を指定してください。サイズが大きい場合は自動的に縮小されます。透明な背景を含む画像は設定できません。","Package Certificate Key:":"パッケージ証明書キー:","Package Name / URL:":"パッケージ名 / URL:",'Package Name:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">It is recommended you use reverse-domain style (e.g. com.example.appname).<br>You can use only alphanumeric characters and periods.<br>At least one period must be used.<br>Each segment separated by periods should begin with an alphabetic character.<br>Note that this field is common to Android and iOS.</i></span>':'パッケージ名:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">逆ドメイン形式（com.example.appname等）を推奨します。<br>英数字とピリオドのみを利用できます。<br>最低でも1つのピリオド文字が必要です。<br>ピリオドで区切られた各部位では英字から始める必要があります。<br>この項目はAndroidとiOSで共通です。</i></span>',"Package Publisher Name:":"パッケージパブリッシャー名:","Package Version:":"パッケージバージョン:","Package:":"パッケージ:",Password:"パスワード","Password for the Key:":"キーのパスワード:","Password is already registered.<br>If using In-App-Updater, already distributed apps will become incompatible once the password is changed.":"パスワードは既に登録されています。<br>In-App Updaterでは、パスワードが変更された場合、既に配布されたアプリとの互換性が失われます。",Permissions:"パーミッション","Plan Details":"プラン詳細","Please add the InAppUpdater plugin. <br>It can be added in the Cordova Plugin settings screen.":"InApp Updaterプラグインを追加してください。<br>Cordovaプラグイン設定より追加できます。","Please fill in the required fields: {{missing}}":"内容が入力されていません: {{missing}}","Please generate a private key or import on the build settings screen.":"ビルド設定画面で秘密鍵を生成するかインポートを行ってください。","Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program developer certificate and associated Development Provisioning profile.":"ビルド設定画面で秘密鍵を生成するか、インポートを行ってください。<br />また、Apple Developer Programで作成したデベロッパー証明書と、証明書に紐づくDevelopmentプロビジョニングプロファイルを登録してください。","Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program distribution certificate and Distribution (AdHoc) Provisioning profile.":"ビルド設定画面で秘密鍵を生成するか、インポートを行ってください。<br />また、Apple Developer Programで作成したDistribution証明書と、証明書に紐づくDistribution (AdHoc) プロビジョニングプロファイルを登録してください。","Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program distribution certificate and Distribution (InHouse) Provisioning profile.":"ビルド設定画面で秘密鍵を生成するか、インポートを行ってください。<br />また、Apple Developer Programで作成したDistribution証明書と、証明書に紐づくDistribution (In-House) プロビジョニングプロファイルを登録してください。","Please input information for Alias which will be stored in KeyStore. Please input Alias name and password.":"KeyStoreに格納するエイリアス情報を入力してください。エイリアス名とパスワードを入力してください。","Please input necessary configurations for building Windows application. This configuration is saved by project basis.":"Windowsアプリケーションのビルドに必要な情報を入力してください。この設定はプロジェクト単位で保存されます。",'Please input necessary configurations for building iOS application. This configuration is saved by project basis.<a href="https://docs.monaca.io/en/monaca_ide/manual/build/ios/build_ios/#configure-ios-app" target="_blank"><span class="m-tooltip-body btn-help"></span></a>':'iOSアプリケーションのビルドに必要な情報を入力してください。この設定はプロジェクト単位で保存されます。<a href="https://docs.monaca.io/ja/monaca_ide/manual/build/ios/build_ios/#configure-ios-app" target="_blank"><span class="m-tooltip-body btn-help"></span></a>',"Please input password <br>for KeyStore&nbsp;:":"KeyStoreで使用するパスワード<br>を入力してください&nbsp;:","Please input password for KeyStore&nbsp;:":"KeyStoreのパスワードを入力してください:","Please input your name and email address which match with your iTunes Connect Record.":"iTunes Connectで使用している名前とメールアドレスを入力してください。","Please insert an alias for the selected deploy service.":"選択されたデプロイサービスのエイリアスを入力してください。",'Please proceed to JSON Settings if you don\'t want to automate deployment. <br>Use <a href="http://monaca.io/ci.html" target="_blank">Monaca CI</a> if you want to automatically distribute your app to deployment services including App Store and Hockey App.':'デプロイを自動化しない場合は、JSON設定を行ってください。<br>App StoreやHockey App等で自動的にアプリを配布したい場合は、<a href="http://ja.monaca.io/ci.html" target="_blank">Monaca CI</a>をご利用ください。',"Please register Splash screen which will be displayed when opening the application.<br>PNG format is supported. Large pictures will be auto-scaled to fit the size.":"アプリケーション起動時に表示されるスプラッシュ画像を登録してください。<br>PNG形式をサポートしています。大きな解像度の場合は画面に収まるように調整されます。",'Please see <a ng-click="gotoCiJsonDocs()">Monaca Docs</a> for support on JSON configurations for Continuous Integration.':'<a ng-click="gotoCiJsonDocs()">ドキュメント</a>を参照して設定内容を確認してください。','Please see <a ng-click="openSetupVcsDoc()">Monaca documentation</a> for support on how to configure your project with VCS.':'バージョン管理システムとの連携については、<a ng-click="openSetupVcsDoc()">Monacaドキュメント</a>を参照してください。','Please select a "*-theme.css"':"*-theme.cssを選択してください。","Please select a deploy service.":"デプロイサービスを選択してください。",'Please setup necessary configurations for building iOS application. This configuration is saved by user basis.<a href="https://docs.monaca.io/en/manual/build/ios/build_ios/#configure-ios-build-settings" target="_blank"><span class="m-tooltip-body btn-help"></span></a>':'iOSアプリケーションのビルドに必要な情報を入力してください。この設定はユーザー単位で保存されます。<a href="https://docs.monaca.io/ja/manual/build/ios/build_ios/#configure-ios-build-settings" target="_blank"><span class="m-tooltip-body btn-help"></span></a>',"Please upload: 1.&nbsp;Apple Developer Program certificate&nbsp;&nbsp;2.&nbsp;Associated profile&nbsp; in order.":"1.&nbsp;Apple Developer Programで生成した証明書&nbsp;&nbsp;2.&nbsp;証明書に紐づくプロファイル&nbsp;の順でアップロードしてください。","Please use half-width numbers.":"半角数値で入力してください。","Plugin Search":"プラグイン検索","Plugin Version:":"プラグインバージョン:","Prefer Related Applications:":"関連するアプリケーションを優先：","Preparing...":"準備中…","Private Key and CSR":"秘密鍵とCSR",Profile:"プロファイル","Profile has expired.":"プロファイルの期限が切れています",Project:{version:"Project",$$noContext:"プロジェクト"},"Provisioning File":"プロビジョニングファイル","Provisioning Profile is not registered.":"プロビジョニングプロファイルが登録されていません。","Provisioning profile is not registered. {{provisioning_error}}":"プロビジョニングプロファイルが登録されていません。 {{certificate_error}}","Redirection Failure":"リダイレクトに失敗しました","Register Issued Certificate":"発行された証明書を登録する","Release Build":"リリースビルド","Release build can not continue because the keystore and alias is not created. Please create a keystore and alias from build settings.":"キーストアとエイリアスが作成されていないためリリースビルドを続行できません。ビルド設定よりキーストアとエイリアスを作成してください。",Remove:"削除","Remove JS/CSS Component":"JS/CSSコンポーネントの削除","Required: {{requiredItems}}":"必要: {{requiredItems}}",Save:"保存する","Save HTML5 Resource Encryption Password":"HTML5リソース暗号化のパスワードを保存する","Scope:":"適用範囲：","Screen Orientation:":"画面の向き:",'Screen Orientation:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Set screen orientation.</i></span>':'画面の向き:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">画面の方向を指定します。</i></span>',Search:"検索","See Details":"詳細を表示","See More":"次を表示","Select a Deploy Service":"デプロイサービスを選ぶ","Select files to be loaded for":"読み込むファイルを選択してください","Send install information to registered email address":"登録メールアドレスにインストール方法を通知",Service:"サービス","Service Integrations":"サービス連携","Service Provider Information":"サービスプロバイダの情報","Service Provider:":"サービス名:","Settings: {{plugin.name}}":"設定:{{plugin.name}}","Setup KeyStore and Alias":"キーストアとエイリアスの設定","Show Details":"詳細を表示","Show README":"READMEを表示","Show Splash Screen Spinner:":"スプラッシュにスピナーを表示:","Simulator Build":"シュミュレータービルド",'Specifies the display locale in the native widgets (i.e. "Copy" when selecting a text.)':"ネイティブウィジェットで使用するロケール（テキスト選択時の「コピー」等）を指定します","Specify URL or Package Name":"URLもしくはパッケージ名を指定します","Specify different version for bundle":"バンドルバージョンを指定","Specify four numbers separated by dots. (e.g. 1.10.2.3)<br>Note that each number should be in 0-99.":"ドット区切りで4つの数値を指定してください。（例: 1.10.2.3）<br>それぞれの数値は0-99の範囲で指定してください。","Specify the numbers for package version":"パッケージバージョンを指定","Specify the version code manually":"バージョンコードを指定","Specify three numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.":"ドット区切りで3つの数値を指定してください。（例: 1.10.2）<br>それぞれの数値は0-99の範囲で指定してください。","Specify three or four numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.":"ドット区切りで3つ、または4つの数値を指定してください。（例: 1.10.2）<br>それぞれの数値は0-99の範囲で指定してください。",Splash:"スプラッシュ","Splash Background:":"背景色:","Splash Files":"スプラッシュファイル","Splash Screen":"スプラッシュスクリーン","Splash screen type":"スプラッシュスクリーン 設定モード",Start:"利用開始","Start Build":"ビルドを開始する","Start URL:":"開始URL：",Status:"ステータス","Stock WebView (default)":"システムのWebView（デフォルト）","Storyboard (Recommended)":"オートリサイズモード","Submit email to your registered email address.":"登録されたメールアドレス宛てにメールを送信します。",Success:"成功","Successfully changed Cordova version.":"Cordovaバージョンの変更に成功しました。","Successfully configured JS/CSS Component":"JS/CSSコンポーネントの設定に成功しました。","Successfully deleted plugin.":"プラグインの削除に成功しました。","Successfully disabled plugin.":"プラグインを無効にしました。","Successfully enabled plugin.":"プラグインを有効にしました。","Successfully installed custom Cordova plugin":"カスタムCordovaプラグインをインストールしました","Successfully saved":"保存しました","Successfully saved Cordova plugin settings.":"Cordovaプラグイン設定を保存しました。","Successfully saved In-App Updater Cordova plugin settings.":"In-App Updaterプラグイン設定を保存しました。","Successfully set resource encryption password.":"リソース暗号化のパスワードを設定しました。",'Successfully uninstalled JS/CSS Component: "{{component_name}}"':"JS/CSSコンポーネント {{component_name}} を削除しました","Successfully uploaded.":"アップロードしました。","Supported Monaca Debugger:":"対応するMonacaデバッガー:","Supported Operating System Version:":"サポートされるOSバージョン:","Target Device Family":"対象デバイス",Testing:"テスト","Text Direction:":"テキストの向き:","The Continuous Integration service is currently not available with your existing account settings.<br>To use this service, please link your Monaca account with a {{project_vcs.service_type}} account.":"現在のアカウントでは継続的インテグレーションを利用することができません。<br>Monacaアカウントと{{project_vcs.service_type}}アカウントを連携する必要があります。","The Progressive Web App Manifest file is missing.":"Progressive Web App マニフェストファイルがありません。","The field contains invalid characters.":"不正な文字が含まれています。","The file has been deleted":"ファイルが削除されました","The file has been uploaded":"ファイルが更新されました","The following component will be installed to your project.":"下記のコンポーネントがプロジェクトにインストールされます。","The following files were installed.":"下記のファイルがインストールされました。","The number of available continuous integration tickets has been depleted.  To continue this service, please purchase additional CI tickets.":"今月の継続的インテグレーション実行回数が上限に達しました。<br>実行可能回数を上げるにはCIチケットの購入が必要です。",'The package is zipped and ready for distribution. For more details, please refer to the <a href="https://docs.monaca.io/en/reference/power_plugins/in-app_updater/" target="_blank">docs</a>.<br> Please deploy the file to the Web server. Build log can be obtained from <a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">here</a>.':'出力されたファイルは配置用Webサーバーへ配置してください。詳細は<a href="https://docs.monaca.io/ja/reference/power_plugins/in-app_updater/" target="_blank">ドキュメント</a>を参照してください。<br>ビルドログを表示するには<a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">こちら</a>をクリックして下さい。',"The platform requirements will be changed:":"プラットフォーム要件が変更になります:","The project contains unlicensed plugins.":"ご利用中のプランでは使用できないCordovaプラグインが含まれています。",'The project is not configured for Release build. In order to register your App to Google Play, please setup it according to <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">the document</a>.<br>KeyStore and Alias are used to code-sign applications for release build. KeyStore can contain multiple Alias, but only one Alias is used for code-sign an application.<br>The configuration is saved by user basis.<a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/#step-2-configure-android-keystore" target="_blank"><span class="m-tooltip-body btn-help"></span></a>':'このプロジェクトはリリースビルド設定が行われていません。Google Playストアに登録する場合は、<a href="https://docs.monaca.io/ja/monaca_ide/manual/build/build_android/" target="_blank">ドキュメント</a>を参照してください。<br>リリースビルドではKeyStoreとエイリアスを使用します。KeyStoreは複数のエイリアスを格納できますが、アプリケーションの署名にはそのなかの1つが使用されます。<br>この設定はユーザー単位で保存されます。<a href="https://docs.monaca.io/ja/manual/build/build_android/#configure-android-keystore" target="_blank"><span class="m-tooltip-body btn-help"></span></a>',
"The project is not linked to a version control repository.":"プロジェクトはバージョン管理のリポジトリにリンクされていません。","The project's Cordova version is unsupported by your current plan and can not build. Please upgrade your project and try again.":"Cordovaバージョンが古いため、現在のプランではビルドできません。","The selected build history has been deleted successfully.":"選択したビルド履歴が正常に削除されました。","Theme Color:":"テーマカラー:",'There are no available deploy services. Go to the <a ng-click="loadDeployServices()">Deploy Service Settings</a> page to configure your services.':'利用できるデプロイサービスがありません。<a ng-click="loadDeployServices()">デプロイサービス設定</a>よりサービスを追加してください。',"There is no configured deploy service.":"追加されたデプロイサービスはありません。","This field is required.":"必須入力項目です。","This is a Vulnerability Assessment tool which is provided by Sony Digital Network Application, Inc.":'<div style="margin: 15px 0;">アプリケーション脆弱性検査サービスを利用しますか？</div>本サービスはソニーデジタルネットワークアプリケーションズ株式会社より提供さています。','This project does not meet the minimum Cordova version requirement to use this feature.<br>To use this feature, please upgrade your project\'s Cordova version in the <a href="#" ng-click="setPage(settings.Constant.PAGE_CORDOVA_PLUGINS)">Cordova Plugins page</a>.':'この機能を使用するには、Cordovaバージョンをアップグレードする必要があります。<a href="#" ng-click="setPage(settings.Constant.PAGE_CORDOVA_PLUGINS)">Cordovaプラグイン設定</a>よりアップグレードを実施してください。',"This project is currently not configured properly to use the Continuous Integration service.<br>To use this service, please link this project with a {{project_vcs.service_type}} repository from the Monaca IDE Version Control Configuration page.":"このプロジェクトの現在の設定では継続的インテグレーションが利用できません。<br>Monaca IDEのグローバルメニューで、バージョン管理の設定から{{project_vcs.service_type}}リポジトリの登録を行ってください。","This service is installed as JS/CSS Components.":"このサービスはJS/CSSコンポーネントとしてインストールされます。","This service is installed as a Cordova Plugin.":"このサービスはCordovaプラグインとしてインストールされます。","Tile Wide Logo":"ワイドロゴ（タイル用）","To Start Continuous Integration":"継続的インテグレーションを開始する","To confirm or remove, go to the Cordova Plugins settings.":"Cordovaプラグイン設定画面より確認と削除を行ってください。","To confirm or remove, go to the JS/CSS Components settings.":"JS/CSSコンポーネント設定画面より確認と削除を行ってください。","To start CI, please push the code to its repository server.":"CIを実行するには、レポジトリサーバーに対してコードをプッシュしてください。",'To use the In-App Updater update file build, an Corporate Plan upgrade is required. <br> The Corporate Plan includes not only the automatic In-App Updater, but also extended features for resource encryption and secure storage. Details <a href="https://monaca.io/enterprise.html" target="_blank">here</a>.':'In-App Updater用更新ファイルのビルドを利用する為には、企業向けプランへのアップグレードが必要です。<br />企業向けプランは、アプリを自動的に更新するIn-App Updaterだけでなく、<br />リソースの暗号化やセキュアストレージといった拡張機能を利用することができます。詳細は<a href="https://ja.monaca.io/enterprise.html" target="_blank">こちら</a>',"Unknown Version":"不明なバージョン","Update Cordova version will affect your project, which can result to unexpected behavior.\n    And all core Cordova plugins will be updated. Do you want to continue?":"Cordovaバージョンを変更すると、アプリの実行に影響がある可能性があります。続行してもよろしいですか？","Update Mode:":"更新モード:","Update all images at once.":"一括で設定する","Updating Cordova Version":"Cordovaバージョンのアップデート","Upgrade Completed":"アップグレード成功","Upgrade Plan":"プランのアップグレード","Upgrade to {{cordova.version.nextLong}}":"{{cordova.version.nextLong}} にアップグレード",Upload:"アップロード","Upload Certificate":"証明書のアップロード","Upload Compressed ZIP Package":"圧縮されたZIPパッケージをアップロード","Upload Profile":"プロファイルのアップロード",'Use Different Package Name <br>for Debug Build:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">If enabled, the package name will be *.debug when build type is Debug. Also, package name will be *.debugger when building project debugger.</i></span>':'ビルド種別ごとに<br>パッケージ名を分ける:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">有効にした場合、デバッグビルドではパッケージ名に *.debug が付与されます。デバッガービルドではパッケージ名に *.debugger が付与されます。</i></span>','Use KeyStore to build Andoid app. Submission to Google Play is also possible. Details <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">here</a>.':'キーストアを用いてAndroidアプリをビルドします。Google Playへの提出も可能です。詳しくは<a href="https://docs.monaca.io/ja/monaca_ide/manual/build/build_android/" target="_blank">こちら</a>。',"Use Secure Coding Checker":"Secure Coding Checkerを利用する","User Name:":"ユーザー名:","Version <i>{{plugin.version}}</i>":"バージョン <i>{{plugin.version}}</i>",'Version Code:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">An internal version number. The value must be set as an integer.</i></span>':'バージョンコード:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">内部バージョン番号を指定します。値は数値である必要があります。</i></span>',"Version Number:":"バージョン:","Version:":"バージョン:","Version: {{component.version}}":"バージョン:{{component.version}}",'Version:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Specify three or four numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.<br>Note that this field is common to Android and iOS.</i></span>':'バージョン:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">ピリオドで区切られた3もしくは4個の数字を指定します。<br>各フィールドは0から99の間である必要があります。<br>この設定はAndroidとiOSで共通です。</i></span>',"VersionName format is incorrect.":"バージョン番号のフォーマットが不正です。","View Details":"詳細を見る","Vulnerability Assessment Service":"セキュリティ検査サービス","Waiting... (Behind {{queue.queue_count}} queues)":"開始まで待機しています（{{queue.queue_count}}件のキューがあります）","WebView Engine:":"WebViewエンジン:",Website:"Webサイト",Windows:"Windows","Windows App Configuration":"Windowsアプリ設定","Windows Build":"Windowsビルド","Windows Build requires Cordova 6.2 or later. Please upgrade cordova version.":"WindowsビルドにはCordova6.2以上が必要です。Cordovaプラグイン画面からCordovaバージョンをアップグレードしてください。","Windows application will be built. <br>The built application can be installed on a Windows PC. Please see the documentation for installation information.":"Windows向けにアプリケーションをビルドします。<br />作成したアプリケーションはWindows PCにインストールすることができます。インストール方法などはドキュメントを参照してください。",'You are about to be redirected away from the Monaca Cloud IDE. Would you like to continue to the "{{page_title}}" page?':"MonacaクラウドIDEを閉じようとしています。「{{page_title}}」ページに進みますか？","You can export the data to make a backup on your local PC.":"ローカルPCへのバックアップのためにデータをエクスポートすることができます。","You can export the data to make a backup on your local PC.<br>You need to input password to export this file. Password will be used when importing to your computer. Blank password is not recommended.":"ローカルPCへのバックアップのためにデータをエクスポートすることができます。<br>このファイルのエクスポートにはパスワードを入力する必要があります。パスワードを空白にすることは推奨されません。","You can import KeyStore file from other source (eclipse). Please refer to the manual for details.":"他のアプリケーションで使用しているKeyStoreファイルをインポートすることができます。詳細はマニュアルを参照してください。","You can import private key exported from Key Chain Access (Mac OS X). Please refer to the manual for details.":"Key Chain Accessツールからエクスポートした秘密鍵をインポートできます。詳細はマニュアルを参照してください。",'You can link your {{project_vcs.service_type}} account at the <a ng-click="configureVcs()">Link {{project_vcs.service_type}} Account</a> account settings page.':'{{project_vcs.service_type}}アカウントとの連携を行うには、<a ng-click="configureVcs()">{{project_vcs.service_type}}アカウントと連携</a>にアクセスしてください。',"You can manually hide the splash screen with JavaScript to increase user experience.":"JavaScriptコードでスプラッシュ画面を非表示にすることができます。","You can only use numbers.":"半角数字のみ使用可能です。","You do not have the necessary setting to build.":"ビルドに必要な設定が出来ていません。","You need to check at least 1 iOS target device family.":"対象デバイスを選択してください。","You need to check at least 1 target.":"対象デバイスを選択してください。","You need to rebuild the app to apply the change.":"変更の反映にはアプリの再ビルドが必要です。",'Your build is successfully finished. Please download and install the app on the device. Please click <a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">here</a> to see the build log.':'ビルドに成功しました。ダウンロードしてデバイスにインストールしてください。ビルドログを確認するには<a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">こちらをクリック</a>してください。',"Your plan not support the imported plugin.":"ご利用中のプランでは、インポートされたプラグインは利用できません。",'Your project has been upgraded to a newer version. <br/><div style="font-size: 13px;margin-top:7px;">Furthermore, we created a back up in "{{new_project_name}}"</div>':'新しいバージョンにアップグレードされました。<br/><div style="font-size: 13px;margin-top:7px;">そしてバックアップを{{new_project_name}} として作成しました。</div>',"[Cordova version &gt;= 5]":"[Cordovaバージョン &gt;= 5]","[Cordova version &lt; 5]":"[Cordovaバージョン &lt; 5]",'[Cordova version &lt; 5]<br>Open <code>ios/MonacaApp-Info.plist</code> and change values defined in<br><code>UISupportedInterfaceOrientations</code> and <code>UISupportedInterfaceOrientations~ipad</code>.<br><a href="https://docs.monaca.io/en/reference/config/ios_configuration/#uisupportedinterfaceorientations" target="_blank">More details</a><br><br>[Cordova version &gt;= 5]<br>Open <code>config.xml</code> and add following tag.<br><pre>...<br>&nbsp;&nbsp;&lt;platform name="ios"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;preference name="orientation" value="all"/&gt;<br>&nbsp;&nbsp;&lt;/platform&gt;<br>&lt;/widget&gt;</pre>The value of "orientation" is "all", "landscape" or "portrait".':'[Cordovaバージョン &lt; 5]<br><code>ios/MonacaApp-Info.plist</code>を開き、<br><code>UISupportedInterfaceOrientations</code>と<code>UISupportedInterfaceOrientations~ipad</code>に定義されている値を変更します。<br><a href="https://docs.monaca.io/en/reference/config/ios_configuration/#uisupportedinterfaceorientations" target="_blank">詳細</a><br><br>[Cordovaバージョン &gt;= 5]<br><code>config.xml</code>を開き、下記のタグを追加してください。<br><pre>...<br>&nbsp;&nbsp;&lt;platform name="ios"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;preference name="orientation" value="all"/&gt;<br>&nbsp;&nbsp;&lt;/platform&gt;<br>&lt;/widget&gt;</pre>orientationの値には、all、landscapeもしくはportraitを指定します。',"default":"default","expiration date: {{crt.expirationms|date:'yyyy/M/d'}}":"有効期限: {{crt.expirationms|date:'yyyy/M/d'}}","https://monaca.io/support/inquiry.html":"https://ja.monaca.io/support/inquiry.html",iOS:"iOS","iOS AdHoc Build":"iOSアドホックビルド","iOS Allowed URL will also be changed.":"iOSの「許可する外部URL」も変更されます。","iOS App Configuration":"iOSアプリ設定","iOS App ID will also be changed.":"iOSのパッケージ名も変更されます。","iOS Application Name will also be changed.":"iOSのアプリケーション名も変更されます。","iOS Build Configuration":"iOSビルド設定","iOS Debug Build":"iOSデバッグビルド","iOS Debugger Build":"iOSデバッガービルド","iOS InAppUpdater Build":"InAppUpdaterビルド","iOS Overscroll configuration will also be changed.":"iOSのオーバースクロール設定も変更されます。","iOS Platform:":"iOSプラットフォーム:","iOS Release Build":"iOSリリースビルド","iOS Simulator Build":"iOS シュミュレータービルド","iOS/Android Version will also be changed.":"iOS/Anrdoidのバージョンも変更されます。","iOS/Windows Version will also be changed.":"iOS/Windowsのバージョンも変更されます。",iPad:"iPad","iPhone, iPod touch":"iPhone, iPod Touch","or later":"以上",severe:"severe","{{ci_tickets.usable}}/{{ci_tickets.total}} (Complimentary : {{ci_tickets.total_complimentary}})":"{{ci_tickets.usable}}/{{ci_tickets.total}}回 (無料 : {{ci_tickets.total_complimentary}})","{{project_vcs.service_type}} Account":"{{project_vcs.service_type}}アカウント","{{selected_service.name}} Configurations":"{{selected_service.name}}の詳細設定","{{service.name}} Details":"{{service.name}} の詳細"})}]),angular.module("monacaServices").run(["$templateCache",function(a){a.put("AndroidAppSettings.html",'<div ng-controller="AndroidAppSettingsController" ng-init="init()" ng-cloak>\n    <div class="container" ng-form="form">\n        <div class="cell-build-panel">\n            <header>\n                <h1 translate>Android App Configuration</h1>\n            </header>\n            <fieldset>\n                <legend>\n                    <h2 translate>Application Information</h2>\n                </legend>\n                <div class="config-section-panel appInfo-body tableCell-all">\n                    <div>\n                        <label translate>Appliation Name:<span class="m-tooltip-body icon-help">\n                            <i class="m-tooltip tt-text-leftside">Any strings (Asterisk will be appended to application name for debug build).<br>Note that this field is common to Android and iOS.<br>Submitting your app to store may fail if some symbols are included</i>\n                        </span></label>\n                        <div>\n                            <input type="text" name="applicationName_android" ng-model="settings.applicationName_android" ng-pattern="/^(?!(&|@)).*$/" class="long-text" required>\n                            <span class="config-warning" ng-show="form.applicationName_android.$valid && valueChanged(\'applicationName_android\')">\n                                <span translate>iOS Application Name will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.applicationName_android.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Cannot use &rsquo;&amp;&rsquo; and &rsquo;@&rsquo;.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Package Name:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">It is recommended you use reverse-domain style (e.g. com.example.appname).<br/>You can use only alphanumeric characters and periods.<br/>At least one period must be used.<br/>Each segment separated by periods should begin with an alphabetic character.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="text" name="applicationClass_android" ng-model="settings.applicationClass_android" ng-pattern="/^([a-zA-Z]+[a-zA-Z0-9_]*\\.){1,}[a-zA-Z]+[a-zA-Z0-9_]*$/" class="long-text" required>\n                            <span class="config-warning" ng-show="form.applicationClass_android.$valid && valueChanged(\'applicationClass_android\')">\n                                <span translate>iOS App ID will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.applicationClass_android.$error" ng-show="isInitialized">\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div ng-if="!isRPGUser">\n                        <label class="lh-clear" translate>Use Different Package Name <br />for Debug Build:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">If enabled, the package name will be *.debug when build type is Debug. Also, package name will be *.debugger when building project debugger.</i></span></label>\n                        <div>\n                            <input type="checkbox" id="config_postfix" ng-model="settings.config_postfix">\n                            <label for="config_postfix" translate>Enable</label>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Version:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Specify three or four numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="text" name="versionName_android" ng-model="settings.versionName_android" ng-pattern="/^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(\\.(\\d{1,2}))?$/" required>\n                            <span class="config-warning" ng-show="form.versionName_android.$valid && valueChanged(\'versionName_android\')">\n                                <span translate>iOS/Windows Version will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.versionName_android.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Specify three or four numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div class="content-info-added" ng-show="5 <= cordovaVersion">\n                        <label translate>Version Code:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">An internal version number. The value must be set as an integer.</i></span></label>\n                        <div>\n                            <input type="text" name="versionCode_android" ng-model="settings.versionCode_android" ng-disabled="!specifyVersionCode" ng-pattern="/^[0-9]+$/" ng-required="specifyVersionCode">\n                            <span ng-messages="form.versionCode_android.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>You can only use numbers.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                            <div>\n                                <ul>\n                                    <li>\n                                        <input type="checkbox" id="specifyVersionCode" ng-model="specifyVersionCode">\n                                        <label for="specifyVersionCode" translate>Specify the version code manually</label>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div ng-if="!isRPGUser">\n                        <label translate>Fullscreen:</label>\n                        <div>\n                            <input type="checkbox" id="fullscreen_android" ng-model="settings.fullscreen_android">\n                            <label for="fullscreen_android" translate>Enable</label>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2 translate>Icons</h2>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>PNG format is supported.</div>\n                    <div class="updateAllImagesAtOnce-contents">\n                        <div translate>Update all images at once.</div>\n                        <div>\n                            <em><button class="m-btn m-btn-default-dark" type="button" ng-click="openFileDialog(\'icon_all_android\')"><span translate>Upload</span></button></em>\n                            <input name="icon_all_android" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                        </div>\n                    </div>\n\n                    <div class="setFile-list-body">\n                        <div class="sfl-android">\n                            <div class="setFile-list" ng-repeat="(iconType,icon) in iconTypeList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                                    <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img class="sfimg-android" ng-src="{{icon.url}}&amp;{{timestamp()}}" alt="{{iconType}}" id="image-{{iconType}}">\n                                    </a>\n                                </div>\n\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="icon.label"></span><br>({{icon.w}} x {{icon.h}})</label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default ng-binding" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                                            <input name="{{iconType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="!isRPGUser">\n                <legend>\n                    <h2 translate>Splash Files</h2>\n                </legend>\n                <div class="config-section-panel splashScreen-body">\n                    <div class="config-info" translate>It\'s recommended to use 9-patch formatted PNG (*.9.png) files for Android splash screens, because regular PNGs are forcibly scaled to the screen size.<br>Note that splash images can only be displayed on build apps, not on the Debugger.</div>\n                    <div class="setFile-list-body">\n                        <div class="sfl-android">\n                            <div class="setFile-list" ng-repeat="(splashType,splash) in splashTypeList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{splashType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{splashType}}">\n                                    <a ng-href="{{splash.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img class="sfimg-android" ng-src="{{splash.url}}&amp;{{timestamp()}}" id="image-{{splashType}}">\n                                    </a>\n                                </div>\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="splash.label"></span></label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(splashType)"><span translate>Change</span></button></em>\n                                            <em><button class="m-btn m-btn-default" type="button" ng-click="deleteImage(splashType)"><span translate>Clear</span></button></em>\n                                            <input name="{{splashType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="tableCell">\n                        <label translate>Display Time:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Specify how long the splash will be present (in milliseconds).</i></span></label>\n                        <div>\n                            <input type="text" name="splashtime_android" ng-model="settings.splashtime_android" ng-pattern="/\\d+/" required>\n                            <span ng-messages="form.splashtime_android.$error" ng-show="isInitialized">\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="isRPGUser">\n                <legend>\n                    <h2 translate>背景画像</h2>\n                    <div class="tableCell">\n                        <div class="m-component-combobox">\n                            <select name="rpgtkool_background_image_android" ng-model="settings.selected_rpg_background_image_android"\n                                    ng-options="image for image in rpg_background_images_android">\n                                <option value="">なし</option>\n                            </select>\n                        </div>\n                    </div>\n                </legend>\n            </fieldset>\n            \n            <fieldset ng-if="!isRPGUser">\n                <legend>\n                    <h2 translate>Permissions</h2>\n                </legend>\n                <div class="config-section-panel splashScreen-body">\n                    <div class="config-info">\n                        <p translate><a href="https://docs.monaca.io/en/reference/config/android_configuration/#uses-permission" target="_blank">Permissions</a> will be configured automatically by the Cordova plugins.</p>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2 translate>Misc</h2>\n                </legend>\n                <div class="config-section-panel misc-body tableCell-all">\n                    <div class="text-top content-info-added" ng-if="!isRPGUser">\n                        <label translate>Allowed URL:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">One hostname per line. It can also start with protocol (http://). If you specify [subdomains] after the hostname, all subdomains are applied.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <textarea name="config_access_origin_android" ng-model="settings.config_access_origin_android" rows="4" cols="20" placeholder="*" required></textarea>\n                            <span class="config-warning" ng-show="form.config_access_origin_android.$valid && valueChanged(\'config_access_origin_android\')">\n                                <span translate>iOS Allowed URL will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.config_access_origin_android.$error" ng-show="isInitialized">\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                            <div>\n                                <ul>\n                                    <li><label translate>You need to rebuild the app to apply the change.</label></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div ng-if="!isRPGUser">\n                        <label translate>Keep Running:</label>\n                        <div>\n                            <input type="checkbox" id="config_keeprunning" ng-model="settings.config_keeprunning">\n                            <label for="config_keeprunning" translate>Enable</label>\n                        </div>\n                    </div>\n                    <div ng-if="!isRPGUser">\n                        <label translate>Disallow Overscroll:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Disable bouncing in WebView.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="checkbox" id="config_disallow_overscroll_android" ng-model="settings.config_disallow_overscroll_android">\n                            <label for="config_disallow_overscroll_android" translate>Enable</label>\n                            <span class="config-warning" ng-show="valueChanged(\'config_disallow_overscroll_android\')">\n                                <span translate>iOS Overscroll configuration will also be changed.</span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Screen Orientation:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Set screen orientation.</i></span></label>\n                        <div>\n                            <div>\n                                <input type="radio" id="config_orientation_android_default" ng-model="settings.config_orientation_android" value="default">\n                                <label for="config_orientation_android_default">Default</label>\n                            </div>\n                            <div>\n                                <input type="radio" id="config_orientation_android_landscape" ng-model="settings.config_orientation_android" value="landscape">\n                                <label for="config_orientation_android_landscape">Landscape</label>\n                            </div>\n                            <div>\n                                <input type="radio" id="config_orientation_android_portrait" ng-model="settings.config_orientation_android" value="portrait">\n                                <label for="config_orientation_android_portrait">Portrait</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="webViewEngine-contents" ng-if="!isRPGUser && cordovaVersion < 7">\n                        <label class="lh-clear" translate>WebView Engine:</label>\n                        <div>\n                            <label ng-show="!isHighPerformanceWebView" translate>Stock WebView (default)</label>\n                            <label ng-show="isHighPerformanceWebView" translate>High Performance (Crosswalk)</label>\n                            <div>\n                                <span translate>*To use a high-performance version,</span><br><br>\n                                <span translate>[Cordova version &gt;= 5]</span><br>\n                                <span translate>Enable the crosswalk plugin in Cordova plugins page.</span>\n                                <br>\n                                <br>\n                                <span translate>[Cordova version &lt; 5]</span><br><span translate>Open <code>config.xml</code> and add following tag.</span>\n                                <ul>\n                                    <li>\n                                        <span translate>Device WebView (default)</span>\n                                        <pre>&lt;preference name=&quot;monaca:WebViewEngine&quot; value=&quot;default&quot;/&gt;</pre>\n                                    </li>\n                                    <li>\n                                        <span translate>Crosswalk Engine</span>\n                                        <pre>&lt;preference name=&quot;monaca:WebViewEngine&quot; value=&quot;crosswalk&quot;/&gt;\n&lt;preference name=&quot;monaca:CrosswalkArchitecture&quot; value=&quot;arm&quot;/&gt;</pre>\n                                        <span translate>(Select "arm" or "x86" to switch crosswalk architecture.)</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button">Back</a>\n            <button id="button-save" class="m-btn m-btn-blue m-btn-large" ng-click="submit()" disabled="disabled" ng-class="{disable: !isReadyToSave || form.$invalid}" ng-disabled="!isReadyToSave || form.$invalid" translate>Save</button>\n        </div>\n    </div>\n</div>\n'),
a.put("AndroidBuild.html",'<div ng-controller="AndroidBuildController" ng-init="init()">\n    <div class="container">\n        <div class="cell-build-panel">\n            <h1 translate>Build Android App</h1>\n        </div>\n\n        <ul class="category-tabs">\n            <li class="tab-wrapper" ng-class="{\'active\': type === \'development\'}">\n                <a class="tab" href="#development" data-toggle="tab" ng-click="changeTab(\'development\')" translate>Build for Debugging</a>\n            </li>\n            <li class="tab-wrapper" ng-class="{\'active\': type === \'production\'}">\n                <a class="tab" href="#production" data-toggle="tab" ng-click="changeTab(\'production\')" translate>Build for Release</a>\n            </li>\n        </ul>\n\n        <div class="type-tabs">\n\n            <div class="tab-pane" ng-class="{\'active\': type === \'development\'}" id="development">\n                <ul class="nav-icon-tabs">\n                    <li ng-if="!isRPGUser && !isReactNative" ng-class="{\'active\': purpose === \'debugger\'}">\n                        <a class="debugger {{lang}}" href="#development-debugger" data-toggle="tab" alt="{{\'Debugger Build\'|translate}}" ng-click="changeTab(\'development\', \'debugger\')"></a>\n                    </li>\n                    <li ng-if="!isRPGUser && !isReactNative"><div class="vertical-border"></div></li>\n                    <li ng-class="{\'active\': purpose === \'debug\'}">\n                        <a class="debug-android {{lang}}" href="#development-debug" data-toggle="tab" alt="{{\'Debug Build\'|translate}}" ng-click="changeTab(\'development\', \'debug\')"></a>\n                    </li>\n                </ul>\n                <div class="tab-content">\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'debug\'}" id="development-debug">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>An Android app with a dummy signature will be built. <br /> A debug-build application has no signature, so it cannot be registered in Google Play. See <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">here</a> for details.</p>\n                            </div>\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <hr ng-if="isRPGUser" /> <!-- START Show only for RPG User -->\n                            <div ng-if="isRPGUser">\n                                <input type="checkbox" ng-model="flag_monaca_hosting_app.android">\n                                <label>\n                                    <span class="label-large-app" translate>大容量アプリのビルド:</span>\n                                    <span class="m-tooltip-body icon-help">\n                                        <i class="m-tooltip tt-text-leftside">100MB以上の大容量アプリをビルドし、Storeへの登録が可能となります。\n                                            詳細は<a href="https://docs.monaca.io/ja/rpg_tkool/build_large_app/" target="_blank">こちら</a>。\n                                        </i>\n                                    </span>\n                                </label>\n                            </div><!-- END Show only for RPG User -->\n                        </div>\n                    </div>\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'debugger\'}" id="development-debugger">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A debugger including Cordova plugins enabled in the Plugin Management screen can be built.The operation of plugins not included in the store-version debugger, enterprise plugins etc. can be checked. Details <a href="https://docs.monaca.io/en/debugger/manual/installation/debugger_android/" target="_blank">here</a>.</p>\n                            </div>\n                            <div ng-include src="\'build-problems\'"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class="tab-pane" ng-class="{\'active\': type === \'production\'}" id="production">\n                <ul class="nav-icon-tabs">\n                    <li ng-class="{\'active\': purpose === \'release\'}">\n                        <a class="release-android {{lang}}" href="#production-release" data-toggle="tab" alt="{{\'Release Build\'|translate}}"  ng-click="changeTab(\'production\', \'release\')"></a>\n                    </li>\n                    <li ng-class="{\'active\': purpose === \'inappupdater\'}" ng-if="!isRPGUser && !isReactNative">\n                        <a class="inappupdater-releaseBuild {{lang}}" href="#production-inappupdater" data-toggle="tab" alt="{{\'In-App Updater update file\'|translate}}" ng-click="changeTab(\'production\', \'inapp_updater\')"></a>\n                    </li>\n                </ul>\n                <div class="tab-content">\n\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'release\'}" id="production-release">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>Use KeyStore to build Andoid app. Submission to Google Play is also possible. Details <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">here</a>.</p>\n                            </div>\n                            <div ng-include src="\'build-problems\'"></div>\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Setup KeyStore and Alias</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': aliasList && aliasList.length, \'m-btn-blue\': !aliasList || !aliasList.length}" ng-click="setPage(settings.Constant.PAGE_ANDROID_BUILD_SETTINGS, true)" translate>Manage KeyStore and Alias</a></div>\n                                </div>\n                                <div ng-show="aliasList && !aliasList.length" ng-class="{\'m-text\': aliasList.length, \'m-text-alert\': !aliasList.length}">\n                                    <div>\n                                        <p translate>Release build can not continue because the keystore and alias is not created. Please create a keystore and alias from build settings.</p>\n                                    </div>\n                                </div>\n                                <div ng-show="aliasList && aliasList.length">\n                                    <div><span translate>Alias</span></div>\n                                    <div>\n                                        <div class="m-component-combobox block">\n                                            <select ng-model="alias_name" ng-options="item.alias as item.alias for item in aliasList" ng-change="showDummyPassword()"></select>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <input ng-model="alias_password" type="password" name="alias_password" placeholder="password" ng-change="aliasPasswordChanged()" class="block">\n                                        <div class="config-error" ng-show="!alias_password" translate>Alias password is not specified</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <hr ng-if="isRPGUser"/>\n                            <div class="build-setting-item" ng-if="isRPGUser">\n                                <input type="checkbox" ng-model="flag_monaca_hosting_app.android">\n                                <label><span class="label-large-app" translate>大容量アプリのビルド:</span><span\n                                        class="m-tooltip-body icon-help">\n                                        <i class="m-tooltip tt-text-leftside">100MB以上の大容量アプリをビルドし、Storeへの登録が可能となります。\n                                            詳細は<a href="https://docs.monaca.io/ja/rpg_tkool/build_large_app/" target="_blank">こちら</a>。\n                                        </i>\n                                    </span>\n                                </label>\n                            </div>\n                            <div ng-if="isRPGUser" class="build-setting-item" ng-class="{\'disable-remote-package-list\': !flag_monaca_hosting_app.android}" style="max-width: 832px;">\n                                    <div class="" style="margin-top: 12px">\n                                        <table class="build-list-table">\n                                            <label style="margin-bottom: 5px;"><span class="label-large-app" style="font-weight: 600" translate>Monacaで管理している更新ファイル</span></label>\n                                            <thead>\n                                            <tr>\n                                                <th translate>アプリのバージョン</th>\n                                                <th translate>作成日</th>\n                                                <th translate>操作</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            <tr ng-show="!inappupdater_packages" class="empty-list">\n                                                <td colspan="4" translate>更新ファイルはありません</td>\n                                            </tr>\n                                            <tr ng-repeat="package in inappupdater_packages">\n                                                <td>\n                                                    <div>{{package.app_version}}</div>\n                                                </td>\n                                                <td>\n                                                    <div>{{package.created_at}}</div>\n                                                </td>\n                                                <td>\n                                                    <button class="m-btn m-btn-default" ng-disabled="!flag_monaca_hosting_app.android" ng-click="deleteUpdateNumber(package.id)"><span translate="">\n                                                        <span class="ng-scope">削除</span></span>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'inappupdater\'}" id="production-inappupdater">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A zip file will be created containing HTML5 assets used by the app to allow automatic updating without rebuilding or repacking.  <br /> For this build, the InAppUpdater plugin must be included in the Cordova Plugin Settings screen. Please deploy the file to your web server.</p>\n                            </div>\n                            <div ng-include src="\'build-problems\'" ng-show="inAppUpdaterPlugin && inAppUpdaterPlugin.canUsed"></div>\n\n                            <section class="error-container" ng-show="inAppUpdaterPlugin && !inAppUpdaterPlugin.canUsed">\n                                <div class="error-message-container">\n                                    <div class="error-icon"><img ng-src="{{\'/img/0-ico-exclamation.png\'|cdn}}"></div>\n                                    <div class="error-message" translate>To use the In-App Updater update file build, an Corporate Plan upgrade is required. <br /> The Corporate Plan includes not only the automatic In-App Updater, but also extended features for resource encryption and secure storage. Details <a href="https://monaca.io/enterprise.html" target="_blank">here</a>.</div>\n                                </div>\n                                <div class="error-container-button-area">\n                                    <a class="m-btn m-btn-green m-btn-large" ng-href="{{\'https://monaca.io/support/inquiry.html\'|translate}}" target="_blank" translate>Apply to Corporate Plan</a>\n                                </div>\n                            </section>\n\n                            <section class="error-container" ng-show="inAppUpdaterPlugin && inAppUpdaterPlugin.canUsed && !inAppUpdaterPlugin.isInstalled">\n                                <div class="error-message-container">\n                                    <div class="error-icon"><img ng-src="{{\'/img/0-ico-exclamation.png\'|cdn}}"></div>\n                                    <div class="error-message" translate>Please add the InAppUpdater plugin. <br />It can be added in the Cordova Plugin settings screen.</div>\n                                </div>\n                            </section>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <button class="m-btn m-btn-blue m-btn-large" ng-click="build()" ng-disabled="!canBuild || (purpose === \'release\' && !alias_password)" disabled translate>Start Build</button>\n        </div>\n    </div>\n\n    <script type="text/ng-template" id="build-problems">\n        <div class="box-errorarea" ng-show="!canBuild && buildProblems.length">\n            <p translate>You do not have the necessary setting to build.</p>\n            <div class="box-errorCheckPoint">\n                <ul>\n                    <li ng-repeat="item in buildProblems">\n                        <span ng-if="!item.value && item.key == \'has_valid_config_xml\'" translate>An unexpected error has occurred while reading config.xml. Please fix config.xml file.</span>\n                        <span ng-if="!item.value && item.key == \'has_remaining_build_count\'" translate>Number of builds per day has reached the maximum.</span>\n                        <span ng-if="!item.value && item.key == \'has_start_file\'" translate>App launch page is not saved.</span>\n                        <span ng-if="!item.value && item.key == \'has_assets_encrypt_password\'" translate>Encryption plugin password is not set.</span>\n                        <span ng-if="!item.value && item.key == \'has_valid_version_name\'" translate>VersionName format is incorrect.</span>\n                        <span ng-if="!item.value && item.key == \'has_keystore\'" translate>KeyStore is not set.</span>\n                        <span ng-if="!item.value && item.key == \'has_crosswalk_setting\'" translate>Crosswalk Architecture is not set. Please select Architecture in "Crosswalk WebView Engine" Configure in Cordova Plugin page.</span>\n                        <span ng-if="!item.value && item.key == \'has_cordova_permission\'" translate>The project\'s Cordova version is unsupported by your current plan and can not build. Please upgrade your project and try again.</span>\n                        <span ng-if="!item.value && item.key == \'has_plugin_permission\'" translate>The project contains unlicensed plugins.</span>\n                        <span ng-if="!item.value && item.key == \'is_not_business_trial\'" translate>Businessプランのトライアル期間中はリリースビルドが実行できません。</span>\n                        <span ng-if="!item.value && item.key == \'has_inapp_updater_setting\'" translate>In-App Updater settings is not set.</span>\n                        <span ng-if="!item.value && item.key == \'can_release_build\' && purpose === \'release\'" translate>現在のプランではリリースビルドができません。\n                            <a href="#" onclick="window.open(window.config.monacaWebHostSsl+\'/plan/manage\', \'_blank\'); return false;">プラン</a>をご確認ください。</span>\n                    </li>\n                </ul>\n            </div>\n            <p translate></p>\n        </div>\n    </script>\n\n</div>\n'),a.put("AndroidBuildSettings.html",'<div class="container" ng-controller="AndroidBuildSettingsController" ng-init="init()" ng-cloak>\n    <header class="m-header-caret balloon-line">\n        <div class="cell-build-panel add-about margin-btm-clear">\n            <h1 translate>Manage KeyStore and Alias</h1>\n            <div class="add-about-text">\n                <p translate>The project is not configured for Release build. In order to register your App to Google Play, please setup it according to <a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/" target="_blank">the document</a>.<br />KeyStore and Alias are used to code-sign applications for release build. KeyStore can contain multiple Alias, but only one Alias is used for code-sign an application.<br />The configuration is saved by user basis.<a href="https://docs.monaca.io/en/monaca_ide/manual/build/build_android/#step-2-configure-android-keystore" target="_blank"><span class="m-tooltip-body btn-help"></span></a></p>\n            </div>\n            <fieldset>\n                <div class="config-list-box config-list-box-top border-top">\n                    <table class="list-row"><caption translate>Generate New KeyStore:</caption><tbody><tr>\n                        <th><label translate>Create KeyStore and Alias</label></th>\n                        <td translate>Create New KeyStore and Alias</td>\n                        <td translate>\n                            <em><button class="m-btn m-btn-default" ng-click="clickGenerateKeyStore()"><span translate>Clear and Generate New</span></button></em>\n                        </td>\n                    <tr></tr>\n                        <th><label translate>Add Alias</label></th>\n                        <td translate>Add New Alias</td>\n                        <td>\n                            <em><button class="m-btn m-btn-default" ng-click="clickAddAlias()" ng-disabled="!hasKeyStore"><span translate>Add Alias</span></button></em>\n                        </td>\n                    <tr></tr>\n                        <th><label translate>KeyStore<br />Import and Export</label></th>\n                        <td translate>A keystore created elsewhere will be imported, and an alias added. <br /> Also, it can be exported to the local PC as a backup.</td>\n                        <td>\n                            <em><button class="m-btn m-btn-default" ng-click="clickImport()"><span translate>Import</span></button></em>\n                            <em><button class="m-btn m-btn-default" ng-click="clickExport()" ng-disabled="!hasKeyStore"><span translate>Export</span></button></em>\n                        </td>\n                    </tr></tbody></table>\n                </div>\n            </fieldset>\n        </div>\n    </header>\n    <div class="cell-build-panel">\n        <div class="config-list-box config-list-box-top">\n            <table id="alias-table" class="build-list-table">\n                <caption translate>List of Alias in KeyStore:</caption>\n                <thead>\n                    <tr>\n                        <th translate>Alias</th>\n                        <th translate>Password</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="item in aliasList">\n                        <td>\n                            <div>{{item.alias}}</div>\n                        </td>\n                        <td>\n                            <div>*</div>\n                        </td>\n                        <td>\n                            <button ng-click="clickDeleteAlias(item.alias)" class="m-icon-btn"><span class="btn-deleted" aria-hidden="true"></span></button>\n                            </td>\n                    </tr>\n                    <tr ng-hide="aliasList.length">\n                        <td colspan="3">&nbsp;</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class="build-start-button-area" ng-show="hasPrevPage()">\n    <div class="build-start-button">\n        <div>\n            <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button" translate>Back</a>\n        </div>\n    </div>\n</div>\n'),a.put("BuildHistory.html",'<div ng-controller="BuildHistoryController as build" class="m-page-settings build-history container">\n  <header class="m-header-caret cell-build-panel">\n    <h1 translate>Build History</h1>\n  </header>\n\n  <section class="cell-build-panel">\n    <dl class="catselect">\n      <dt translate>Category: </dt>\n      <dd ng-click="build.platform = \'\'" ng-class="{on: (build.platform === \'\')}" translate translate-context="category">All Platforms</dd>\n      <dd ng-click="build.platform = \'ios\'" ng-class="{on: (build.platform === \'ios\')}">iOS</dd>\n      <dd ng-click="build.platform = \'android\'" ng-class="{on: (build.platform === \'android\')}">Android</dd>\n      <dd ng-hide="isRPGUser" ng-click="build.platform = \'winrt\'" ng-class="{on: (build.platform === \'winrt\')}">Windows</dd>\n    </dl>\n\n    <ul class="services">\n      <li ng-repeat="history in build.historyCollection | filter:{platform: build.platform}" class="platform-{{history.platform}} status-{{history.status}}">\n\n        <!-- Android Labels -->\n        <h2 class="name" ng-if="history.type === \'debugger\' && history.platform === \'android\'" translate>Android Debugger Build</h2>\n        <h2 class="name" ng-if="history.type === \'debug\' && history.platform === \'android\'" translate>Android Debug Build</h2>\n        <h2 class="name" ng-if="history.type === \'adhoc\' && history.platform === \'android\'" translate>Android AdHoc Build</h2>\n        <h2 class="name" ng-if="history.type === \'release\' && history.platform === \'android\'" translate>Android Release Build</h2>\n        <h2 class="name" ng-hide="isRPGUser" ng-if="history.type === \'inapp_updater\' && history.platform === \'android\'" translate>Android InAppUpdater Build</h2>\n\n        <!-- iOS Labels -->\n        <h2 class="name" ng-if="history.type === \'debugger\' && history.platform === \'ios\'" translate>iOS Debugger Build</h2>\n        <h2 class="name" ng-if="history.type === \'simulator\' && history.platform === \'ios\'" translate>iOS Simulator Build</h2>\n        <h2 class="name" ng-if="history.type === \'debug\' && history.platform === \'ios\'" translate>iOS Debug Build</h2>\n        <h2 class="name" ng-if="history.type === \'adhoc\' && history.platform === \'ios\'" translate>iOS AdHoc Build</h2>\n        <h2 class="name" ng-if="history.type === \'release\' && history.platform === \'ios\'" translate>iOS Release Build</h2>\n        <h2 class="name" ng-hide="isRPGUser" ng-if="history.type === \'inapp_updater\' && history.platform === \'ios\'" translate>iOS InAppUpdater Build</h2>\n\n        <!-- Windows Labels -->\n        <h2 class="name" ng-hide="isRPGUser" ng-if="history.platform === \'winrt\'" translate>Windows Build</h2>\n\n        <p class="version" ng-show="history.version.project">\n          <i translate translate-context="version">Project</i> v{{history.version.project}}<span ng-show="history.type === \'debugger\'"> / <i translate translate-context="version">Debugger</i> v{{history.version.debugger}}</span></p>\n        <p class="version unknown" ng-show="!history.version.project" translate>Unknown Version</p>\n        <p class="ellapsed" ng-show="build.isBuildFinished(history.status)">{{history.ellapsed}}</p>\n        <p class="createdat" ng-show="build.isBuildFinished(history.status)">{{history.created_at}}</p>\n        <p class="downloadexpire" ng-class="{\'has-expired\':!history.is_download_active}" ng-show="(history.status === \'finish\' || history.status === \'ios-publish-success\' || history.status === \'ios-publish-fail\') && history.download_expire_text">{{history.download_expire_text}}</p>\n        <p class="waiting" ng-show="history.status === \'new\'" translate>Preparing...</p>\n        <p class="building" ng-show="history.status === \'process\'" translate>Building...</p>\n        \n        <button ng-show="build.isBuildFinished(history.status)" ng-click="build.onClickDelete(history.id)" class="m-btn m-btn-alert btn-detail" translate>Delete</button>\n\n        <button ng-show="history.is_download_active && (history.status === \'finish\' || history.status === \'ios-publish-success\' || history.status === \'ios-publish-fail\')" type="button" class="m-btn btn-detail"\n                ng-click="build.showDetails(history)" ng-disabled="!build.isBuildFinished(history.status)">Download</button>\n        \n        <button ng-show="history.status === \'fail\'" type="button" class="m-btn btn-detail" ng-click="build.showDetails(history)" ng-disabled="!build.isBuildFinished(history.status)" translate>See Details</button>\n      </li>\n    </ul>\n    <div class="" ng-show="build.maxnum[\'all\'] === 0 || build.maxnum[build.platform] === 0" translate>No build history is found. Please start a new build.</div>\n    <button type="button" class="m-btn btn-readmore" ng-show="build.hasMore()" ng-click="build.fetchMoreHistory()" translate>See More</button>\n  </section>\n</div>\n'),a.put("BuildResult.html",'<div class="container buildResultSuccess-container" ng-controller="BuildResultController" ng-init="init()" ng-style="!settings.hideSidebar && {\'position\': \'relative\'}">\n    <header class="m-header-caret balloon-line">\n        <div class="buildResultSuccess-panel">\n            <div class="cell-build-panel margin-btm-clear">\n                <h1 translate>Build</h1>\n                <ul class="services">\n                    <li class="status-{{queue.status}}">\n                        <h2 class="name">{{queue.label}}</h2>\n                        <p class="version" ng-show="queue.version.project">\n                            <i translate translate-context="version">Project</i> v{{queue.version.project}}\n                            <span ng-show="queue.type === \'debugger\'"> / <i translate translate-context="version">Debugger</i> v{{queue.version.debugger}}</span>\n                        </p>\n                        <p class="version unknown" ng-show="!queue.version.project" translate>Unknown Version</p>\n                        <p class="ellapsed" ng-show="queue.finished_at">{{queue.ellapsed}}</p>\n                        <p class="createdat" ng-show="queue.finished_at">{{queue.finishedAtLabel}}</p>\n                        <p class="waiting" ng-show="queue.status === \'new\'" translate>Waiting... (Behind {{queue.queue_count}} queues)</p>\n                        <p class="building" ng-show="queue.status === \'process\'" translate>Building...</p>\n                    </li>\n                </ul>\n\n            </div>\n        </div>\n    </header>\n    <div class="buildResultSuccess-panel">\n        <div class="cell-build-panel">\n\n            <div class="buildResult-panel" ng-show="queue.status && queue.status !== \'new\' && queue.status !== \'process\'">\n                <div class="congratulations-panel" ng-show="queue.status === \'finish\'">\n                    <legend class="border-none">\n                        <div><h2 class="build-success-title" translate>Congratulations!</h2></div>\n                    </legend>\n                    <div class="config-section-panel">\n                        <p class="build-success-text" ng-show="queue.type !== \'inapp_updater\'" translate>Your build is successfully finished. Please download and install the app on the device. Please click <a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">here</a> to see the build log. </p>\n                        <p class="build-success-text" ng-show="queue.type === \'inapp_updater\'" translate>The package is zipped and ready for distribution. For more details, please refer to the <a href="https://docs.monaca.io/en/reference/power_plugins/in-app_updater/" target="_blank">docs</a>.<br> Please deploy the file to the Web server. Build log can be obtained from <a href="#" ng-click="showBuildLogTextArea = !showBuildLogTextArea">here</a>.</p>\n                        <p class="build-success-text" ng-show="queue.type !== \'inapp_updater\'" style="color: #a42d2d;" translate>A successful build does not guarantee that your application will pass the regulation tests for uploading on an app store.</p>\n                        <!--div class="buildResultSuccess-buildlogarea" ng-show="showBuildLogTextArea || (queue && queue.status !== \'finish\')">\n                            <span class="config-warning" ng-show="cordovaVersion < 6 && queue.status === \'process\'">\n                                <span translate>Cordova5 projects and below will not display a realtime log.</span>\n                            </span>\n                            <textarea show-tail readonly>{{buildLog}}</textarea>\n                        </div-->\n\n                        <div>\n                            <ul class="m-selectBoxs downloads">\n                                <li class="service-download" ng-show="buildResult.binary_url">\n                                    <a href="{{buildResult.binary_url}}">\n                                        <div>\n                                            <figure>\n                                                <img src="/img/build/btn_pc.png" alt="{{\'Download to Local PC\'|translate}}" width="220" height="126">\n                                            </figure>\n                                            <h3><i translate>Download to Local PC</i></h3>\n                                        </div>\n                                    </a>\n                                </li>\n                                <li class="service-qrcode" ng-show="qrCodeUrl">\n                                    <a ng-click="openQRCodeDialog()" href="#">\n                                        <div>\n                                            <figure>\n                                                <img ng-src="{{qrCodeUrl}}" alt="QR Code" width="120" height="120px">\n                                            </figure>\n                                            <h3><i translate>Install via<br />QR code</i></h3>\n                                        </div>\n                                    </a>\n                                </li>\n                                <li class="service-notification" ng-show="showSendAppIcon">\n                                    <a ng-click="openSendAppDialog()" href="#">\n                                        <div>\n                                            <figure>\n                                                <img src="/img/build/btn_mail.png" alt="{{\'Send install information to registered email address\'|translate}}" width="220" height="126">\n                                            </figure>\n                                            <h3><i translate>Notify registered e-mail address of installation method.</i></h3>\n                                        </div>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        <p class="build-success-text">\n                        <label translate>Do you want to set this build as publicly downloadable?:</label>\n                          <input type="checkbox" ng-model="is_public" ng-change="setIsPubliclyDownloadable()">\n                        </p>\n                    </div>\n\n                    <legend ng-show="showIosAppUploader || showDeployService || showSecurityService">\n                        <div><h2 translate>Deployment &amp; Optional Services</h2></div>\n                    </legend>\n                    <div class="config-section-panel buildResultSuccess-panel" ng-show="showIosAppUploader || showDeployService || showSecurityService">\n                        <p translate>External service API tokens can be saved, according to the deployment method used (Monaca-provided upload to iTunes Connect or deploy service settings). These deployment services can be accessed from various Monaca functions.</p>\n\n                        <div>\n                            <ul class="m-selectBoxs deployServices">\n\n                                <li ng-show="showIosAppUploader" class="status-loading service-appStore">\n                                    <a href="#" ng-click="openUploaderWindow()">\n                                        <div class="selectBox-loading unLoading">\n                                            <img ng-src="{{\'/img/size32/icon_loading_black.gif\'|cdn}}">\n                                        </div>\n                                        <div>\n                                            <div class="status-result"></div>\n                                            <figure>\n                                                <img src="/img/build/icon_appstore.png">\n                                            </figure>\n                                            <h3>\n                                                <i>AppStore</i>\n                                                <small></small>\n                                            </h3>\n                                        </div>\n                                    </a>\n                                </li>\n\n                                <li ng-repeat="service in DeployServiceFactory.ownedCollection | filter: deployServiceCustomFilter" ng-class="{\'status-process\': service.manualProcessStatus === \'process\',\'status-finish\': service.manualProcessStatus === \'finish\',\'status-fail\': service.manualProcessStatus === \'failed\'}" ng-click="sendToDeployService(service)">\n                                    <div class="selectBox-loading" ng-show="service.manualProcessStatus === \'process\'">\n                                        <img ng-src="{{\'/img/size32/icon_loading_black.gif\' | cdn}}">\n                                    </div>\n                                    <div>\n                                        <div class="status-result">\n                                          <!-- <small ng-show="service.manualProcessStatus === \'finish\'"><a href="#" translate>Details</a></small> -->\n                                          <small ng-show="service.manualProcessStatus === \'failed\'"><a href="#" ng-click="openDeployLogs($event, service)" translate>View Details</a></small>\n                                        </div>\n                                        <figure>\n                                            <img ng-src="{{convertServiceLargeImgToSmall(service.app_logo)}}">\n                                        </figure>\n                                        <h3>\n                                            <!--i>{{service.service_type}}</i-->\n                                            <small>\n                                                <div>\n                                                    <span class="m-label m-label-gray" translate>ALIAS</span> {{service.alias}}\n                                                </div>\n                                            </small>\n                                        </h3>\n                                    </div>\n                                </li>\n                                    <li class="status-loading service-appStore" ng-show="showSecurityService" ng-click="sendToApkCheckerService()">\n                                  <a href="#">\n                                      <div class="selectBox-loading unLoading">\n                                          <img ng-src="{{\'/img/size32/icon_loading_black.gif\'|cdn}}">\n                                      </div>\n                                      <div>\n                                          <div class="status-result"></div>\n                                          <figure>\n                                              <img src="/img/build/icon_security.png" style="margin:-40px 0 0 16px;">\n                                          </figure>\n                                          <h3>\n                                              <i translate>Use Secure Coding Checker</i>\n                                              <small></small>\n                                          </h3>\n                                      </div>\n                                  </a>\n                              </li>\n                            </ul>\n                        </div>\n\n                        <!-- <div ng-show="DeployServiceFactory.ownedCollection.length > 0" class="no-deployServices-body">\n                            <button class="m-btn m-btn-green m-btn-large" translate>Add Deploy Service</button>\n                        </div> -->\n                    </div>\n                </div>\n\n                <div class="box-errorarea" ng-show="queue && queue.status != \'finish\' && buildResult.error_message">\n                    <p translate>App build is failed. Your app cannot be built. Please make sure following settings are properly setup:</p>\n                    <div class="box-errorCheckPoint">\n                        <ul>\n                            <li>- {{buildResult.error_message}}</li>\n                        </ul>\n                    </div>\n                    <p translate>After correcting errors, please build again.</p>\n                </div>\n            </div>\n\n            <div class="buildResultSuccess-buildlogarea" ng-show="showBuildLogTextArea || (queue && queue.status !== \'finish\')">\n                <h2 translate>Build Log</h2>\n                <span class="config-warning">\n                  <span ng-show="!isReactNative && cordovaVersion < 6 && queue.status === \'process\'" translate>Cordova5 projects and below will not display a realtime log.</span>\n                  <span ng-show="isReactNative" translate>React Native realtime build log may be temporary unavailable.</span>\n                </span>\n                <!--span class="config-warning" ng-show="queue.platform === \'winrt\' && queue.status === \'process\'">\n                  <span translate>Windows projects will not display a realtime log.</span>\n                </span-->\n                <textarea show-tail readonly>{{buildLog}}</textarea>\n            </div>\n\n        </div>\n    </div>\n</div>\n'),
a.put("ContinuousIntegration.html",'<div ng-controller="ContinuousIntegrationController" class="m-page-settings backend-service">\n  <header  class="m-header-caret balloon-line">\n    <h1 translate>Continuous Integration</h1>\n\n    <div ng-show="!loading && !error">\n      <div ng-show="ci_tickets.usable === 0" class="ci-depleted-notice">\n        <p class="m-text-alert">\n          <span class="ico-exclamation"><img src="/img/services/0-ico-exclamation.png"/></span>\n          <span translate>The number of available continuous integration tickets has been depleted.  To continue this service, please purchase additional CI tickets.</span>\n        </p>\n        <!--\n        <button ng-click="planDetails()" class="m-btn m-btn-default" translate>View Plan Details</button>\n        <button ng-click="upgradePlan()" class="m-btn m-btn-blue" translate>Upgrade</button>\n        -->\n      </div>\n\n      <div class="m-container half display-grid">\n        <div class="title">\n          <div translate>{{project_vcs.service_type}} Account</div>\n        </div>\n        <div ng-show="hasVcsConfiguration">\n          <div>{{project_vcs.username}}</div>\n          <div>{{project_vcs.email}}</div>\n        </div>\n      </div>\n      <div class="m-container half display-grid">\n        <div class="title">\n          <div translate>Available Tickets</div>\n          <div>\n            <button ng-click="planDetails()" class="m-btn m-btn-default-dark" translate>Plan Details</button>\n          </div>\n        </div>\n        <div ng-class="{\'m-text-alert\': ci_tickets.usable === 0}">\n          <div>\n            <div class="m-container-table">\n              <div translate>CI Tickets: </div>\n              <div translate>{{ci_tickets.usable}}/{{ci_tickets.total}} (Complimentary : {{ci_tickets.total_complimentary}})</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <main>\n    <section ng-show="!loading && !error && hasVcsConfiguration" class="bottom-border ci-deploy-services-list">\n      <div ng-show="!DeployServiceFactory.ownedCollection.length" class="m-text-center">\n        <div translate>Please proceed to JSON Settings if you don\'t want to automate deployment. <br>Use <a href="http://monaca.io/ci.html" target="_blank">Monaca CI</a> if you want to automatically distribute your app to deployment services including App Store and Hockey App.</div>\n        <div class="ci-configure-deployservice-btn-container">\n          <button ng-click="loadDeployServices()" class="m-btn m-btn-green m-btn-large" translate>Configure Deploy Service</button>\n        </div>\n      </div>\n\n      <div class="m-container display-grid">\n        <div class="title">\n          <div translate>Configured Deploy Services</div>\n          <div>\n            <button ng-click="loadDeployServices()" class="m-btn m-btn-default-dark" translate>Configure</button>\n          </div>\n        </div>\n        <div ng-show="!DeployServiceFactory.ownedCollection.length" class="m-text-alert">\n          <div translate>There are no available deploy services. Go to the <a ng-click="loadDeployServices()">Deploy Service Settings</a> page to configure your services.</div>\n        </div>\n        <div ng-show="DeployServiceFactory.ownedCollection.length" ng-repeat="service in DeployServiceFactory.ownedCollection">\n          <div class="text-left deploy-service-left">{{service.service_type}}</div>\n          <div class="text-left deploy-service-middle">{{service.alias}}</div>\n          <div class="text-left deploy-service-right">{{service.token}}</div>\n        </div>\n      </div>\n    </section>\n    <section class="ci-config-json" ng-show="!loading && !error && hasVcsConfiguration" class="bottom-border">\n      <h2 translate>JSON Settings</h2>\n      <div class="ci-config-json-info" translate>CI server will automate its job by reading recipe script. Please refer to <a href="https://docs.monaca.io/en/manual/monaca_ci/overview/#json-settings-configuration" target="_blank">JSON Settings Configuration</a> for the details.</div>\n\n      <textarea ng-model="config"></textarea>\n\n      <div class="ci-config-json-controls">\n        <div>\n          <div translate>Continuous Integration: </div>\n          <div>\n            <img ng-src="{{ci_status_image}}" /> {{ci_status_text}}\n          </div>\n        </div>\n        <div>\n          <button class="m-btn m-btn-default" ng-click="toggleStatus()">{{ci_status_text_ng}}</button><br />\n          <button class="m-btn m-btn-blue ci-config-json-save" ng-click="save()" translate>Save</button>\n        </div>\n      </div>\n    </section>\n\n    <section ng-show="!loading && !error && hasVcsConfiguration" class="ci-start-continuous-integration">\n      <h2 translate>To Start Continuous Integration</h2>\n      <span translate>To start CI, please push the code to its repository server.</span>\n    </section>\n\n    <!--Error Containers-->\n    <section ng-show="!loading && error === \'unsupportedCordovaVersion\'" class="error-container">\n      <div class="error-message-container">\n        <div class="error-icon"><img src="/img/services/0-ico-exclamation.png" /></div>\n        <div class="error-message" translate>This project does not meet the minimum Cordova version requirement to use this feature.<br>To use this feature, please upgrade your project\'s Cordova version in the <a href="#" ng-click="setPage(settings.Constant.PAGE_CORDOVA_PLUGINS)">Cordova Plugins page</a>.</div>\n      </div>\n    </section>\n    <section ng-show="!loading && error === \'missingAccountGitHub\'" class="error-container">\n      <div class="error-message-container">\n        <div class="error-icon"><img src="/img/services/0-ico-exclamation.png" /></div>\n        <div class="error-message" translate>The Continuous Integration service is currently not available with your existing account settings.<br>To use this service, please link your Monaca account with a {{project_vcs.service_type}} account.</div>\n        <div translate>You can link your {{project_vcs.service_type}} account at the <a ng-click="configureVcs()">Link {{project_vcs.service_type}} Account</a> account settings page.</div>\n      </div>\n      <button ng-click="configureVcs()" class="m-btn m-btn-green m-btn-large" translate>Link {{project_vcs.service_type}} Account</button>\n    </section>\n    <section ng-show="!loading && error === \'missingProjectGitHub\'" class="error-container">\n      <div class="error-message-container">\n        <div class="error-icon"><img src="/img/services/0-ico-exclamation.png" /></div>\n        <div class="error-message" translate>This project is currently not configured properly to use the Continuous Integration service.<br>To use this service, please link this project with a {{project_vcs.service_type}} repository from the Monaca IDE Version Control Configuration page.</div>\n        <div translate>Please see <a ng-click="openSetupVcsDoc()">Monaca documentation</a> for support on how to configure your project with VCS.</div>\n      </div>\n      <button ng-click="openSetupVcsDoc()" class="m-btn m-btn-green m-btn-large" translate>How to Configure VCS</button>\n    </section>\n  </main>\n</div>\n'),a.put("ContinuousIntegrationJsonErrorDialog.html",'<div class="modal-header">{{title}}</div>\n\n<section class="modal-body">\n\t<div>\n\t\t<div>\n\t\t\t<img src="/img/services/0-ico-exclamation.png" />\n\t\t</div>\n\t\t<div>\n\t\t\t<h2 translate>JSON Validation Error</h2>\n\t\t\t<p ng-bind-html="message"></p>\n\t\t</div>\n\t</div>\n\n\t<div>\n\t\t<div></div>\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t<li translate>Error Resolution:</li>\n\t\t\t\t<li translate>Please see <a ng-click="gotoCiJsonDocs()">Monaca Docs</a> for support on JSON configurations for Continuous Integration.</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</section>\n\n<div class="modal-footer">\n\t<button class="m-btn" type="button" ng-click="gotoCiJsonDocs()" translate>Documentation</button>\n\t<button class="m-btn" type="button" ng-click="this.$close()" translate>Close</button>\n</div>\n'),a.put("CordovaConfigAssetsEncryptPassword.html",'<div class="modal-header" translate>Save HTML5 Resource Encryption Password</div>\n\n<div class="modal-body laoding" ng-show="loading">\n  <spinner s-type="modal" s-loading-text="Loading Resource Encryption Settings..."></spinner>\n</div>\n\n<div class="modal-body" ng-show="!loading">\n  <div class="m-text-alert"  ng-show="passwordExists" translate>Password is already registered.<br />If using In-App-Updater, already distributed apps will become incompatible once the password is changed.</div>\n\n  <div>\n    <label for="cordova_encryption_confirm_new_password" translate>New Password:</label>\n    <input class="m-component-textbox" type="password" id="cordova_encryption_new_password" name="new_password" ng-model="password" />\n  </div>\n\n  <div>\n    <label for="cordova_encryption_confirm_new_password" translate>Confirm New Password:</label>\n    <input class="m-component-textbox" type="password" id="cordova_encryption_confirm_new_password" name="confirm_new_password" ng-model="password_confirm" />\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="!loading">\n  <button class="m-btn m-btn-blue" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("CordovaConfigInAppUpdater.html",'<div class="modal-header" translate>In-App Updater Settings</div>\n\n<div class="modal-body laoding" ng-show="loading">\n  <spinner s-type="modal" s-loading-text="Loading In-App Updater Settings..."></spinner>\n</div>\n\n<div class="modal-body" ng-show="!loading">\n  <div>\n    <label translate>Update Mode:</label>\n    <div class="m-component-combobox">\n      <select ng-model="update_mode" ng-options="mode.value as mode.text for mode in update_modes"></select>\n    </div>\n  </div>\n\n  <div>\n    <label for="cordova_inapupdater_deploy_url" translate>Deploy URL:</label>\n    <input class="m-component-textbox" type="text" id="cordova_inapupdater_deploy_url" name="deploy_url" ng-model="deploy_url" />\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="!loading">\n  <button class="m-btn m-btn-blue" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("CordovaConfigInAppUpdater4.html",'<div class="modal-header" translate>In-App Updater Settings</div>\n\n<div class="modal-body laoding" ng-show="loading">\n  <spinner s-type="modal" s-loading-text="Loading In-App Updater Settings..."></spinner>\n</div>\n\n<div class="modal-body" ng-show="!loading">\n\n  <div>\n    <label for="cordova_inapupdater_checkUpdate_url" translate>CheckUpdate URL:</label>\n    <input class="m-component-textbox" type="text" id="cordova_inapupdater_checkUpdate_url" name="check_update_url" ng-model="check_update_url" />\n  </div>\n\n  <div>\n    <label for="cordova_inapupdater_download_url" translate>Download URL:</label>\n    <input class="m-component-textbox" type="text" id="cordova_inapupdater_download_url" name="download_url" ng-model="download_url" />\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="!loading">\n  <button class="m-btn m-btn-blue" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("CordovaConfigPluginCommon.html",'<div class="modal-header" translate>Settings: {{plugin.name}}</div>\n\n<div class="modal-body laoding" ng-show="loading">\n  <spinner s-type="modal" s-loading-text="Loading Cordova Plugins Settings..."></spinner>\n</div>\n\n<div class="modal-body" ng-show="!loading">\n  <div class="plugin-version" ng-show="pluginVersionChangeVisible">\n    <div translate>Plugin Version:</div>\n    <div class="m-component-combobox">\n      <select ng-model="plugin_selected_version" ng-disabled="pluginVersionChangeDisabled" ng-options="version for version in plugin_version"></select>\n    </div>\n  </div>\n\n  <div class="crosswalk-version" ng-show="crosswalkVisible">\n    <div translate>Crosswalk Version:</div>\n    <div class="m-component-combobox">\n      <select ng-model="crosswalk_selected_version" ng-disabled="crosswalkVersionChangeDisabled" ng-options="version for version in crosswalk_version"></select>\n    </div>\n  </div>\n\n  <div class="crosswalk-arch" ng-show="crosswalkVisible">\n    <div translate>Architecture:</div>\n    <div>\n      <input id="carch_arm" type="radio" ng-model="crosswalk_arch" value="{{crosswalk_archs.arm}}"><label for="carch_arm">ARM</label>\n      <input id="carch_x86" type="radio" ng-model="crosswalk_arch" value="{{crosswalk_archs.x86}}"><label for="carch_x86">x86</label>\n    </div>\n  </div>\n\n  <div class="plugin-install-params">\n    <div><span translate>Install Parameters (one per line):<span title="Each line corresponds to each --variable parameter of cordova plugin add." class="btn-tooltip"><i class="tooltip-1"></i></span></div>\n    <div>\n      <textarea class="m-component-textbox" rows="4" cols="20" autocomplete="off" aria-invalid="false" placeholder="eg. API_KEY=12345" role="textbox" aria-required="false" aria-multiline="true" ng-model="pluginInstallParams"></textarea>\n    </div>\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="!loading">\n  <button class="m-btn m-btn-blue" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("CordovaConfirmUpgradeDialog.html",'<div class="modal-header" translate>Updating Cordova Version</div>\n\n<div class="modal-body">\n  <p class="m-text-alert"><strong translate>Attention: Please ensure that all unsaved changes have been saved before continuing.</strong></p>\n  <p translate>Update Cordova version will affect your project, which can result to unexpected behavior.\n    And all core Cordova plugins will be updated. Do you want to continue?</p>\n  <p translate>Existing project will be copied and saved as another project.</p>\n  <p ng-if="param.additional_message"><strong>{{param.additional_message}}</strong></p>\n\n  <p class="m-text-alert"><strong translate>The platform requirements will be changed:</strong></p>\n  <ul>\n    <li><strong translate>Supported Operating System Version:</strong><br/>Android {{ param.android_version }}<span translate> or later</span>\n      <br/>iOS {{param.ios_version }}<span translate> or later</span></li>\n    <li><strong translate>Supported Monaca Debugger:</strong><br/>{{ param.debugger_version }}<span translate> or later</span>\n    </li>\n  </ul>\n  <br/>\n  <p ng-show="{{!!param.link}}" translate>For more details about the change, please refer to <a href="{{ param.link }}" target="_blank">our\n    documentation</a>.</p>\n</div>\n\n<div class="modal-footer">\n  <button class="m-btn" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="cancel()" translate>Cancel</button>\n</div>\n'),a.put("CordovaImport.html",'<div class="modal-header" translate>Import Cordova Plugin</div>\n\n<div class="modal-body">\n  <div ng-show="hasZipImportSupport" class="radio">\n    <label>\n      <input type="radio" ng-model="import_method" name="import_method" value="zip">\n      <span translate>Upload Compressed ZIP Package</span>\n    </label>\n  </div>\n  <div ng-show="hasZipImportSupport" ng-class="{disabled: import_method !== \'zip\'}">\n    <label for="cordova-import-package" translate>Package:</label>\n    <input ng-disabled="import_method !== \'zip\'" type="file" id="cordova-import-package" name="cordova-import-package" fileread="import_file" />\n  </div>\n\n  <div class="radio">\n    <label>\n      <input type="radio" ng-model="import_method" name="import_method" value="url">\n      <span translate>Specify URL or Package Name</span>\n    </label>\n  </div>\n  <div ng-class="{disabled: import_method !== \'url\'}">\n    <label for="cordova-import-package-url" translate>Package Name / URL:</label>\n    <input ng-disabled="import_method !== \'url\'" class="m-component-textbox" type="text" id="cordova-import-package-url" name="cordova-import-package-url" ng-model="import_url" />\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="m-btn m-btn-blue" ng-click="ok()" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("CordovaPlugins.html",'<div ng-show="!cordova.isInitialized" class="loading">\n    <spinner s-type="modal" s-loading-text="Loading Cordova Plugins..." s-loading-class="spinner-loading"></spinner>\n</div>\n\n<div class="m-page-settings ide-setting-cordova-plugins">\n\n  <div ng-show="cordova.isInitialized">\n    <header class="m-header-caret balloon-line cordova-plugins-version" ng-show="cordova.canShowCordovaVersion">\n      <h1 translate>Cordova Plugins</h1>\n\n      <div class="sub-header" translate>Cordova Version:</div>\n      <dl class="cli-version-info">\n        <dt style="line-height: 27px;" translate>CLI Version<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>After upgrading Cordova version, you cannot downgrade to the previous version.</i></span></dt>\n        <dd>\n          <span>{{cordova.version.currentLong}}</span> <span ng-show="cordova.version.nextLong" ng-click="cordova.onSelectCordovaVersion()" class="upgrade-link" translate>Upgrade to {{cordova.version.nextLong}}</span>\n        </dd>\n      </dl>\n      <div class="cordova-plugins-version-detail" ng-show="cordova.isVersionDetailVisible">\n        <dl>\n          <dt translate>iOS Platform:</dt>\n          <dd>{{cordova.cordovaPlatformVersion.ios}}</dd>\n        </dl>\n        <dl>\n          <dt translate>Android Platform:</dt>\n          <dd>{{cordova.cordovaPlatformVersion.android}}</dd>\n        </dl>\n      </div>\n      <dl class="cli-version-detail">\n        <dt>\n          <span class="btn-versiondetail" ng-click="cordova.isVersionDetailVisible = !cordova.isVersionDetailVisible">\n            <span ng-show="cordova.isVersionDetailVisible" translate>Hide Details</span>\n            <span ng-show="!cordova.isVersionDetailVisible" translate>Show Details</span>\n            <i ng-class="{\'fa\': true, \'fa-chevron-circle-down\': !cordova.isVersionDetailVisible, \'fa-chevron-circle-up\': cordova.isVersionDetailVisible}"></i>\n          </span>\n        </dt>\n        <dd>\n          <p class="cordova-plugins-version-info" translate>Choose CLI version and plugins for the selected version are shown.</p>\n        </dd>\n      </dl>\n    </div>\n  </header>\n\n  <div class="main" ng-show="cordova.isInitialized">\n    <div class="toolbar">\n      <div>\n        <input type="text" class="m-component-textbox" ng-model="cordova.searchword" placeholder="{{ \'Plugin Search\' | translate }}" />\n      </div>\n      <button type="button" class="m-btn m-btn-blue" ng-click="cordova.onClickBtnImport()" translate>Import Cordova Plugin</button>\n    </div>\n    <section>\n      <h2 translate>Enabled Plugins</h2>\n      <ul class="plugins enabled" ng-show="cordova.installedPluginCount !== 0">\n        <li class="animate-repeat" ng-repeat="plugin in cordova.plugins | filter:{isInstalled: true} | orderBy: \'name\' | pluginsearch: cordova.searchword" data-key="{{plugin.key}}" ng-class="{\'imported\': !plugin.isDefault}">\n          <div class="movedmask" translate>Disable</div>\n          <div class="movedmask-imported" translate>Remove</div>\n          <div ng-include="\'CordovaPluginsCard.html\'"></div>\n        </li>\n      </ul>\n      <div class="plugins-empty" ng-show="cordova.installedPluginCount === 0" translate>No plugins are currently enabled or installed.</div>\n    </section>\n    <section>\n      <h2 translate>Available Plugins</h2>\n      <ul class="plugins available" ng-show="!cordova.isAvailablePluginEmpty()">\n        <li class="animate-repeat" ng-repeat="(key, plugin) in cordova.plugins | filter:{isInstalled: false} | orderBy: \'name\' | pluginsearch: cordova.searchword" data-key="{{plugin.key}}">\n          <div class="movedmask" translate>Enable</div>\n          <div ng-include="\'CordovaPluginsCard.html\'"></div>\n        </li>\n      </ul>\n      <div class="plugins-empty" ng-show="cordova.isAvailablePluginEmpty()" translate>No plugins are available.</div>\n    </section>\n  </div>\n</div>\n'),a.put("CordovaPluginsCard.html",'<!-- <div class="label-imported" translate>Import Cordova Plugin</div> -->\n<section class="plugin-card">\n  <div>\n    <img ng-src="{{plugin.thumbnail}}" alt="">\n  </div>\n\n  <h3><i>{{plugin.name}}</i></h3>\n\n  <span class="plugin-id" ng-hide="plugin.name === plugin.id">{{plugin.id}}</span>\n\n  <footer>\n    <span class="platforms">\n      <i ng-class="{\'ios\': true, \'on\': plugin.platforms.indexOf(\'ios\') >= 0}"></i>\n      <i ng-class="{\'android\': true, \'on\': plugin.platforms.indexOf(\'android\') >= 0}"></i>\n      <i ng-class="{\'winrt\': true, \'on\': plugin.platforms.indexOf(\'windows\') >= 0}"></i>\n    </span>\n\n    <span class="version" ng-show="!!plugin.version">v{{plugin.version}}</span>\n  </footer>\n</section>\n\n<section class="plugin-detail">\n  <header>\n    <h3>{{plugin.name}}</h3>\n    <span ng-hide="plugin.name === plugin.id">{{plugin.id}}</span>\n  </header>\n\n  <main>\n    <div class="plugin-logo">\n      <img ng-src="{{plugin.thumbnail}}" alt="">\n    </div>\n\n    <a href="{{plugin.docs}}" target="_blank" class="plugin-detail-docs" ng-show="!!plugin.docs" translate>Show README</a>\n    \n    <div class="plugin-detail-author" ng-show="plugin.author">by <i>{{plugin.author}}</i></div>\n    \n    <div ng-show="plugin.updatedAt" class="plugin-detail-updatedat" translate>Last Updated: <i>{{plugin.updatedAt}}</i></div>\n    \n    <div ng-show="plugin.version" class="plugin-detail-version" translate>Version <i>{{plugin.version}}</i></div>\n\n    <div class="plugin-detail-description">{{plugin.description}}</div>\n\n    <div class="plugin-detail-canused" ng-show="!plugin.canUsed && plugin.requiredPlanNames == \'Enterprise\'" translate>Only available to Plan for team development.</div>\n    <div class="plugin-detail-canused" ng-show="!plugin.canUsed && !plugin.requiredPlanNames" translate>Your plan not support the imported plugin.</div>\n  </main>\n\n  <footer>\n    <div class="plugin-detail-buttons">\n      <button class="m-btn m-btn-blue" ng-click="cordova.onClickBtnEnable(plugin.key)" ng-show="plugin.canUsed && !plugin.isImported && !plugin.isInstalled" translate>Enable</button>\n      <button class="m-btn m-btn-alert" ng-click="cordova.onClickBtnDisable(plugin.key)" ng-show="!plugin.isImported && plugin.isInstalled && !plugin.isInstallRequired" translate>Disable</button>\n      <button class="m-btn m-btn-alert" ng-click="cordova.onClickBtnRemove(plugin.key)" ng-show="plugin.isImported && plugin.isInstalled && !plugin.isInstallRequired" translate>Delete</button>\n      <button class="m-btn" ng-click="cordova.onClickBtnConfig($event, plugin)" ng-show="plugin.canUsed && plugin.isInstalled && cordova.version.currentShort >= 4" translate>Configure</button>\n    </div>\n  </footer>\n</section>\n'),a.put("DeployService.html",'<div ng-controller="DeployServiceController" class="m-page-settings deploy-service">\n  <header class="m-header-caret balloon-line">\n    <h1 translate>Deploy Services</h1>\n\n    <div ng-show="!loading && !error">\n      <p translate>Adding external deploy services allows you to save API tokens.  <br>These deployment services are accessible by various Monaca tools and services.</p>\n\n      <div class="deploy-service-list-available">\n        <div ng-repeat="(service, data) in DeployServiceFactory.serviceCollection" data-service="{{service}}">\n        <img ng-src="{{data.logo.app_logo_small}}" />\n        </div>\n      </div>\n      <div>\n        <button class="m-btn m-btn-green m-btn-large add-deploy-service" ng-click="addNewDeployService()">&plus; <translate>Add Deploy Service</translate></button>\n      </div>\n    </div>\n  </header>\n\n  <main>\n    <section>\n      <h2 translate>Configured Deploy Services</h2>\n\n      <div class="deploy-service-missing-own" ng-show="!loading && !error && DeployServiceFactory.ownedCollection.length === 0" translate>There is no configured deploy service.</div>\n\n      <div class="deploy-service-has-own" ng-show="!loading && !error && DeployServiceFactory.ownedCollection.length > 0">\n\n        <div ng-repeat="item in DeployServiceFactory.ownedCollection">\n          <div class="deploy-service-table-col1"><img ng-src="{{item.app_logo}}" /></div>\n          <div class="deploy-service-table-col2">\n            <div>{{item.service_type}}</div>\n            <div><a href="{{item.website}}" target="_blank">{{item.website}}</a></div>\n          </div>\n          <div class="deploy-service-table-col3">\n            <div><span translate>Alias:</span>{{item.alias}}</div>\n            <div><span translate>API Key:</span>{{item.token}}</div>\n          </div>\n          <div class="deploy-service-table-col4">\n            <button class="m-btn m-btn-alert" ng-click="deleteDeployService(item.service_type, item.alias);" translate>Delete</button>\n          </div>\n        </div>\n      </div>\n    </section>\n  </main>\n</div>\n'),a.put("DeployServiceAddDialog.html",'<div class="modal-header" translate>Add New Deploy Service</div>\n\n<section class="modal-body">\n\t<div ng-show="error" class="error m-text-alert">{{error}}</div>\n\n\t<div class="select-deploy-service">\n\t\t<div>\n\t\t\t<div class="select-deploy-service-label">\n\t\t\t\t<span translate>Service Provider: </span><span class="m-component-tooltip-icon"><i class="m-component-tooltip" translate>List of supported third-party service providers that can boost app development and deployment.</i></span>\n\t\t\t</div>\n\t\t\t<div class="select-deploy-service-select">\n\t\t\t\t<div class="m-component-combobox">\n\t\t\t\t\t<select ng-options="service as service.name for service in DeployServiceFactory.serviceCollection track by service.id" ng-model="selected_service" ng-change="updateDeployServiceForm()">\n\t\t\t\t\t\t<option value="" translate>Select a Deploy Service</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class="deploy-service-type-form" ng-show="selected_service && formElements.length">\n\t\t<hr>\n\t\t<h2 translate>{{selected_service.name}} Configurations</h2>\n\t\t<form>\n\t\t\t<div>\n\t\t\t\t<div class="deploy-service-type-form-label">\n\t\t\t\t\t<span translate>Config Alias: </span><span class="m-component-tooltip-icon"><i class="m-component-tooltip" translate>Alias is the unique identifier for each configurations.</i></span>\n\t\t\t\t</div>\n\t\t\t\t<div class="deploy-service-type-form-value">\n\t\t\t\t\t<input class="m-component-textbox" type="text" ng-model="alias" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div ng-repeat="(ele, data) in formElements">\n\t\t\t\t<div class="deploy-service-type-form-label">\n\t\t\t\t\t{{data.label}}: <span class="m-component-tooltip-icon"><i class="m-component-tooltip" >{{data.info}}</i></span>\n\t\t\t\t</div>\n\t\t\t\t<div class="deploy-service-type-form-value">\n\t\t\t\t\t<input class="m-component-textbox" ng-model="formData[data.id]" type="{{data.type}}" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</section>\n\n<div class="modal-footer">\n\t<button class="m-btn" type="button" ng-click="this.$close()" translate>Cancel</button>\n\t<button class="m-btn m-btn-blue" type="button" ng-click="addNewDeployService()" ng-disable="!selected_service" translate>Add</button>\n</div>\n'),a.put("IosAppSettings.html",'<div ng-controller="IosAppSettingsController" ng-init="init()" ng-cloak>\n    <div class="container" ng-form="form">\n        <div class="cell-build-panel add-about">\n            <h1 translate>iOS App Configuration</h1>\n            <div class="add-about-text" translate>Please input necessary configurations for building iOS application. This configuration is saved by project basis.<a href="https://docs.monaca.io/en/monaca_ide/manual/build/ios/build_ios/#configure-ios-app" target="_blank"><span class="m-tooltip-body btn-help"></span></a></div>\n\n            <fieldset>\n                <legend>\n                    <h2 ng-cloak translate>Application Information</h2>\n                </legend>\n                <div class="config-section-panel appInfo-body tableCell-all">\n                    <div>\n                        <label>\n                            <span translate>Application Name:</span>\n                            <span class="m-tooltip-body icon-help">\n                                <i class="m-tooltip tt-text-leftside" translate>\n                                    Application\'s display name.<br>Note that this field is common to Android and iOS.<br>\n                                    Submitting your app to store may fail if some symbols are included.\n                                </i>\n                            </span>\n                        </label>\n                        <div>\n                            <input type="text" name="applicationName_ios" ng-model="settings.applicationName_ios" ng-pattern="/^(?!(&|@)).*$/" class="long-text" required>\n                            <span class="config-warning" ng-show="form.applicationName_ios.$valid && valueChanged(\'applicationName_ios\')">\n                                <span translate>Android Application Name will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.applicationName_ios.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Cannot use &rsquo;&amp;&rsquo; and &rsquo;@&rsquo;.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label><span translate>App ID:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>It is recommended you use reverse-domain style (e.g. com.example.appname).<br/>You can use only alphanumeric characters and periods.<br/>At least one period must be used.<br/>Each segment separated by periods should begin with an alphabetic character.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="text" name="applicationID_ios" ng-model="settings.applicationID_ios" class="long-text" required>\n                            <span class="config-warning" ng-show="form.applicationID_ios.$valid && valueChanged(\'applicationID_ios\')">\n                                <span translate>Android Package Name will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.applicationID_ios.$error" ng-show="isInitialized">\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label><span translate>Version Number:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>Enter the Version Number which you specified in iTunes Connect.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="text" name="versionName_ios" ng-model="settings.versionName_ios" ng-pattern="/^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})$/" required>\n                            <span class="config-warning" ng-show="form.versionName_ios.$valid && valueChanged(\'versionName_ios\')">\n                                <span translate>Android/Windows Version will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.versionName_ios.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Specify three numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label><span translate>Bundle Version Number:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>Enter the Bundle Version Number which specifies the build version number of the bundle.</i></span></label>\n                        <div>\n                            <input type="text" name="bundleVersion_ios" ng-model="settings.bundleVersion_ios" ng-disabled="!specifyBundleVersion" ng-pattern="/^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(\\.(\\d{1,2}))?$/" ng-required="specifyBundleVersion">\n                            <div>\n                                <ul>\n                                    <li><input type="checkbox" ng-model="specifyBundleVersion" id="checkbox_specifyBundleVersion"><label for="checkbox_specifyBundleVersion" translate>Specify different version for bundle</label></li>\n                                    <li>\n                                        <span ng-messages="form.bundleVersion_ios.$error" ng-show="isInitialized">\n                                            <span ng-message="pattern" class="config-error" translate>Specify three or four numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.</span>\n                                            <span ng-messages-include="common/errors.html"></span>\n                                        </span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="localizationItems-contents text-top">\n                        <label><span translate>Localizations:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>Specifies the display locale in the native widgets (i.e. "Copy" when selecting a text.)</i></span></label>\n                        <div>\n                            <div ng-repeat="item in localizationItems">\n                                <input type="checkbox" id="localization_{{$index}}" checklist-model="settings.localizations_ios" checklist-value="item.value">\n                                <label for="localization_{{$index}}">{{item.label}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2 translate>Target Device Family</h2>\n                </legend>\n                <div class="config-section-panel targetDeviceFamily-body">\n                    <div>\n                        <div>\n                            <label for="checkbox_targetFamilyiPhone_ios">\n                                <img src="/img/cell/icon/ico-iphone.png">\n                            </label>\n                            <div class="targetDeviceFamily-item">\n                                <input type="checkbox" id="checkbox_targetFamilyiPhone_ios" name="targetFamily" ng-model="settings.targetFamilyiPhone_ios" ng-true-value="1" ng-false-value="0" ng-required="!settings.targetFamilyiPad_ios && !settings.targetFamilyiPhone_ios">\n                                <label for="checkbox_targetFamilyiPhone_ios" translate>iPhone, iPod touch</label>\n                            </div>\n                        </div>\n                        <div>\n                            <label for="checkbox_targetFamilyiPad_ios">\n                                <img src="/img/cell/icon/ico-ipad.png">\n                            </label>\n                            <div class="targetDeviceFamily-item">\n                                <input type="checkbox" id="checkbox_targetFamilyiPad_ios" name="targetFamily" ng-model="settings.targetFamilyiPad_ios" ng-true-value="1" ng-false-value="0" ng-required="!settings.targetFamilyiPad_ios && !settings.targetFamilyiPhone_ios">\n                                <label for="checkbox_targetFamilyiPad_ios" translate>iPad</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="config-error-body">\n                        <ul>\n                            <li>\n                                <span ng-messages="form.targetFamily.$error" ng-show="isInitialized">\n                                    <span ng-message="required" class="config-error" translate>You need to check at least 1 target.</span>\n                                    <span ng-messages-include="common/errors.html"></span>\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2 translate>Icons</h2>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>\n                        PNG format is supported. Large pictures will be auto-scaled to fit right size.\n                    </div>\n                    <div class="updateAllImagesAtOnce-contents">\n                        <div translate>Update all images at once.</div>\n                        <div>\n                            <em><button class="m-btn m-btn-default-dark" type="button" ng-click="openFileDialog(\'icon_all_ios\')"><span translate>Upload</span></button></em>\n                            <input name="icon_all_ios" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                        </div>\n                    </div>\n\n                    <div class="setFile-list-body">\n                        <div class="sfl-ios">\n                            <div class="setFile-list" ng-repeat="(iconType,icon) in iconTypeList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n\n                                <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}" ng-show="!!isLoading.{{iconType}}">\n                                    <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{icon.url}}&amp;{{timestamp()}}" id="image-{{iconType}}">\n                                    </a>\n                                </div>\n\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="icon.name"></span><br>({{icon.w}} x {{icon.h}}) </label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default ng-binding" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                                            <input name="{{iconType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="!(storeIconTypeList | isEmptyObj)">\n                <legend>\n                    <h2 translate>Icons for App Store</h2>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>\n                        PNG format is supported. Large pictures will be auto-scaled to fit right size. Images containing transparent backgrounds can not be set.\n                    </div>\n\n                    <div class="setFile-list-body">\n                        <div class="sfl-ios">\n                            <div class="setFile-list" ng-repeat="(iconType,icon) in storeIconTypeList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n\n                                <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}" ng-show="!!isLoading.{{iconType}}">\n                                    <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{icon.url}}&amp;{{timestamp()}}" id="image-{{iconType}}">\n                                    </a>\n                                </div>\n\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="icon.name"></span><br>({{icon.w}} x {{icon.h}}) </label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default ng-binding" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                                            <input name="{{iconType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="!isRPGUser">\n                <legend>\n                    <h2 translate>Splash Screen</h2>\n                </legend>\n                <div class="config-section-panel splashScreen-body">\n                    <div class="config-info" translate>Please register Splash screen which will be displayed when opening the application.<br>PNG format is supported. Large pictures will be auto-scaled to fit the size.</div>\n                    <div class="updateAllImagesAtOnce-contents iosSplashSelect">\n                        <ul ng-if="canChangeSplashScreenMode">\n                            <li>\n                                <strong translate>Splash screen type</strong>\n                                <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}" ng-show="splashTypeIsChanging">\n                            </li>\n                            <li>\n                                <input type="radio" id="iosSplashTypeLegacy" name="iosSplashType" value="legacy" ng-model="settings.ios_splash_type" ng-change="attemptSplashTypeChange()" ng-disabled="splashTypeIsChanging" />\n                                <label for="iosSplashTypeLegacy" translate>Legacy</label>\n                                <span class="m-tooltip-body icon-help">\n                                    <i class="m-tooltip tt-text-leftside" translate>\n                                        Legacy splash screen configuration requires a separate image for each size of iOS device. Monaca can generate all the correct sizes for you from one image, or you can upload them individually. However, this does not support devices such as iPhone X.\n                                    </i>\n                                </span>\n                            </li>\n                            <li>\n                                <input type="radio" id="iosSplashTypeStoryboard" name="iosSplashType" value="storyboard" ng-model="settings.ios_splash_type" ng-change="attemptSplashTypeChange()" ng-disabled="splashTypeIsChanging" />\n                                <label for="iosSplashTypeStoryboard" translate>Storyboard (Recommended)</label>\n                                <span class="m-tooltip-body icon-help">\n                                    <i class="m-tooltip tt-text-leftside" translate>\n                                        A storyboard splash screen uses one image for all screen sizes and crops it as necessary. You must use a storyboard to create full-screen apps on iPhone X.\n                                    </i>\n                                </span>\n                            </li>\n                        </ul>\n                        <div ng-class="{iosSplashSelectLegacyUpload:canChangeSplashScreenMode}" ng-if="settings.ios_splash_type === \'legacy\'">\n                            <div translate>Update all images at once.</div>\n                            <em><button class="m-btn m-btn-default-dark ng-binding" ng-click="openFileDialog(\'splash_all_ios\')"><span translate>Upload</span></button></em>\n                            <input name="splash_all_ios" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                        </div>\n                    </div>\n\n                    <div class="setFile-list-body">\n                        <div class="sfl-ios">\n                            <div class="setFile-list" ng-repeat="(splashType,splash) in displaySplashImages">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{splashType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{splashType}}">\n                                    <a ng-href="{{splash.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{splash.url}}&amp;{{timestamp()}}" id="image-{{splashType}}">\n                                    </a>\n                                </div>\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="splash.name"></span><br>({{splash.w}} x {{splash.h}})</label>\n                                    <div>\n                                        <div>\n                                            <button class="m-btn m-btn-default ng-binding" type="button" ng-click="openFileDialog(splashType)"><span translate>Change</span></button>\n                                            <input name="{{splashType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tableCell" ng-if="!isRPGUser">\n                        <label><span translate><a href="https://docs.monaca.io/en/sampleapp/tips/splashScreen/#settings-for-ios" target="_blank">Hide by</a></span>:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>You can manually hide the splash screen with JavaScript to increase user experience.</i></span></label>\n                        <div class="m-component-combobox">\n                            <select name="config_auto_hide_splash_screen" ng-model="settings.config_auto_hide_splash_screen">\n                                <option value="false" translate>Hide by JavaScript</option>\n                                <option value="true" translate>Hide Automatically</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="tableCell" ng-if="!isRPGUser">\n                        <label translate>Fade Splash Screen:</label>\n                        <div>\n                            <input type="checkbox" ng-model="settings.config_fade_splash_screen" id="config_fade_splash_screen">\n                            <label for="config_fade_splash_screen" translate>Enable</label>\n                        </div>\n                    </div>\n                    <div class="tableCell" ng-if="!isRPGUser">\n                        <label translate>Show Splash Screen Spinner:</label>\n                        <div>\n                            <input type="checkbox" ng-model="settings.config_show_splash_screen_spinner" id="config_show_splash_screen_spinner">\n                            <label for="config_show_splash_screen_spinner" translate>Enable</label>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="isRPGUser">\n                <legend>\n                    <h2 translate>背景画像</h2>\n                    <div class="tableCell">\n                        <div class="m-component-combobox">\n                            <select name="rpgtkool_background_image_ios" ng-model="settings.selected_rpg_background_image_ios"\n                                    ng-options="image for image in rpg_background_images_ios">\n                                <option value="">なし</option>\n                            </select>\n                        </div>\n                    </div>\n                </legend>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <h2 translate>Misc</h2>\n                </legend>\n                <div class="config-section-panel misc-body tableCell-all" ng-if="!isRPGUser">\n                    <div class="allowedURL-contents text-top">\n                        <label><span translate>Allowed URL:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>One hostname per line. It can also start with protocol (http://). If you specify [subdomains] after the hostname, all subdomains are applied.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <textarea name="config_access_origin_ios" ng-model="settings.config_access_origin_ios" rows="4" cols="20" placeholder="*" required></textarea>\n                            <span class="config-warning" ng-show="form.config_access_origin_ios.$valid && valueChanged(\'config_access_origin_ios\')">\n                                <span translate>Android Allowed URL will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.config_access_origin_ios.$error" ng-show="isInitialized">\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label><span translate>Disallow Overscroll:</span><span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>Disable bouncing in WebView.<br>Note that this field is common to Android and iOS.</i></span></label>\n                        <div>\n                            <input type="checkbox" ng-model="settings.config_disallow_overscroll_ios" id="config_disallow_overscroll_ios" ng-true-value="true" ng-false-value="false">\n                            <label for="config_disallow_overscroll_ios" translate>Enable</label>\n                            <span class="config-warning" ng-show="valueChanged(\'config_disallow_overscroll_ios\')">\n                                <span translate>Android Overscroll configuration will also be changed.</span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Enable Viewport Scale:</label>\n                        <div>\n                            <input type="checkbox" ng-model="settings.config_enable_viewport_scale" id="config_enable_viewport_scale">\n                            <label for="config_enable_viewport_scale" translate>Enable</label>\n                        </div>\n                    </div>\n                    <div class="screenOrientation-contents text-top">\n                        <label class="lh-clear" translate>Screen Orientation:</label>\n                        <div translate>[Cordova version &lt; 5]<br>Open <code>ios/MonacaApp-Info.plist</code> and change values defined in<br><code>UISupportedInterfaceOrientations</code> and <code>UISupportedInterfaceOrientations~ipad</code>.<br><a href="https://docs.monaca.io/en/reference/config/ios_configuration/#uisupportedinterfaceorientations" target="_blank">More details</a><br><br>[Cordova version &gt;= 5]<br>Open <code>config.xml</code> and add following tag.<br><pre>...<br>&nbsp;&nbsp;&lt;platform name="ios"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;preference name="orientation" value="all"/&gt;<br>&nbsp;&nbsp;&lt;/platform&gt;<br>&lt;/widget&gt;</pre>The value of "orientation" is "all", "landscape" or "portrait".</div>\n                    </div>\n                </div>\n                <div class="config-section-panel misc-body tableCell-all" ng-if="isRPGUser">\n                    <div>\n                        <label translate>Screen Orientation:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside">Set screen orientation.</i></span></label>\n                        <div>\n                            <div>\n                                <input type="radio" id="config_orientation_ios_all" ng-model="settings.config_orientation_ios" value="all">\n                                <label for="config_orientation_ios_all">All</label>\n                            </div>\n                            <div>\n                                <input type="radio" id="config_orientation_ios_landscape" ng-model="settings.config_orientation_ios" value="landscape">\n                                <label for="config_orientation_ios_landscape">Landscape</label>\n                            </div>\n                            <div>\n                                <input type="radio" id="config_orientation_ios_portrait" ng-model="settings.config_orientation_ios" value="portrait">\n                                <label for="config_orientation_ios_portrait">Portrait</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <div class="form-error-msg">\n                <span ng-messages="form.targetFamily.$error" ng-show="isInitialized">\n                    <span ng-message="required" class="config-error" translate>You need to check at least 1 iOS target device family.</span>\n                </span>\n            </div>\n            <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button">Back</a>\n            <button id="button-save" class="m-btn m-btn-blue m-btn-large" ng-click="submit()" disabled="disabled" ng-class="{disable: !isReadyToSave || form.$invalid}" ng-disabled="!isReadyToSave || form.$invalid" translate>Save</button>\n        </div>\n    </div>\n</div>\n'),
a.put("IosBuild.html",'<div ng-controller="IosBuildController" ng-init="init()">\n    <div class="container">\n\n        <div class="cell-build-panel">\n            <h1 translate>Build iOS App</h1>\n        </div>\n\n        <ul class="category-tabs">\n            <li class="tab-wrapper" ng-class="{\'active\': type === \'development\'}">\n                <a class="tab" href="#development" data-toggle="tab" ng-click="changeTab(\'development\')" translate>Build for Debugging</a>\n            </li>\n            <li class="tab-wrapper" ng-class="{\'active\': type === \'production\'}">\n                <a class="tab" href="#production" data-toggle="tab" ng-click="changeTab(\'production\')" translate>Build for Release</a>\n            </li>\n        </ul>\n\n        <div class="type-tabs">\n\n            <div class="tab-pane" ng-class="{\'active\': type === \'development\'}" id="development">\n                <ul class="nav-icon-tabs">\n                    <li ng-hide="isRPGUser || isReactNative" ng-class="{\'active\': purpose === \'debugger\'}">\n                        <a class="debugger {{lang}}" href="#development-debugger" data-toggle="tab" alt="{{\'Debugger Build\'|translate}}" ng-click="changeTab(\'development\', \'debugger\')"></a>\n                    </li>\n                    <li ng-hide="isRPGUser || isReactNative"><div class="vertical-border"></div></li>\n                    <li ng-class="{\'active\': purpose === \'debug\'}">\n                        <a class="debug-ios {{lang}}" href="#development-debug" data-toggle="tab" alt="{{\'Debug Build\'|translate}}" ng-click="changeTab(\'development\', \'debug\')"></a>\n                    </li>\n                    <li ng-show="hasSimulatorBuild" ng-class="{\'active\': purpose === \'simulator\'}">\n                        <a class="simulator-ios {{lang}}" href="#development-simulator" data-toggle="tab" alt="{{\'Simulator Build\'|translate}}" ng-click="changeTab(\'development\', \'simulator\')"></a>\n                    </li>\n                </ul>\n                <div class="tab-content">\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'debugger\'}" id="development-debugger">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A debugger for your device can be built.  <br /> A debugger including Cordova plugins enabled in the Plugin Management screen can be built.  The operation of plugins not included in the store-version debugger, enterprise plugins etc. can be checked. <br /> USB debugging, and high-level debugging of Javascript using Monaca CLI or Localkit is possible.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Build Settings</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': profiles && profiles.development.length, \'m-btn-blue\': !profiles || !profiles.development.length}" ng-click="setPage(settings.Constant.PAGE_IOS_BUILD_SETTINGS, true)" translate>Manage build settings</a></div>\n                                </div>\n                                <div class="m-text" ng-show="!profiles">&nbsp;</div>\n                                <div class="m-text" ng-show="profiles && profiles.development.length">\n                                    <div><span translate>Provisioning File</span></div>\n                                    <div class="m-component-combobox mcc-ios">\n                                        <select ng-model="profile.debugger" ng-options="profile.value as profile.label for profile in profiles.development"></select>\n                                    </div>\n                                </div>\n                                <div class="m-text-alert" ng-show="profiles && !profiles.development.length">\n                                    <div>\n                                        <p translate>Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program developer certificate and associated Development Provisioning profile.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'debug\'}" id="development-debug">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A debug build can be created. <br /> A registered Apple Developer Program developer certificate, and a Development Provisioning profile are required.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Build Settings</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': profiles && profiles.development.length, \'m-btn-blue\': !profiles || !profiles.development.length}" ng-click="setPage(settings.Constant.PAGE_IOS_BUILD_SETTINGS, true)" translate>Manage build settings</a></div>\n                                </div>\n                                <div class="m-text" ng-show="!profiles">&nbsp;</div>\n                                <div class="m-text" ng-show="profiles && profiles.development.length">\n                                    <div><span translate>Provisioning File</span></div>\n                                    <div class="m-component-combobox mcc-ios">\n                                        <select ng-model="profile.debug" ng-options="profile.value as profile.label for profile in profiles.development"></select>\n                                    </div>\n                                </div>\n                                <div class="m-text-alert" ng-show="profiles && !profiles.development.length">\n                                    <div>\n                                        <p translate>Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program developer certificate and associated Development Provisioning profile.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tab-pane" ng-show="hasSimulatorBuild" ng-class="{\'active\': purpose === \'simulator\'}" id="development-simulator">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A simulator build can be created.<br />This build will not use an Apple Developer certificate or provisioning profile.</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class="tab-pane" ng-class="{\'active\': type === \'production\'}" id="production">\n                <ul class="nav-icon-tabs">\n                    <li ng-class="{\'active\': purpose === \'release\'}">\n                        <a class="release-ios {{lang}}" href="#production-release" data-toggle="tab" alt="リリースビルド" ng-click="changeTab(\'production\', \'release\')"></a>\n                    </li>\n                    <li ng-if="!isRPGUser" ng-class="{\'active\': purpose === \'adhoc\'}">\n                        <a class="adhoc {{lang}}" href="#production-adhoc" data-toggle="tab" alt="アドホックビルド" ng-click="changeTab(\'production\', \'adhoc\')"></a>\n                    </li>\n                    <li ng-if="!isRPGUser && !isReactNative" ng-class="{\'active\': purpose === \'inhouse\'}">\n                        <a class="inhouse {{lang}}" href="#production-inhouse" data-toggle="tab" alt="InHouseビルド" ng-click="changeTab(\'production\', \'inhouse\')"></a>\n                    </li>\n                    <li ng-if="!isRPGUser && !isReactNative" ng-class="{\'active\': purpose === \'inappupdater\'}">\n                        <a class="inappupdater-releaseBuild {{lang}}" href="#production-inappupdater" data-toggle="tab" alt="{{\'In-App Updater update file\'|translate}}" ng-click="changeTab(\'production\', \'inapp_updater\')"></a>\n                    </li>\n                </ul>\n                <div class="tab-content">\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'release\'}" id="production-release">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>App Store distribution build. <br /> A registered Apple Developer Program distribution certificate, and a Distribution (App Store) Provisioning profile are required.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Build Settings</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': profiles && profiles.release.length, \'m-btn-blue\': !profiles || !profiles.release.length}" ng-click="setPage(settings.Constant.PAGE_IOS_BUILD_SETTINGS, true)" translate>Manage build settings</a></div>\n                                </div>\n                                <div class="m-text" ng-show="!profiles">&nbsp;</div>\n                                <div class="m-text" ng-show="profiles && profiles.release.length">\n                                    <div><span translate>Provisioning File</span></div>\n                                    <div class="m-component-combobox mcc-ios">\n                                        <select ng-model="profile.release" ng-options="profile.value as profile.label for profile in profiles.release"></select>\n                                    </div>\n                                </div>\n                                <div class="m-text-alert" ng-show="profiles && !profiles.release.length">\n                                    <div>\n                                        <p translate>Please generate a private key or import on the build settings screen.</p>\n                                        <p translate>Also, please use the Apple Developer Program and register the target device distribution certificate.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'adhoc\'}" id="production-adhoc">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>Limited distribution build. <br /> A registered Apple Developer Program distribution certificate, and a Distribution (AdHoc) Provisioning profile are required.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Build Settings</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': profiles && profiles.adhoc.length, \'m-btn-blue\': !profiles || !profiles.adhoc.length}" ng-click="setPage(settings.Constant.PAGE_IOS_BUILD_SETTINGS, true)" translate>Manage build settings</a></div>\n                                </div>\n                                <div class="m-text" ng-show="!profiles">&nbsp;</div>\n                                <div class="m-text" ng-show="profiles && profiles.adhoc.length">\n                                    <div><span translate>Provisioning File</span></div>\n                                    <div class="m-component-combobox mcc-ios">\n                                        <select ng-model="profile.adhoc" ng-options="profile.value as profile.label for profile in profiles.adhoc"></select>\n                                    </div>\n                                </div>\n                                <div class="m-text-alert" ng-show="profiles && !profiles.adhoc.length">\n                                    <div>\n                                        <p translate>Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program distribution certificate and Distribution (AdHoc) Provisioning profile.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'inhouse\'}" id="production-inhouse">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>Limited distribution build. <br /> A registered Apple Developer Program distribution certificate, and a Distribution (InHouse) Provisioning profile are required.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'"></div>\n\n                            <div class="m-container two-columns-status-l">\n                                <div class="title">\n                                    <div><span translate>Build Settings</span></div>\n                                    <div><a class="m-btn" ng-class="{\'m-btn-default-dark\': profiles && profiles.inhouse.length, \'m-btn-blue\': !profiles || !profiles.inhouse.length}" ng-click="setPage(settings.Constant.PAGE_IOS_BUILD_SETTINGS, true)" translate>Manage build settings</a></div>\n                                </div>\n                                <div class="m-text" ng-show="!profiles">&nbsp;</div>\n                                <div class="m-text" ng-show="profiles && profiles.inhouse.length">\n                                    <div><span translate>Provisioning File</span></div>\n                                    <div class="m-component-combobox mcc-ios">\n                                        <select ng-model="profile.inhouse" ng-options="profile.value as profile.label for profile in profiles.inhouse"></select>\n                                    </div>\n                                </div>\n                                <div class="m-text-alert" ng-show="profiles && !profiles.inhouse.length">\n                                    <div>\n                                        <p translate>Please generate a secret key or import an existing key in the Build Settings screen. Also please register your Apple Developer Program distribution certificate and Distribution (InHouse) Provisioning profile.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="tab-pane" ng-class="{\'active\': purpose === \'inappupdater\'}" id="production-inappupdater">\n                        <div class="cell-build-panel">\n                            <div class="about-container">\n                                <p translate>A zip file will be created containing HTML5 assets used by the app to allow automatic updating without rebuilding or repacking.  <br /> For this build, the Monaca In-App Updater plugin must be included in the Cordova Plugin Settings screen. Please deploy the file to your web server.</p>\n                            </div>\n\n                            <div ng-include src="\'build-problems\'" ng-show="inAppUpdaterPlugin && inAppUpdaterPlugin.canUsed"></div>\n\n                            <section class="error-container" ng-show="inAppUpdaterPlugin && !inAppUpdaterPlugin.canUsed">\n                                <div class="error-message-container">\n                                    <div class="error-icon"><img ng-src="{{\'/img/0-ico-exclamation.png\'|cdn}}"></div>\n                                    <div class="error-message" translate>To use the In-App Updater update file build, an Corporate Plan upgrade is required. <br /> The Corporate Plan includes not only the automatic In-App Updater, but also extended features for resource encryption and secure storage. Details <a href="https://monaca.io/enterprise.html" target="_blank">here</a>.</div>\n                                </div>\n                                <div class="error-container-button-area">\n                                    <a class="m-btn m-btn-green m-btn-large" ng-href="{{\'https://monaca.io/support/inquiry.html\'|translate}}" target="_blank" translate>Apply to Corporate Plan</a>\n                                </div>\n                            </section>\n\n                            <section class="error-container" ng-show="inAppUpdaterPlugin && inAppUpdaterPlugin.canUsed && !inAppUpdaterPlugin.isInstalled">\n                                <div class="error-message-container">\n                                    <div class="error-icon"><img ng-src="{{\'/img/0-ico-exclamation.png\'|cdn}}"></div>\n                                    <div class="error-message" translate>Please add the InAppUpdater plugin. <br />It can be added in the Cordova Plugin settings screen.</div>\n                                </div>\n                            </section>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <button class="m-btn m-btn-blue m-btn-large" ng-click="build()" ng-disabled="!canBuild" disabled translate>Start Build</button>\n        </div>\n    </div>\n\n    <script type="text/ng-template" id="build-problems">\n        <div class="box-errorarea" ng-show="!canBuild && buildProblems.length">\n            <p translate>You do not have the necessary setting to build.</p>\n            <div class="box-errorCheckPoint">\n                <ul>\n                    <li ng-repeat="item in buildProblems">\n                        <span ng-if="!item.value && item.key == \'has_valid_config_xml\'" translate>An unexpected error has occurred while reading config.xml. Please fix config.xml file.</span>\n                        <span ng-if="!item.value && item.key == \'has_remaining_build_count\'" translate>Number of builds per day has reached the maximum.</span>\n                        <span ng-if="!item.value && item.key == \'has_start_file\'" translate>App launch page is not saved.</span>\n                        <span ng-if="!item.value && item.key == \'has_assets_encrypt_password\'" translate>Encryption plugin password is not set.</span>\n                        <span ng-if="!item.value && item.key == \'has_certificate\'" translate>Certificate is not registered. {{certificate_error}}</span>\n                        <span ng-if="!item.value && item.key == \'has_provisioning\'" translate>Provisioning profile is not registered. {{provisioning_error}}</span>\n                        <span ng-if="!item.value && item.key == \'has_splash_and_icons\'" translate>Icon or splash screen is not set.</span>\n                        <span ng-if="!item.value && item.key == \'has_cordova_permission\'" translate>The project\'s Cordova version is unsupported by your current plan and can not build. Please upgrade your project and try again.</span>\n                        <span ng-if="!item.value && item.key == \'has_plugin_permission\'" translate>The project contains unlicensed plugins.</span>\n                        <span ng-if="!item.value && item.key == \'is_not_business_trial\'" translate>Businessプランのトライアル期間中はリリースビルド・In-Houseビルドが実行できません。</span>\n                        <span ng-if="!item.value && item.key == \'can_build_ios_inhouse\'" translate>In-Houseビルドを利用するにはプランのアップグレードが必要です。</span>\n                        <span ng-if="!item.value && item.key == \'has_inapp_updater_setting\'" translate>In-App Updater settings is not set.</span>\n                        <span ng-if="!item.value && item.key == \'can_release_build\' && purpose === \'release\'" translate>現在のプランではリリースビルドができません。\n                            <a href="#" onclick="window.open(window.config.monacaWebHostSsl+\'/plan/manage\', \'_blank\'); return false;">プラン</a>をご確認ください。</span>\n                    </li>\n                </ul>\n            </div>\n            <p translate></p>\n        </div>\n    </script>\n\n<div>\n'),a.put("IosBuildSettings.html",'<div class="container" ng-controller="IosBuildSettingsController" ng-init="init()" ng-cloak>\n    <header class="m-header-caret balloon-line">\n        <div class="cell-build-panel add-about margin-btm-clear">\n            <h1 translate>iOS Build Configuration</h1>\n            <div class="add-about-text" translate>Please setup necessary configurations for building iOS application. This configuration is saved by user basis.<a href="https://docs.monaca.io/en/manual/build/ios/build_ios/#configure-ios-build-settings" target="_blank"><span class="m-tooltip-body btn-help"></span></a></div>\n\n            <fieldset>\n                <div class="config-list-box config-list-box-top border-top">\n                    <table class="list-row clb-ios">\n                        <caption translate>Private Key and CSR</caption>\n                        <tbody><tr>\n                            <th><label translate>Generate Private Key and CSR</label></th>\n                            <td translate>Generate private key and CSR for issuing new certificate.</td>\n                            <td><em><button class="m-btn m-btn-default" type="button" ng-click="openPrivateKeyGenerateDialog()"><span translate>Generate Key and CSR</span></button></em></td>\n                        </tr></tbody>\n                    </table>\n                </div>\n            </fieldset>\n\n            <fieldset ng-if="hasOldDevCert || hasOldProdCert">\n                <div class="config-list-box export-cert">\n                    <table class="list-row clb-ios">\n                        <caption translate>Export Previous Private Key and Cerificates</caption>\n                        <tbody><tr>\n                            <th><label translate>Export previous certificate</label></th>\n                            <td translate>Export previous private key and certificate.</td>\n                            <td><em><button class="m-btn m-btn-default" type="button" ng-click="openExportPreviousCertificateDialog(\'dev\')" ng-disabled="!hasOldDevCert" disabled><span translate>Export developer cert</span></button></em>\n                                <em><button class="m-btn m-btn-default" type="button" ng-click="openExportPreviousCertificateDialog(\'prod\')" ng-disabled="!hasOldProdCert" disabled><span translate>Export distribution cert</span></button></em></td>\n                        </tr></tbody>\n                    </table>\n                </div>\n            </fieldset>\n                \n            <fieldset>\n                <div class="config-list-box">\n                    <table class="list-row clb-ios">\n                        <caption translate>Register Issued Certificate</caption>\n                        <tbody><tr>\n                            <th><label translate>Certificate and Profiles</label></th>\n                            <td translate>Please upload: 1.&nbsp;Apple Developer Program certificate&nbsp;&nbsp;2.&nbsp;Associated profile&nbsp; in order.</td>\n                            <td><em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(\'certificate\')" ng-disabled="!hasPrivateKeys" disabled><span translate>Upload Certificate</span></button></em>\n                                <input name="certificate" type="file" onchange="this.files.length && angular.element(this).scope().uploadCertificate(this);this.value = \'\';" style="display:none;">\n                                <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(\'provisioning_profile\')" ng-disabled="!crts.length" disabled><span translate>Upload Profile</span></button></em>\n                                <input name="provisioning_profile" type="file" onchange="this.files.length && angular.element(this).scope().uploadProvisioningProfile(this);this.value = \'\';" style="display:none;"></td>\n                        </tr><tr>\n                            <th><label translate>Import Secret Key and Certificate</label></th>\n                            <td translate>Import the Keychain private key and certificate.</td>\n                            <td><em><button class="m-btn m-btn-default" type="button" ng-click="openImportPKCSDialog()"><span translate>Import</span></button></em></td>\n                        </tr></tbody>\n                    </table>\n                </div>\n            </fieldset>\n        </div>\n    </header>\n    <div class="cell-build-panel">\n        <fieldset>\n            <div class="config-list-box config-list-box-top">\n                <table class="build-list-table ios-certificate-list">\n                    <caption translate>Certificates registered in Monaca</caption>\n                    <thead>\n                        <tr>\n                            <th translate>Certificate</th>\n                            <th class="column-profile" translate>Profile</th>\n                            <th class="column-status" translate>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-show="!crts.length && !keys.length" class="empty-list">\n                            <td colspan="3" translate>Certificate is not registered.</td>\n                        </tr>\n                        <tr ng-repeat="crt in crts" ng-show="crts.length">\n                            <td>\n                                <div>\n                                    <div><span class="m-label m-label-{{crt.color}}">{{crt.label}}</span></div>\n                                    <div ng-class="{\'m-text-alert\': crt.expired}">{{crt.cn}}<br />\n                                    <span ng-show="crt.expirationms" translate>expiration date: {{crt.expirationms|date:\'yyyy/M/d\'}}</span>\n                                    </div>\n                                    <div class="btn-right">\n                                        <button class="m-icon-btn" ng-click="openExportCertificateDialog(crt.crt_id)"><span class="btn-export" aria-hidden="true"></span></button>\n                                        <button class="m-icon-btn" ng-click="openDeleteCertificateDialog(crt)"><span class="btn-deleted" aria-hidden="true"></span></button>\n                                    </div>\n                                </div>\n                            </td>\n                            <td>\n                                <div ng-repeat="prov in crt.provs">\n                                    <div><span class="m-label m-label-{{prov.color}}">{{prov.label}}</span></div>\n                                    <div ng-class="{\'m-text-alert\': prov.expired}">{{prov.prov_name}}</div>\n                                    <div class="btn-right">\n                                        <button class="m-icon-btn" ng-click="openExportProvisioningProfileDialog(prov.prov_id)"><span class="btn-export" aria-hidden="true"></span></button>\n                                        <button class="m-icon-btn" ng-click="openDeleteProvisioningProfileDialog(prov)"><span class="btn-deleted" aria-hidden="true"></span></button>\n                                    </div>\n                                </div>\n                            </td>\n                            <td>\n                                <div ng-show="!crt.provs || !crt.provs.length">\n                                    <div class="m-text-alert" translate>Provisioning Profile is not registered.</div>\n                                </div>\n                                <div ng-show="crt.expired">\n                                    <div class="m-text-alert" translate>Certificate has expired.</div>\n                                </div>\n                                <div ng-show="crt.has_expired_prov">\n                                    <div class="m-text-alert" translate>Profile has expired.</div>\n                                </div>\n                            </td>\n                        </tr><tr ng-repeat="key in keys">\n                            <td>\n                                <div>\n                                    <div><span translate>Generated Private Key</span></div>\n                                    <div>&nbsp;&nbsp;<span>(Email: {{key.email}})</span></div>\n                                    <div class="btn-right"><button class="m-icon-btn" ng-click="openDeletePrivateKeyDialog(key)"><span class="btn-deleted" aria-hidden="true"></span></button></div>\n                                </div>\n                            </td>\n                            <td></td>\n                            <td>\n                                <a ng-show="key.has_csr" ng-click="openExportCsrDialog(key.key_id)" translate>Download CSR</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </fieldset>\n    </div>\n</div>\n<div class="build-start-button-area" ng-show="hasPrevPage()">\n    <div class="build-start-button">\n        <div>\n            <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button" translate>Back</a>\n        </div>\n    </div>\n</div>\n'),a.put("ServiceIntegration.html",'<div ng-controller="ServiceIntegrationController as integration" class="m-page-settings service-integration">\n  <div ng-show="integration.loading" class="loading">\n    <spinner s-type="modal" s-loading-text="Loading Service Integration..."></spinner>\n  </div>\n\n  <header class="m-header-caret balloon-line" ng-show="!integration.loading">\n    <h1 class="cell-title" translate>Service Integrations</h1>\n\n    <dl class="catselect">\n      <dt translate>Category：</dt>\n      <dd ng-click="integration.category = \'\'" ng-class="{on: (integration.category === \'\')}" translate>All</dd>\n      <dd ng-click="integration.category = \'backend\'" ng-class="{on: (integration.category === \'backend\')}" translate>Backend</dd>\n      <dd ng-click="integration.category = \'test\'" ng-class="{on: (integration.category === \'test\')}" translate>Testing</dd>\n      <dd ng-click="integration.category = \'ad\'" ng-class="{on: (integration.category === \'ad\')}" translate>Advertisement</dd>\n      <dd ng-click="integration.category = \'analytics\'" ng-class="{on: (integration.category === \'analytics\')}" translate>Analytics</dd>\n      <dd ng-click="integration.category = \'iot\'" ng-class="{on: (integration.category === \'iot\')}" translate>IoT</dd>\n    </dl>\n  </header>\n\n  <div class="main" ng-show="!integration.loading">\n    <ul class="services">\n      <li ng-repeat="service in integration.services | filter:{category: integration.category}" class="cat-{{service.category}}">\n        <img ng-src="{{service.logo}}" class="logo" />\n        <h2 class="name">{{service.name}}</h2>\n        <p class="description">{{service.description}}</p>\n        <span>\n          <button class="m-btn" ng-click="integration.openWebsite(service.service_url);" translate>Website</button>\n          <button class="m-btn" ng-click="integration.showDetails(service)" translate>Details</button>\n        </span>\n      </li>\n    </ul>\n  </div>\n</div>\n'),
a.put("ServiceIntegrationDetailDialog.html",'<div class="modal-header" translate>{{service.name}} Details</div>\n\n<div class="modal-body laoding" ng-show="loading">\n  <spinner s-type="modal" s-loading-text="Loading Service Integration Details..."></spinner>\n</div>\n\n<div class="modal-body" ng-show="!loading">\n  <div class="service-summary">\n    <img ng-src="{{service.logo}}" />\n\n    <div ng-show="service.integration_data.cordova_plugins || service.integration_data.bower_components">\n      <div style="font-size: 110%; font-weight: bold;" translate>Files:</div>\n      <div ng-show="service.integration_data.cordova_plugins && service.integration_data.match_cordova_plugins">\n        <div ng-repeat="cordova_plugin in service.integration_data.match_cordova_plugins">\n          <div class="item-caption"><span translate>Cordova Plugin:</span> <b>{{cordova_plugin.url}}</b></div>\n        </div>\n      </div>\n      <div ng-show="service.integration_data.cordova_plugins && service.integration_data.match_cordova_plugins.length == 0" translate>Not supported for this project.</div>\n      <div ng-repeat="componentInfo in service.integration_data.bower_components">\n        <div class="item-caption"><span translate>JS/CSS Component:</span> <b>{{componentInfo.name}}</b></div>\n      </div>\n    </div>\n  </div>\n\n  <div class="service-description">\n    <h1>{{service.name}}</h1>\n    <p class="cat"><span translate>Category: </span>{{service.category}}</p>\n    <div ng-bind-html="description"></div>\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="!loading">\n  <button class="m-btn m-btn-blue" ng-disabled="!service.installable" ng-click="showSetupConfirmWindow()" ng-show="service.integration_type === \'project\'" translate>Install</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("ServiceIntegrationSetupDialog.html",'<div class="modal-header" translate>Installing {{service.name}}</div>\n\n<!-- Confirm to Install Integreation Service -->\n<div class="modal-body" ng-show="page === \'confirm\'">\n  <img ng-src="{{service.logo}}" alt="" class="logo">\n  <p translate><em>{{service.name}}</em> will be installed to the project. Are you sure to continue?</p>\n</div>\n\n<div class="modal-footer" ng-show="page === \'confirm\'">\n  <button class="m-btn m-btn-blue" ng-click="confirmOk(service)" translate>OK</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n\n\n<!-- Show the Install Progress of the Integration Service  -->\n<div class="modal-body" ng-show="page === \'progress\'">\n  <img ng-src="{{service.logo}}" alt="" class="logo">\n  <p translate>Installing <em>{{service.name}}</em>...</p>\n  <spinner s-type="modal"></spinner>\n  <!-- <progressbar class="progress-striped active" value="progress" type="success"><b>{{progress}}%</b></progressbar> -->\n</div>\n\n<!-- <div class="modal-footer" ng-show="page === \'progress\'">\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div> -->\n\n\n<!-- Show the Install Completion Page for Integration Service -->\n<div class="modal-body" ng-show="page === \'complete\'">\n  <div style="text-align: center; padding-top: 5px;">\n      <img ng-src="/img/services/settings/ico_checked.png"> &nbsp; &nbsp;\n      <img ng-src="{{service.logo}}">\n  </div>\n  <br>\n  <p style="text-align: center;" translate><em>{{service.name}}</em> was successfully installed.</p>\n  <div style="font-size: 0.9em; padding: 0 0 0.5em 1em;" translate>The following files were installed.</div>\n  <table class="installed-items">\n    <tr ng-repeat="pluginName in service.integration_data.match_cordova_plugins">\n      <td>\n        <div class="item-caption">\n          <img src="/img/services/settings/ico-ok.png" width="16" height="16"> <span translate>Cordova Plugin:</span> {{pluginName.url}}\n        </div>\n        <div class="item-detail">\n          <img src="/img/services/settings/ico-right-gray.png" width="16" height="16"> <span translate>This service is installed as a Cordova Plugin.</span> <br />\n          <img src="/img/services/settings/ico-right-gray.png" width="16" height="16"> <span translate>To confirm or remove, go to the Cordova Plugins settings.</span>\n        </div>\n      </td>\n    </tr>\n    <tr ng-repeat="componentInfo in service.integration_data.bower_components">\n      <td>\n        <div class="item-caption">\n          <img src="/img/services/settings/ico-ok.png" width="16" height="16"> <span translate>JS/CSS Components:</span> {{componentInfo.name}}\n        </div>\n        <div class="item-detail">\n          <img src="/img/services/settings/ico-right-gray.png" width="16" height="16"> <span translate>This service is installed as JS/CSS Components.</span> <br />\n          <img src="/img/services/settings/ico-right-gray.png" width="16" height="16"> <span translate>To confirm or remove, go to the JS/CSS Components settings.</span>\n        </div>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<div class="modal-footer" ng-show="page === \'complete\'">\n  <button class="m-btn" ng-click="this.$close()" translate>Close</button>\n</div>\n'),a.put("WebAppSettings.html",'<div class="web-app-settings" ng-controller="WebAppSettingsController" ng-init="init()" ng-cloak>\n  <div class="container" ng-form="form">\n    <div class="cell-build-panel add-about">\n      <div><h1 translate>Web App Configuration</h1></div>\n      <div class="add-about-text" translate>Please input necessary configurations for building PWA application. This configuration is saved by project basis.</div>\n\n      <fieldset>\n        <legend>\n          <div><h2 translate>Application Information</h2></div>\n        </legend>\n        <div class="config-section-panel appInfo-body tableCell-all">\n          <div>\n            <label translate>Name:</label>\n            <div>\n              <input type="text" name="name" ng-model="settings.name" class="long-text" required>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Short Name:</label>\n            <div>\n              <input type="text" name="short_name" ng-model="settings.short_name" class="long-text" required>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Description:</label>\n            <div>\n              <input type="text" name="description" ng-model="settings.description" class="long-text" required>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Language:</label>\n            <div>\n              <input type="text" name="lang" ng-model="settings.lang" class="long-text" required>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Text Direction:</label>\n            <div>\n              <select ng-model="settings.dir" ng-options="dir.value as dir.label for dir in dirCollection"></select>\n            </div>\n          </div>\n\n\n          <div>\n            <label translate>Scope:</label>\n            <div>\n              <input type="text" name="scope" ng-model="settings.scope" class="long-text" required>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Start URL:</label>\n            <div>\n              <input type="text" name="start_url" ng-model="settings.start_url" class="long-text" required>\n            </div>\n          </div>\n      </fieldset>\n\n      <fieldset>\n        <legend>\n          <div><h2 translate>Application Display Preference</h2></div>\n        </legend>\n        <div class="config-section-panel appInfo-body tableCell-all">\n          <div>\n            <label translate>Display:</label>\n            <div>\n              <select ng-model="settings.display" ng-options="display.value as display.label for display in displayCollection"></select>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Orientation:</label>\n            <div>\n              <select ng-model="settings.orientation" ng-options="orientation.value as orientation.label for orientation in orientationCollection"></select>\n            </div>\n          </div>\n\n          <div>\n            <label translate>Background Color:</label>\n            <div>\n              <input type="text" name="background_color" ng-model="settings.background_color" class="long-text">\n            </div>\n          </div>\n\n          <div>\n            <label translate>Theme Color:</label>\n            <div>\n              <input type="text" name="theme_color" ng-model="settings.theme_color" class="long-text" required>\n            </div>\n          </div>\n      </fieldset>\n\n      <fieldset>\n        <legend>\n          <div><h2 translate>App Icon</h2></div>\n        </legend>\n        <div class="config-section-panel icon-body">\n          <div class="config-info" translate>Only PNG format is supported for uploading. Large images will be auto-scaled to fit the corresponding size. Images on the Cloud IDE are scaled down to fit the window but does not affect the actual image proportions.</div>\n          <div class="updateAllImagesAtOnce-contents">\n            <div translate>Update all icons at once.</div>\n            <div>\n              <em><button class="m-btn m-btn-default-dark" type="button"><span translate>Upload</span></button></em>\n              <input name="icon" type="file" style="display:none;">\n            </div>\n          </div>\n          <div>\n            <style type="text/css">\n              .app-icon-list {\n                display: flex;\n                flex-wrap: wrap;\n              }\n\n              .app-icon-list > div {\n                padding: 15px;\n              }\n\n              .web-appicon {\n                height: 144px;\n                width: 144px;\n                padding: 4px;\n                border: 1px solid lightgray;\n                border-radius: 5px;\n                display: flex;\n              }\n\n              .web-appicon:after {\n                position: absolute;\n                padding: 3px 7px;\n                font-size: 12px;\n                font-weight: bold;\n                background-color: #f5f5f5;\n                border: 1px solid #ddd;\n                color: #9da0a4;\n                -webkit-border-radius: 4px 0 4px 0;\n                -moz-border-radius: 4px 0 4px 0;\n                border-radius: 4px 0 4px 0;\n                margin: -5px -5px;\n              }\n\n              .web-appicon > img {\n                max-height: 100%;\n                max-width: 100%;\n                display: block;\n                margin: auto;\n              }\n            </style>\n\n            <div class="app-icon-list">\n              <div ng-repeat="(iconType,icon) in appLogoList">\n                <style type="text/css">\n                  .web-appicon-{{icon.w}}:after {\n                    content: "{{icon.w}} x {{icon.h}}";\n                  }\n                </style>\n                <div class="web-appicon web-appicon-{{icon.w}}">\n                  <img ng-src="{{icon.url}}&amp;{{timestamp()}}" alt="{{iconType}}" id="image-{{iconType}}" />\n                </div>\n                <!-- <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                  <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                </div> -->\n                <!-- <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                  <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                    <img ng-src="{{icon.url}}&amp;{{timestamp()}}" alt="{{iconType}}" id="image-{{iconType}}">\n                  </a>\n                </div>\n                <div class="setFile-config">\n                  <label><span ng-bind-html="icon.label"></span>{{icon.w}} x {{icon.h}}</label>\n                  <div>\n                    <div>\n                      <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                      <input name="{{iconType}}" type="file" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                    </div>\n                  </div>\n                </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <legend>\n          <div><h2 translate>Related Application</h2></div>\n        </legend>\n        <div class="config-section-panel icon-body">\n          <div class="config-info" translate>\n            Collection of native applications that are installable by, or accessible to, the underlying platform — for example a native Android application obtainable through the Google Play Store.\n          </div>\n\n          <div>\n            <label translate>Prefer Related Applications:</label>\n            <div>\n              <input type="checkbox" name="prefer_related_applications" ng-model="settings.prefer_related_applications" class="long-text" required>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n\n  <div class="build-start-button-area">\n    <div class="build-start-button">\n      <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button">Back</a>\n      <button id="button-save" class="m-btn m-btn-blue m-btn-large" ng-click="submit()" disabled="disabled" ng-class="{disable: !isReadyToSave || form.$invalid}" ng-disabled="!isReadyToSave || form.$invalid" translate>Save</button>\n    </div>\n  </div>\n</div>\n'),a.put("WebBuild.html",'<div ng-controller="WebBuildController" ng-init="init()">\n  <div class="container">\n    <div class="cell-build-panel">\n      <h1 translate>Build Web App</h1>\n    </div>\n\n    <div class="cell-build-panel">\n      <div class="about-container">\n        <p translate>Progressive Web App will be built. <br />The built application can be deployed to any hosting services. Please see the documentation for build and deploy information.</p>\n      </div>\n      <div ng-include src="\'build-problems\'"></div>\n      <div class="m-container">\n        <div class="title">\n          <div><span translate>App Settings</span></div>\n          <div><a class="m-btn m-btn-default-dark" ng-click="setPage(settings.Constant.PAGE_WEB_APP_SETTINGS, true)" translate>Manage App Settings</a></div>\n        </div>\n        <div class="m-text">\n          <div><p translate>App icon, name, description, etc. can be set in the Web App Settings screen.</p></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="build-start-button-area">\n    <div class="build-start-button">\n      <button class="m-btn m-btn-blue m-btn-large" ng-click="build()" ng-disabled="!canBuild" disabled translate>Start Build</button>\n    </div>\n  </div>\n\n  <script type="text/ng-template" id="build-problems">\n    <div class="box-errorarea" ng-show="!canBuild && buildProblems.length">\n      <p translate>You do not have the necessary setting to build.</p>\n      <div class="box-errorCheckPoint">\n        <ul>\n          <li ng-repeat="item in buildProblems">\n            <span ng-if="!item.value && item.key === \'has_vcs_configuration\'" translate>The project is not linked to a version control repository.</span>\n            <span ng-if="!item.value && item.key === \'has_pwa_manifest\'" translate>The Progressive Web App Manifest file is missing.</span>\n            <span ng-if="!item.value && item.key === \'has_pwa_icon_set\'" translate>One or more app icons are missing.</span>\n          </li>\n        </ul>\n      </div>\n      <p></p>\n    </div>\n  </script>\n\n  <div>\n'),a.put("WebComponent.html",'<div ng-controller="WebComponentController as web" class="m-page-settings ide-setting-web-components">\n  <div ng-show="web.loading" class="loading">\n    <spinner s-type="modal" s-loading-text="Loading JS/CSS Components..."></spinner>\n  </div>\n\n  <header ng-show="!web.loading" class="m-header-caret" ng-show="!integration.loading">\n    <h1 class="cell-title" translate>JS/CSS Components</h1>\n  </header>\n\n  <div class="main" ng-show="!web.loading">\n    <table>\n      <thead>\n        <tr>\n          <th translate>Components</th>\n          <th><input type="text" class="m-component-textbox long-text" ng-model="web.searchword" placeholder="{{ \'Component Name\' | translate }}" /> <button class="m-btn" ng-click="searchForComponents()" translate>Search</button></th>\n       </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="component in web.WebComponentFactory.collection | orderBy: [\'isInstalled\', \'displayName\']" ng-class="{\'installed\': component.isInstalled}">\n          <td><img src="/img/services/settings/ico_list_component.png" alt="{{component.displayName}} Web Component" /><span class="name">{{component.displayName}}<span> <span ng-show="component.isInstalled" class="version" translate>Version: {{component.version}}</span> <span ng-show="component.isDependent" translate>Dependent on other package.<span></td>\n          <td ng-if="!component.isInstalled">\n            <button ng-click="web.add(component)" class="m-btn" translate>Add</button>\n          </td>\n          <td ng-if="component.isInstalled">\n            <button ng-click="web.configure(component)" class="m-btn" translate>Configure</button>\n            <button ng-disabled="component.isDependent" ng-click="web.remove(component)" class="m-btn m-btn-alert" translate>Remove</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n'),a.put("WebComponentManageDialog.html",'<div class="modal-header" translate>Install JS/CSS Component</div>\n\n<div class="modal-body" ng-show="page === \'loading\'">\n  <spinner s-type="modal" s-loading-text="{{loadingText}}"></spinner>\n</div>\n\n<!-- Confirm Install -->\n<div class="modal-body web-component-confirm" ng-show="page === \'confirm\'">\n  <p translate>The following component will be installed to your project.</p>\n  <p><strong>{{component.name}}</strong></p>\n  <p>{{description}}</p>\n\n  <section>\n    <div translate>Version:</div> &nbsp;\n    <div class="m-component-combobox">\n      <select ng-model="selectedVersion" ng-options="version as version for version in versions"></select>\n    </div>\n  </section>\n</div>\n\n<div class="modal-footer" ng-show="page === \'confirm\'">\n  <button class="m-btn m-btn-blue" ng-click="confirmInstall()" translate>Install</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n\n<!-- Configure Installed Component -->\n<div class="modal-body web-component-configure" ng-show="page === \'configure\'">\n  <div ng-repeat="data in componentData | filter: data.file">\n    <h2 class="component-file-desc"><span translate>Select files to be loaded for</span> {{data.componentKey}}</h2>\n    <div ng-if="data.files.monaca">\n      <div ng-show="data.files.monaca.main" ng-repeat="requiredItems in data.files.monaca.main" translate>Required: {{requiredItems}}</div>\n      <div ng-show="component === \'monaca-onsenui\'" translate>Please select a "*-theme.css"</div>\n\n      <div class="checkbox" ng-show="data.files.monaca.option" ng-repeat="optionalItems in data.files.monaca.option">\n        <label>\n          <input type="checkbox" ng-model="configureFormData[data.componentKey][optionalItems]" value="{{optionalItems}}"> {{optionalItems}}\n        </label>\n      </div>\n    </div>\n    <div ng-if="!data.files.monaca">\n      <div class="checkbox" ng-show="data.files.allFiles.js" ng-repeat="jsItems in data.files.allFiles.js">\n        <label>\n          <input type="checkbox" ng-model="configureFormData[data.componentKey][jsItems]" value="{{jsItems}}"> {{jsItems}}\n        </label>\n      </div>\n\n      <div class="checkbox" ng-show="data.files.allFiles.css" ng-repeat="cssItems in data.files.allFiles.css">\n        <label>\n          <input type="checkbox" ng-model="configureFormData[data.componentKey][cssItems]" value="{{cssItems}}"> {{cssItems}}\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="modal-footer" ng-show="page === \'configure\'">\n  <button class="m-btn m-btn-blue" ng-click="saveChanges()" translate>Save</button>\n  <button class="m-btn" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("WindowsAppSettings.html",'<div class="windows-app-settings" ng-controller="WindowsAppSettingsController" ng-init="init()" ng-cloak>\n    <div class="container" ng-form="form">\n        <div class="cell-build-panel add-about">\n            <div><h1 translate>Windows App Configuration</h1></div>\n            <div class="add-about-text" translate>Please input necessary configurations for building Windows application. This configuration is saved by project basis.</div>\n\n            <fieldset>\n                <legend>\n                    <div><h2 translate>Application Information</h2></div>\n                </legend>\n                <div class="config-section-panel appInfo-body tableCell-all">\n                    <div>\n                        <label translate>Application GUID:</label>\n                        <div>\n                            <input type="text" name="identity_name_winrt" ng-model="settings.identity_name_winrt" ng-pattern="/^[0-9a-zA-Z\\-\\.]+$/" class="long-text" required>\n                            <span ng-messages="form.identity_name_winrt.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>The field contains invalid characters.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div class="package-certificate-key">\n                        <label translate>Package Certificate Key:</label>\n                        <div>\n                            <input name="debug_pfx_winrt" type="file" onchange="this.files.length && angular.element(this).scope().uploadCertificate(this);this.value = \'\';" style="display:none;">\n                            <div><em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(\'debug_pfx_winrt\')"><span translate>Upload</span></button></em></div>\n                            <div><em><button class="m-btn m-btn-default" type="button" ng-click="openExportCertificateDialog()" ng-disabled="!hasPfx" disabled><span translate>Export</span></button></em></div>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>App Display Name:</label>\n                        <div>\n                            <input type="text" ng-model="settings.app_display_name_winrt" class="long-text">\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Version:</label>\n                        <div>\n                            <input type="text" name="identity_version_winrt" ng-model="settings.identity_version_winrt" ng-pattern="/^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})$/" required>\n                            <span class="config-warning" ng-show="form.identity_version_winrt.$valid && valueChanged(\'identity_version_winrt\')">\n                                <span translate>iOS/Android Version will also be changed.</span>\n                            </span>\n                            <span ng-messages="form.identity_version_winrt.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Specify three numbers separated by dots. (e.g. 1.10.2)<br>Note that each number should be in 0-99.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Package Version:</label>\n                        <div>\n                            <input type="text" name="packageVersion_winrt" ng-model="settings.packageVersion_winrt" ng-disabled="!specifyPackageVersion" ng-pattern="/^(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})$/" ng-required="specifyPackageVersion">\n                            <span ng-messages="form.packageVersion_winrt.$error" ng-show="isInitialized">\n                                <span ng-message="pattern" class="config-error" translate>Specify four numbers separated by dots. (e.g. 1.10.2.3)<br>Note that each number should be in 0-99.</span>\n                                <span ng-messages-include="common/errors.html"></span>\n                            </span>\n                            <div>\n                                <ul>\n                                    <li><input type="checkbox" ng-model="specifyPackageVersion"><label translate>Specify the numbers for package version</label></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>App Description:<span class="m-tooltip-body icon-help"><i class="m-tooltip tt-text-leftside" translate>App Description is not used in cordova6.</i></span></label>\n                        <div>\n                            <textarea ng-model="settings.app_description_winrt" rows="4" cols="64"></textarea>\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Package Publisher Name:</label>\n                        <div>\n                            <input type="text" ng-model="settings.package_publisher_display_name_winrt">\n                        </div>\n                    </div>\n                    <div>\n                        <label translate>Architecture:</label>\n                        <div class="m-component-combobox">\n                            <select ng-model="settings.app_arch_winrt" ng-options="arch.value as arch.label for arch in archList"></select>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <div><h2 translate>App Logo</h2></div>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>\n                        Only PNG format is supported. Large pictures will be auto-scaled to fit the size.\n                    </div>\n                    <div class="setFile-list-body">\n                        <div class="sfl-win-applogo">\n                            <div class="setFile-list" ng-repeat="(iconType,icon) in appLogoList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                                    <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{icon.url}}&amp;{{timestamp()}}" alt="{{iconType}}" id="image-{{iconType}}">\n                                    </a>\n                                </div>\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="icon.label"></span>{{icon.w}} x {{icon.h}}</label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                                            <input name="{{iconType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <div><h2 translate>Tile Wide Logo</h2></div>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>\n                        Only PNG format is supported. Large pictures will be auto-scaled to fit the size.\n                    </div>\n                    <div class="setFile-list-body">\n                        <div class="sfl-win-tileWide">\n                            <div class="setFile-list" ng-repeat="(iconType,icon) in tileWideLogoList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{iconType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{iconType}}">\n                                    <a ng-href="{{icon.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{icon.url}}&amp;{{timestamp()}}" alt="{{iconType}}" id="image-{{iconType}}">\n                                    </a>\n                                </div>\n                                <div class="setFile-config">\n                                    <label><span ng-bind-html="icon.label"></span>{{icon.w}} x {{icon.h}}</label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(iconType)"><span translate>Change</span></button></em>\n                                            <input name="{{iconType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <legend>\n                    <div><h2 translate>Splash</h2></div>\n                </legend>\n                <div class="config-section-panel icon-body">\n                    <div class="config-info" translate>\n                        Only PNG format is supported. Large pictures will be auto-scaled to fit the size.\n                    </div>\n                    <div class="setFile-list-body">\n                        <div class="sfl-win-splash">\n                            <div class="setFile-list" ng-repeat="(splashType,splash) in splashTypeList">\n                                <div class="setFile-loading" ng-show="!!isLoading.{{splashType}}">\n                                    <img ng-src="{{\'/img/size16/icon_loading.gif\'|cdn}}">\n                                </div>\n                                <div class="setFile-type" ng-show="!isLoading.{{splashType}}">\n                                    <a ng-href="{{splash.url}}&amp;{{timestamp()}}" target="_blank" title="Download">\n                                        <img ng-src="{{splash.url}}&amp;{{timestamp()}}" id="image-{{splashType}}">\n                                    </a>\n                                </div>\n                                <div class="setFile-config tableCell">\n                                    <label><span ng-bind-html="splash.label"></span>{{splash.w}} x {{splash.h}}</label>\n                                    <div>\n                                        <div>\n                                            <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(splashType)"><span translate>Change</span></button></em>\n                                            <input name="{{splashType}}" type="file" accept=".png,image/png" onchange="this.files.length && angular.element(this).scope().uploadImage(this);this.value = \'\';" style="display:none;">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="tableCell">\n                        <label translate>Splash Background:</label>\n                        <div>\n                            <div class="color-sample-box" ng-style="{\'background-color\': settings.app_splash_background_winrt}" onclick="this.nextElementSibling.click()"></div>\n                            <input colorpicker type="text" ng-model="settings.app_splash_background_winrt" id="app_splash_background_winrt">\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <a class="m-btn m-btn-default backButton" href="#" ng-click="backPage()" ng-show="hasPrevPage()" role="button">Back</a>\n            <button id="button-save" class="m-btn m-btn-blue m-btn-large" ng-click="submit()" disabled="disabled" ng-class="{disable: !isReadyToSave || form.$invalid}" ng-disabled="!isReadyToSave || form.$invalid" translate>Save</button>\n        </div>\n    </div>\n</div>\n'),
a.put("WindowsBuild.html",'<div ng-controller="WindowsBuildController" ng-init="init()">\n    <div class="container">\n        <div class="cell-build-panel">\n            <h1 translate>Build Windows App (preview version)</h1>\n        </div>\n\n        <div class="cell-build-panel">\n            <div class="about-container">\n                <p translate>Windows application will be built. <br />The built application can be installed on a Windows PC. Please see the documentation for installation information.</p>\n            </div>\n            <div ng-include src="\'build-problems\'"></div>\n            <div class="m-container">\n                <div class="title">\n                    <div><span translate>App Settings</span></div>\n                    <div><a class="m-btn m-btn-default-dark" ng-click="setPage(settings.Constant.PAGE_WINDOWS_APP_SETTINGS, true)" translate>Manage App Settings</a></div>\n                </div>\n                <div class="m-text">\n                    <div><p translate>App icon, splash screen, file version number etc. can be set in the Windows app settings screen.</p></div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="build-start-button-area">\n        <div class="build-start-button">\n            <button class="m-btn m-btn-blue m-btn-large" ng-click="build()" ng-disabled="!canBuild" disabled translate>Start Build</button>\n        </div>\n    </div>\n\n    <script type="text/ng-template" id="build-problems">\n        <div class="box-errorarea" ng-show="!canBuild && buildProblems.length">\n            <p translate>You do not have the necessary setting to build.</p>\n            <div class="box-errorCheckPoint">\n                <ul>\n                    <li ng-repeat="item in buildProblems">\n                        <span ng-if="!item.value && item.key == \'has_valid_cordova_version\'" translate>Windows Build requires Cordova 6.2 or later. Please upgrade cordova version.</span>\n                    </li>\n                </ul>\n            </div>\n            <p translate></p>\n        </div>\n    </script>\n\n<div>\n'),a.put("common/dialog.html",'<div class="modal-header">{{title}}</div>\n\n<div class="page-loading" ng-show="page === \'loading\'">\n  <img src="/img/services/loading-icon6.gif" />\n</div>\n\n<section class="modal-body">\n  <p ng-bind-html="message | translate"></p>\n</section>\n\n<div ng-show="dialogTemplate === \'confirm\'" class="modal-footer">\n  <button class="m-btn" type="button" ng-click="this.cancel()" translate>Cancel</button>\n  <button class="m-btn" type="button" ng-click="this.ok()" translate>OK</button>\n</div>\n\n<div ng-show="dialogTemplate === \'alert\'" class="modal-footer">\n  <button class="m-btn" type="button" ng-click="this.$close()" translate>OK</button>\n</div>\n'),a.put("common/errors.html",'<span ng-message="required" class="config-error" translate>This field is required.</span>\n<span ng-message="pattern" class="config-error" translate>The field contains invalid characters.</span>\n<span ng-message="maxlength" class="config-error" translate>Input string is too long.</span>\n<span ng-message="minlength" class="config-error" translate>Input string is too short.</span>\n<span ng-message="number" class="config-error" translate>Please use half-width numbers.</span>\n<span ng-message="email" class="config-error" translate>Invalid email address.</span>\n'),a.put("dialogs/AdHocQRCodeDialog.html",'<div class="close-x" ng-click="this.$close()"></div>\n<div class="modal-header" translate>Install via QR code</div>\n\n<section class="modal-body qr-code" ng-form="dialogForm">\n    <div>\n        <figure>\n            <img ng-src="{{qrCodeUrl}}" alt="QR Code">\n        </figure>\n    </div>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" translate>OK</button>\n</div>\n'),a.put("dialogs/CertificateExportDialog.html",'<div>\n    <div class="close-x" ng-click="this.$close()"></div>\n    <div class="modal-header" translate>Export Developer Certification(iOS)</div>\n\n    <section class="modal-body">\n        <div class="divTable">\n            <p translate>You can export the data to make a backup on your local PC.<br />You need to input password to export this file. Password will be used when importing to your computer. Blank password is not recommended.</p>\n            <div>\n                <label translate>Input Password</label>\n                <div>\n                    <input type="password" name="password" ng-model="password" placeholder="password" >\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <div class="modal-footer">\n        <button class="m-btn m-btn m-btn-default" type="button" ng-click="this.$close()" translate>Cancel</button>\n        <button class="m-btn m-btn-blue" type="button" ng-click="exportCertificate()" translate>Export</button>\n    </div>\n</div>\n'),a.put("dialogs/ConfirmApkCheckDialog.html",'<div class="modal-header">Secure Coding Checker<span style="font-size:13px;margin-left:10px;" translate>Vulnerability Assessment Service</span></div>\n\n<section class="modal-body">\n  <section>\n    <div style="margin:10px 0;line-height: 1.5em;" translate>This is a Vulnerability Assessment tool which is provided by Sony Digital Network Application, Inc.</div>\n    <div style="margin:17px 0;line-height: 1.5em;" translate>\n    If so, please be aware that currently Monaca only uses a trial version of this service.\n    By continuing to use this service, you agree to <a href="https://cxt.scc.sonydna.com/Content/TermsOfService-scc-cxt-en.pdf" target="_blank">the Sony Digital Network Application\'s terms of service</a>.</div>\n    <div style="margin:10px 0;line-height: 1.5em;" translate>For more information, please refer to <a href="http://www.sonydna.com/sdna/e/solution/scc.html" target="_blank">Secure Code Checker</a>.</div>\n  </section>\n</section>\n\n<div class="modal-footer">\n  <button class="m-btn" type="button" ng-click="this.$close()" translate>Cancel</button>\n  <button class="m-btn m-btn-blue" type="button" ng-click="ok()" ng-disable="!selected_service" translate>Start</button>\n</div>\n'),a.put("dialogs/CsrExportDialog.html",'<div>\n    <div class="close-x" ng-click="this.$close()"></div>\n    <div class="modal-header" translate>CSR(iOS) Export</div>\n\n    <section class="modal-body">\n        <div>\n\t        <p translate>For the purposes of generating a certificate via the Apple Developer Program, a CSR file will be prepared. <br /> For detailed usage information, please see <a href="https://docs.monaca.io/en/maual/build/ios/build_ios" target="_blank">help</a>.</p>\n        <div>\n    </section>\n\n    <div class="modal-footer">\n        <button class="m-btn m-btn m-btn-default" type="button" ng-click="this.$close()" translate>Cancel</button>\n        <button class="m-btn m-btn-blue" type="button" ng-click="exportCsr()" translate>Export</button>\n    </div>\n</div>\n'),a.put("dialogs/KeyStoreAddAliasDialog.html",'<div class="close-x" ng-click="cancel()"></div>\n<div class="modal-header" translate>Add Alias</div>\n\n<div class="page-loading" ng-show="page === \'loading\' || page === \'committing\'">\n    <img ng-src="{{\'/img/size32/icon_loading.gif\'|cdn}}">\n</div>\n\n<section class="modal-body" ng-form="dialogForm">\n    <div class="divTable middleTitle">\n        <div>\n            <label><strong translate>Alias Name :</strong></label>\n            <div>\n                <input type="text" name="name" ng-model="name" placeholder="alias" required>\n                <span ng-messages="dialogForm.name.$error" ng-show="dialogForm.name.$dirty" ng-cloak>\n                    <span ng-message="required" class="config-error">This field is required</span>\n                    <span ng-message="minlength" class="config-error">The minimum length for this field is 6</span>\n                </span>\n            </div>\n        </div>\n        <div>\n            <label><strong translate>Alias Password :</strong></label>\n            <div>\n                <input type="text" name="password" ng-model="password" placeholder="password" ng-minlength="6" required>\n                <span ng-messages="dialogForm.password.$error" ng-show="dialogForm.password.$dirty" ng-cloak>\n                    <span ng-message="required" class="config-error">This field is required</span>\n                    <span ng-message="minlength" class="config-error">The minimum length for this field is 6</span>\n                </span>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn m-btn m-btn-default" type="button" ng-click="cancel()" translate>Cancel</button>\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" ng-disabled="dialogForm.$invalid" translate>Add Alias</button>\n</div>\n'),a.put("dialogs/KeyStoreExportDialog.html",'<div class="close-x" ng-click="cancel()"></div>\n<div class="modal-header" translate>Export KeyStore (Android)</div>\n\n<div class="page-loading" ng-show="page === \'loading\' || page === \'committing\'">\n    <img ng-src="{{\'/img/size32/icon_loading.gif\'|cdn}}">\n</div>\n\n<section class="modal-body" ng-form="dialogForm">\n    <div>\n        <p translate>Are you sure to export this file?</p>\n    </div>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn monaca-btn-gray" type="button" ng-click="cancel()" translate>Cancel</button>\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" translate>Export</button>\n</div>\n'),a.put("dialogs/KeyStoreGeneratorDialog.html",'<div class="close-x" ng-click="cancel()"></div>\n<div class="modal-header" translate>Generate KeyStore</div>\n\n<div class="page-loading" ng-show="page === \'loading\' || page === \'committing\'">\n    <img ng-src="{{\'/img/size32/icon_loading.gif\'|cdn}}">\n</div>\n\n<section class="modal-body" ng-form="dialogForm">\n    <section>\n        <p translate>Please input information for Alias which will be stored in KeyStore. Please input Alias name and password.</p>\n        <div class="divTable longTitle">\n            <div>\n                <label><strong translate>Alias Name&nbsp;:</strong></label>\n                <div>\n                    <input type="text" name="alias_name" ng-model="alias_name" placeholder="alias" required>\n                    <span ng-messages="dialogForm.alias_name.$error" ng-show="dialogForm.alias_name.$dirty" ng-cloak>\n                        <span ng-message="required" class="config-error">This field is required</span>\n                    </span>\n                </div>\n            </div>\n            <div>\n                <label><strong translate>Alias Password&nbsp;:</strong></label>\n                <div>\n                    <input type="password" name="alias_password" ng-model="alias_password" placeholder="password" ng-minlength="6" required>\n                    <span ng-messages="dialogForm.alias_password.$error" ng-show="dialogForm.alias_password.$dirty" ng-cloak>\n                        <span ng-message="required" class="config-error">This field is required</span>\n                        <span ng-message="minlength" class="config-error">The minimum length for this field is 6</span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section class="section-end">\n        <p translate>KeyStore contains Alias to code-sign release build apps. For security, KeyStore should be protected by password.</p>\n        <div class="divTable longTitle">\n            <div>\n                <label><strong translate>Please input password for KeyStore&nbsp;:</strong></label>\n                <div>\n                    <input type="password" name="keystore_password" ng-model="keystore_password" placeholder="password" ng-minlength="6" required>\n                    <span ng-messages="dialogForm.keystore_password.$error" ng-show="dialogForm.keystore_password.$dirty" ng-cloak>\n                        <span ng-message="required" class="config-error">This field is required</span>\n                        <span ng-message="minlength" class="config-error">The minimum length for this field is 6</span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </section>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn m-btn m-btn-default" type="button" ng-click="cancel()" translate>Cancel</button>\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" ng-disabled="dialogForm.$invalid" disabled translate>Generate KeyStore and Alias</button>\n</div>\n'),a.put("dialogs/KeyStoreImportDialog.html",'<div class="close-x" ng-click="cancel()"></div>\n<div class="modal-header" translate>Import KeyStore (Android)</div>\n\n<div class="page-loading" ng-show="page === \'loading\' || page === \'committing\'">\n    <img ng-src="{{\'/img/size32/icon_loading.gif\'|cdn}}">\n</div>\n\n<section class="modal-body" ng-form="dialogForm">\n    <div class="divTable middleTitle">\n        <section>\n            <p translate>You can import KeyStore file from other source (eclipse). Please refer to the manual for details.</p>\n            <div>\n                <label>KeyStore file&nbsp;:</label>\n                <div>\n                    <input type="text" name="filePath" ng-model="filePath" readonly required>\n                    <em><button class="m-btn m-btn-default-dark" type="button" ng-click="openFileDialog(\'file\')"><span translate>Browse</span></button></em>\n                    <input name="file" type="file" onchange="this.files.length && angular.element(this).scope().selectFile(this);this.value = \'\';" style="display:none;">\n                    <span ng-messages="dialogForm.filePath.$error" ng-show="dialogForm.filePath.$dirty">\n                        <span ng-message="required" class="config-error">This field is required</span>\n                    </span>\n                </div>\n            </div>\n            <div>\n                <label class="lh-clear" translate>Please input password <br />for KeyStore&nbsp;:</label>\n                <div>\n                    <input type="password" name="password" ng-model="password" required>\n                    <span ng-messages="dialogForm.password.$error" ng-show="dialogForm.password.$dirty">\n                        <span ng-message="required" class="config-error">This field is required</span>\n                    </span>\n                </div>\n            </div>\n        </section>\n    </div>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn monaca-btn-gray" type="button" ng-click="cancel()" translate>Cancel</button>\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" ng-disabled="dialogForm.$invalid" translate>Import</button>\n</div>\n'),a.put("dialogs/PackageCertificateExportDialog.html",'<div class="close-x" ng-click="cancel()"></div>\n<div class="modal-header" translate>Export Package Certificate Key</div>\n\n<div class="page-loading" ng-show="page === \'loading\' || page === \'committing\'">\n    <img ng-src="{{\'/img/size32/icon_loading.gif\'|cdn}}">\n</div>\n\n<section class="modal-body" ng-form="dialogForm">\n    <div>\n        <p translate>You can export the data to make a backup on your local PC.</p>\n    </div>\n</section>\n\n<div class="modal-footer">\n    <button class="m-btn m-btn m-btn-default" type="button" ng-click="cancel()" translate>Cancel</button>\n    <button class="m-btn m-btn-blue" type="button" ng-click="ok()" translate>Export</button>\n</div>\n'),a.put("dialogs/PrivateKeyAndCsrGeneratorDialog.html",'<div class="close-x" ng-click="this.$close()"></div>\n<div ng-show="page == \'input\'">\n    <div class="modal-header" translate>Generate Private Key and CSR</div>\n\n    <section class="modal-body" ng-form="dialogForm">\n        <section class="section-end">\n        <p translate>Please input your name and email address which match with your iTunes Connect Record.</p>\n        <div class="divTable longTitle">\n            <div>\n                <label class="lh-clear"><strong translate>User Name:</strong></label>\n                <div>\n                    <input type="text" name="adcUsername_ios" placeholder="Monaca Tarou" ng-model="adcUsername_ios" required>\n                    <span ng-messages="dialogForm.adcUsername_ios.$error" ng-show="dialogForm.adcUsername_ios.$dirty" ng-cloak>\n                        <span ng-messages-include="common/errors.html"></span>\n                    </span>\n                </div>\n            </div>\n            <div>\n                <label class="lh-clear"><strong translate>Email Address:</strong></label>\n                <div>\n                    <input type="email" name="adcMailAddress_ios" placeholder="example@monaca.mobi" ng-model="adcMailAddress_ios" required>\n                    <span ng-messages="dialogForm.adcMailAddress_ios.$error" ng-show="dialogForm.adcMailAddress_ios.$dirty" ng-cloak>\n                        <span ng-messages-include="common/errors.html"></span>\n                    </span>\n                </div>\n            </div>\n            <div>\n                <label><strong translate>Country:</strong></label>\n                <div class="m-component-combobox">\n                    <select ng-model="country" ng-options="item.code as item.label for item in countryList | orderBy: lang"></select>\n                </div>\n            </div>\n        </div>\n        </section>\n    </section>\n\n    <div class="modal-footer">\n        <button class="m-btn m-btn-default" type="button" ng-click="this.$close()" translate>Cancel</button>\n        <button class="m-btn m-btn-blue" type="button" ng-click="generatePrivateKeyAndCSR()" ng-disabled="dialogForm.$invalid" translate>Generate Key and CSR</button>\n    </div>\n</div>\n\n<div ng-show="page == \'success\'">\n    <div class="modal-header">CSR has been generated.</div>\n\n    <section class="modal-body">\n        <div>\n            <p translate>CSR has been generated. <br>Please upload generated CSR to Apple Developer Program to issue certificate.</p>\n        </div>\n    </section>\n\n    <div class="modal-footer">\n        <button class="m-btn m-btn-blue" type="button" ng-click="exportCsr()">Download CSR</button>\n    </div>\n</div>\n\n'),a.put("dialogs/PrivateKeyImportDialog.html",'<div>\n    <div class="close-x" ng-click="this.$close()"></div>\n    <div class="modal-header" translate>Import Private Key</div>\n\n    <section class="modal-body" ng-form="dialogForm">\n        <div class="divTable">\n            <p translate>You can import private key exported from Key Chain Access (Mac OS X). Please refer to the manual for details.</p>\n            <div>\n                <label translate>Key (PKCS#12 .p12):</label>\n                <div>\n                    <input type="text" name="selectedFilePath" ng-model="selectedFilePath" disabled required>\n                    <em><button class="m-btn m-btn-default" type="button" ng-click="openFileDialog(\'file\')"><span translate>Browse</span></button></em>\n                    <input name="file" type="file" accept=".p12" onchange="this.files.length && angular.element(this).scope().selectFile(this);this.value = \'\';" style="display:none;">\n                    <span ng-messages="dialogForm.selectedFilePath.$error" ng-show="dialogForm.selectedFilePath.$dirty" ng-cloak>\n                        <span ng-message="required" class="config-error">This field is required</span>\n                    </span>\n                </div>\n            </div>\n            <div>\n                <label translate>Password for the Key:</label>\n                <div>\n                    <input type="password" name="password" ng-model="password">\n                    <span ng-messages="dialogForm.password.$error" ng-show="dialogForm.password.$dirty" ng-cloak>\n                        <span ng-message="required" class="config-error">This field is required</span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <div class="modal-footer">\n        <button class="m-btn m-btn m-btn-default" type="button" ng-click="this.$close()" translate>Cancel</button>\n        <button class="m-btn m-btn-blue" type="button" ng-click="importPrivateKey()" ng-disabled="dialogForm.$invalid" translate>Import</button>\n    </div>\n</div>\n\n'),a.put("dialogs/SendManualDeployServiceRequest.html",'<div class="modal-header" translate>Manual Deploy Service</div>\n\n<section class="modal-body">\n  <section>\n    <h1 translate>Service Provider Information</h1>\n    <div class="divTable">\n      <div><label><strong translate>Deploy Service:</strong></label> <div><i>{{service.service_type}}</i></div></div>\n      <div><label><strong translate>Alias:</strong></label> <div><i>{{service.alias}}</i></div></div>\n    </div>\n  </section>\n  <section class="section-end">\n    <h1 translate>Optional Parameter Entry</h1>\n    <p translate>For more information on third-party distribution service\'s optional parameters, please visit <a href="https://docs.monaca.io/en/products_guide/monaca_ide/monaca_ci/supported_services/">Monaca Support Docs</a>.</p>\n    <textarea ng-model="serviceOptionalParameters"></textarea>\n  </section>\n</section>\n\n<div class="modal-footer">\n  <button class="m-btn" type="button" ng-click="this.$close()" translate>Cancel</button>\n  <button class="m-btn m-btn-blue" type="button" ng-click="sendToDeployService()" ng-disable="!selected_service" translate>Deploy</button>\n</div>\n'),a.put("dialogs/ViewManualDeployServiceLog.html",'<div class="modal-header" translate>Manual Deploy Service Log</div>\n\n<section class="modal-body">\n  <textarea style="height: 150px; width: 100%;" ng-model="service.manualProcessResults" readonly></textarea>\n</section>\n\n<div class="modal-footer">\n  <button class="m-btn" type="button" ng-click="this.$close()" translate>Cancel</button>\n</div>\n'),a.put("index.html",'<toast></toast>\n<div class="app-loading" ng-show="page === \'loading\'">\n    <spinner s-loading-text="Loading Project Settings..."></spinner>\n</div>\n\n<header ng-show="!settings.hideHeaderbar">\n  <img src="/img/header_logo.svg" />\n  <div class="project-name">{{projectName}}</div>\n</header>\n\n<nav ng-show="page !== \'loading\' && !settings.hideSidebar" ng-class="{\'hide-headerbar\': settings.hideHeaderbar}">\n    <h2 translate>Build &amp; Build Settings</h2>\n    <ul>\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_ANDROID_BUILD || page === settings.Constant.PAGE_ANDROID_BUILD_SETTINGS}" ng-click="setPage(settings.Constant.PAGE_ANDROID_BUILD)" translate>Android</li>\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_IOS_BUILD || page === settings.Constant.PAGE_IOS_BUILD_SETTINGS}"         ng-click="setPage(settings.Constant.PAGE_IOS_BUILD)" translate>iOS</li>\n        <li ng-hide="isRPGUser || isReactNative" ng-class="{\'selected\': page === settings.Constant.PAGE_WINDOWS_BUILD}"                                                           ng-click="setPage(settings.Constant.PAGE_WINDOWS_BUILD)" translate>Windows</li>\n\n        <li ng-show="hasPwaBuildSupport && !isReactNative" ng-class="{\'selected\': page === settings.Constant.PAGE_WEB_BUILD}" ng-click="setPage(settings.Constant.PAGE_WEB_BUILD)" translate>Web</li>\n    </ul>\n\n    <h2 ng-hide="isReactNative" translate>App Settings</h2>\n    <ul ng-hide="isReactNative">\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_ANDROID_APP_SETTINGS}" ng-click="setPage(settings.Constant.PAGE_ANDROID_APP_SETTINGS)" translate>Android</li>\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_IOS_APP_SETTINGS}"     ng-click="setPage(settings.Constant.PAGE_IOS_APP_SETTINGS)" translate>iOS</li>\n        <li ng-hide="isRPGUser" ng-class="{\'selected\': page === settings.Constant.PAGE_WINDOWS_APP_SETTINGS}" ng-click="setPage(settings.Constant.PAGE_WINDOWS_APP_SETTINGS)" translate>Windows</li>\n\n        <li ng-show="hasPwaBuildSupport" ng-class="{\'selected\': page === settings.Constant.PAGE_WEB_APP_SETTINGS}" ng-click="setPage(settings.Constant.PAGE_WEB_APP_SETTINGS)" translate>Web</li>\n    </ul>\n\n    <h2 translate ng-hide="isRPGUser || isReactNative">Project</h2>\n    <ul ng-hide="isRPGUser || isReactNative">\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_CORDOVA_PLUGINS}"      ng-click="setPage(settings.Constant.PAGE_CORDOVA_PLUGINS)" translate>Cordova Plugins</li>\n        <li ng-show="hasWebComponentSupport"  ng-class="{\'selected\': page === settings.Constant.PAGE_WEB_COMPONENTS}"       ng-click="setPage(settings.Constant.PAGE_WEB_COMPONENTS)" translate>JS/CSS Components</li>\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_SERVICE_INTEGRATION}"  ng-click="setPage(settings.Constant.PAGE_SERVICE_INTEGRATION)" translate>Service Integrations</li>\n    </ul>\n\n    <h2 translate ng-hide="fromLocalkit || isRPGUser || isReactNative">Build</h2>\n    <ul ng-hide="fromLocalkit || isRPGUser || isReactNative">\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_CI}"                   ng-click="setPage(settings.Constant.PAGE_CI)" translate>Continuous Integration <sup class="beta">BETA</sup></li>\n    </ul>\n\n    <h2 ng-hide="fromLocalkit || isRPGUser || isReactNative" translate>Service</h2>\n    <ul ng-hide="fromLocalkit || isRPGUser || isReactNative">\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_DEPLOY_SERVICE}"       ng-click="setPage(settings.Constant.PAGE_DEPLOY_SERVICE)" translate>Deploy Services<sup class="beta">BETA</sup></li>\n    </ul>\n\n    <h2  translate ng-show="isRPGUser || isReactNative">Log</h2>\n    <ul>\n        <li ng-class="{\'selected\': page === settings.Constant.PAGE_BUILD_HISTORY}"       ng-click="setPage(settings.Constant.PAGE_BUILD_HISTORY)" translate>Build History</li>\n    </ul>\n</nav>\n\n<main class="content" ng-show="page != \'loading\'" ng-class="{\'hide-headerbar\': settings.hideHeaderbar, \'hide-sidebar\': settings.hideSidebar}">\n    <!-- Settings Page Containers -->\n    <div class="build-setting"                               ng-include="\'BuildHistory.html\'"          ng-if="page === settings.Constant.PAGE_BUILD_HISTORY"></div>\n    <div class="build-setting"                               ng-include="\'AndroidBuild.html\'"          ng-if="page === settings.Constant.PAGE_ANDROID_BUILD"></div>\n    <div class="build-setting"                               ng-include="\'IosBuild.html\'"              ng-if="page === settings.Constant.PAGE_IOS_BUILD"></div>\n    <div class="build-setting"                               ng-include="\'WindowsBuild.html\'"          ng-if="page === settings.Constant.PAGE_WINDOWS_BUILD"></div>\n    <div class="build-setting"                               ng-include="\'WebBuild.html\'"              ng-if="page === settings.Constant.PAGE_WEB_BUILD"></div>\n    <div class="app-setting"                                 ng-include="\'AndroidAppSettings.html\'"    ng-if="page === settings.Constant.PAGE_ANDROID_APP_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'IosAppSettings.html\'"        ng-if="page === settings.Constant.PAGE_IOS_APP_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'WindowsAppSettings.html\'"    ng-if="page === settings.Constant.PAGE_WINDOWS_APP_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'WebAppSettings.html\'"        ng-if="page === settings.Constant.PAGE_WEB_APP_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'AndroidBuildSettings.html\'"  ng-if="page === settings.Constant.PAGE_ANDROID_BUILD_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'IosBuildSettings.html\'"      ng-if="page === settings.Constant.PAGE_IOS_BUILD_SETTINGS"></div>\n    <div class="app-setting"                                 ng-include="\'BuildResult.html\'"           ng-if="page === settings.Constant.PAGE_BUILD_RESULT"></div>\n    <div ng-controller="CordovaPluginsController as cordova" ng-include="\'CordovaPlugins.html\'"        ng-if="page === settings.Constant.PAGE_CORDOVA_PLUGINS"></div>\n    <div                                                     ng-include="\'WebComponent.html\'"          ng-if="page === settings.Constant.PAGE_WEB_COMPONENTS"></div>\n    <div                                                     ng-include="\'ServiceIntegration.html\'"    ng-if="page === settings.Constant.PAGE_SERVICE_INTEGRATION"></div>\n    <div                                                     ng-include="\'ContinuousIntegration.html\'" ng-if="page === settings.Constant.PAGE_CI && !fromLocalkit"></div>\n    <div                                                     ng-include="\'DeployService.html\'"         ng-if="page === settings.Constant.PAGE_DEPLOY_SERVICE && !fromLocalkit"></div>\n</main>\n')}]);